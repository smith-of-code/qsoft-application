this.zolo = this.zolo || {};
(function (exports,ui_vue3_pinia) {
    'use strict';

    function _regeneratorRuntime() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var useLoyaltySalesReportStore = ui_vue3_pinia.defineStore('loyaltySalesReport', {
      actions: {
        getDataByPeriod: function getDataByPeriod(from, to) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return BX.ajax.runComponentAction('zolo:loyalty.sales.report', 'getDataByPeriod', {
                      mode: 'class',
                      data: {
                        from: from,
                        to: to
                      }
                    });

                  case 2:
                    return _context.abrupt("return", _context.sent);

                  case 3:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        getTeamMembersDataByPeriod: function getTeamMembersDataByPeriod(ids, from, to) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return BX.ajax.runComponentAction('zolo:loyalty.sales.report', 'getTeamMembersDataByPeriod', {
                      mode: 'class',
                      data: {
                        ids: ids,
                        from: from,
                        to: to
                      }
                    });

                  case 2:
                    return _context2.abrupt("return", _context2.sent);

                  case 3:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }))();
        }
      }
    });

    var NumberFormatMixin = {
      methods: {
        formatNumber: function formatNumber(number) {
          var useDecimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          if (!number) return 0;
          number = Math.round(parseFloat(number));
          var result = number.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, "$&\xA0");
          return useDecimals ? result : result.substring(0, result.length - 3);
        }
      }
    };

    var LoyaltyStatusTale = {
      mixins: [NumberFormatMixin],
      props: {
        currentValue: {
          type: Number,
          required: true
        },
        targetValue: {
          type: Number,
          required: true
        },
        label: {
          type: String,
          required: true
        },
        isHold: {
          type: Boolean,
          "default": true
        },
        isConsultant: {
          type: Boolean,
          "default": true
        }
      },
      template: "\n        <div v-if=\"targetValue > 0\" class=\"card-progress card-progress--unbordered\">\n            <div class=\"card-progress__inner\">\n                <p class=\"card-progress__title\">\n                    {{ label }}\n                </p>\n                <div v-if=\"currentValue / targetValue < 0.5\" class=\"card-progress__mark\">\n                    <svg class=\"card-progress__icon icon icon--cat-serious\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-sad\"></use>\n                    </svg>\n                    <span class=\"card-progress__mark-text\">\n                        \u041D\u0443\u0436\u043D\u043E \u0431\u043E\u043B\u044C\u0448\u0435 \u0443\u0441\u0438\u043B\u0438\u0439\n                    </span>\n                </div>\n                <div v-else-if=\"currentValue / targetValue < 1\" class=\"card-progress__mark\">\n                    <svg class=\"card-progress__icon icon icon--cat-serious\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-serious\"></use>\n                    </svg>\n                    <span class=\"card-progress__mark-text\">\n                        \u0425\u043E\u0440\u043E\u0448\u043E \u043F\u043E\u043B\u0443\u0447\u0430\u0435\u0442\u0441\u044F\n                    </span>\n                </div>\n                <div v-else-if=\"currentValue / targetValue == 1\" class=\"card-progress__mark\">\n                    <svg class=\"card-progress__icon icon icon--cat-serious\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-smile\"></use>\n                    </svg>\n                    <span class=\"card-progress__mark-text\">\n                        \u0426\u0435\u043B\u044C \u0434\u043E\u0441\u0442\u0438\u0433\u043D\u0443\u0442\u0430\n                    </span>\n                </div>\n                <div v-else class=\"card-progress__mark\">\n                    <svg class=\"card-progress__icon icon icon--cat-serious\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-happy\"></use>\n                    </svg>\n                    <span class=\"card-progress__mark-text\">\n                        \u041F\u0440\u043E\u0441\u0442\u043E \u0444\u0430\u043D\u0442\u0430\u0441\u0442\u0438\u043A\u0430\n                    </span>\n                </div>\n                <div class=\"card-progress__wrapper\">\n                    <div class=\"card-progress__progress progress-bar\">\n                        <div\n                            class=\"progress-bar__filler\"\n                            :style=\"{ width: ((currentValue * 100 / targetValue) < 100 ? (currentValue * 100 / targetValue) : 100) + '%' }\"\n                            :class=\"{ \n                                'progress-bar__filler--green': targetValue - currentValue <= 0,\n                                'progress-bar__filler--red': targetValue - currentValue > 0,\n                             }\"\n                        ></div>\n                    </div>\n                    <div class=\"card-progress__bottom\">\n                        <div class=\"card-progress__amount amount\">\n                            <p\n                                class=\"amount__target\"\n                                :class=\"{\n                                    'amount__target--green': targetValue - currentValue <= 0,\n                                    'amount__target--red': targetValue - currentValue > 0,\n                                }\"\n                            >\n                                {{ formatNumber(currentValue) }} \u20BD\n                            </p>\n                            <p class=\"amount__total\">\n                                \u0438\u0437 {{ formatNumber(targetValue) }} \u20BD\n                            </p>\n                        </div>\n                        <div v-if=\"targetValue - currentValue > 0\" class=\"card-progress__status\">\n                            <p class=\"card-progress__text\">\n                                \u041E\u0441\u0442\u0430\u043B\u043E\u0441\u044C {{ formatNumber(targetValue - currentValue) }}&nbsp;\u20BD\n                            </p>\n                        </div>\n                        <div v-else-if=\"targetValue - currentValue == 0\" class=\"card-progress__status\">\n                            <p class=\"card-progress__text\">\n                                \u0412\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u043E\n                            </p>\n                        </div>\n                        <div v-else class=\"card-progress__status\">\n                            <p class=\"card-progress__text\">\n                                \u041F\u0435\u0440\u0435\u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u043E \u043D\u0430  {{ formatNumber(currentValue - targetValue) }}&nbsp;\u20BD\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-progress__warning warning\">\n                    <div class=\"warning__mark\">\n                        <button type=\"button\" class=\"button button--iconed button--simple button--red\" data-fancybox=\"\" data-modal-type=\"modal\" :data-src=\"isHold ? '#hold-conditions' : '#upgrade-conditions'\">\n                            <span class=\"button__icon\">\n                                <svg class=\"icon icon--basket warning__icon\">\n                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-attention\"></use>\n                                </svg>\n                            </span>\n                        </button>\n                    </div>\n                    \n                    <p class=\"warning__text\">\n                        {{ isHold ? isConsultant ? '\u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F' : '\u0423\u0441\u043B\u043E\u0432\u0438\u044F \u0443\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0441\u043A\u0438\u0434\u043A\u0438' : '\u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F' }}\n                    </p>\n                </div>\n                <article v-if=\"isHold\" id=\"hold-conditions\" class=\"modal modal--full box box--circle box--hanging\" style=\"display: none\">\n                    <div class=\"modal__content\">\n                        <header class=\"modal__section modal__section--header\">\n                            <p class=\"heading heading--average\">\u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F</p>\n                        </header>\n\n                        <section class=\"modal__section modal__section--content\">\n                            <div class=\"conditions\">\n                                <div class=\"conditions__block\">\n                                    <h5 class=\"conditions__title\">\n                                        \u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u0434\u043B\u044F {{isConsultant ? \"\u041A1\" : \"\u04121\"}}:\n                                    </h5>\n                                    <ul class=\"conditions__list\">\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u043E\u0431\u0449\u0443\u044E \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(5000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n                                    </ul>\n                                </div>\n\n                                <div class=\"conditions__block\">\n                                    <h5 class=\"conditions__title\">\n                                        \u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u0434\u043B\u044F {{isConsultant ? \"\u041A2\" : \"\u04122\"}} (\u0435\u0434\u0438\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0435 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u0432\u0441\u0435\u0445 \u0443\u0441\u043B\u043E\u0432\u0438\u0439):\n                                    </h5>\n\n                                    <ul class=\"conditions__list\">\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(5000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u043A\u0430\u0436\u0434\u044B\u0439 \u043C\u0435\u0441\u044F\u0446 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(7000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u043A\u0430\u0436\u0434\u044B\u0439 \u043C\u0435\u0441\u044F\u0446 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n                                    </ul>\n\n                                    <p class=\"conditions__text\">\u041F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A2\" : \"\u04122\"}} \u0432\u043E\u0437\u043C\u043E\u0436\u0435\u043D \u0432 \u0442\u0435\u0447\u0435\u043D\u0438\u0435 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0435\u0432 \u043F\u0440\u0438 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u0435\u0440\u0435\u0445\u043E\u0434\u0430 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A2\" : \"\u04122\"}};\n                                    </p>\n                                    <p class=\"conditions__text\">\u041F\u0440\u0438 \u043D\u0435\u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F {{isConsultant ? \"\u041A2\" : \"\u04122\"}} \u0431\u0443\u0434\u0435\u0442 \u0432\u044B\u043F\u043E\u043B\u043D\u044F\u0442\u044C\u0441\u044F \u043F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A1\" : \"\u04121\"}}.</p>\n                                </div>\n\n                                <div class=\"conditions__block\">\n                                    <h5 class=\"conditions__title\">\n                                        \u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u0434\u043B\u044F {{isConsultant ? \"\u041A3\" : \"\u04123\"}} (\u0435\u0434\u0438\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0435 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u0432\u0441\u0435\u0445 \u0443\u0441\u043B\u043E\u0432\u0438\u0439):\n                                    </h5>\n\n                                    <ul class=\"conditions__list\">\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(10000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u043A\u0430\u0436\u0434\u044B\u0439 \u043C\u0435\u0441\u044F\u0446 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(20000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u043A\u0430\u0436\u0434\u044B\u0439 \u043C\u0435\u0441\u044F\u0446 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n                                    </ul>\n\n                                    <p class=\"conditions__text\">\u041F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A3\" : \"\u04123\"}} \u0432\u043E\u0437\u043C\u043E\u0436\u0435\u043D \u0432 \u0442\u0435\u0447\u0435\u043D\u0438\u0435 6 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0435\u0432 \u043F\u0440\u0438 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u0435\u0440\u0435\u0445\u043E\u0434\u0430 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A3\" : \"\u04123\"}};\n\n                                    </p>\n                                    <p class=\"conditions__text\">\u041F\u0440\u0438 \u043D\u0435\u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F {{isConsultant ? \"\u041A3\" : \"\u04123\"}} \u0431\u0443\u0434\u0435\u0442 \u0432\u044B\u043F\u043E\u043B\u043D\u044F\u0442\u044C\u0441\u044F \u043F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A2\" : \"\u04122\"}}.</p>\n                                </div>\n                            </div>\n                        </section>\n                    </div>\n                </article>\n                <article v-else id=\"upgrade-conditions\" class=\"modal modal--full box box--circle box--hanging\" style=\"display: none\">\n                    <div class=\"modal__content\">\n                        <header class=\"modal__section modal__section--header\">\n                            <p class=\"heading heading--average\">\u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F</p>\n                        </header>\n\n                        <section class=\"modal__section modal__section--content\">\n                            <div class=\"conditions\">\n                                <div class=\"conditions__block\">\n                                    <h5 class=\"conditions__title\">\n                                        \u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u0434\u043E {{isConsultant ? \"\u041A2\" : \"\u04122\"}} (\u0435\u0434\u0438\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0435 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u0432\u0441\u0435\u0445 \u0443\u0441\u043B\u043E\u0432\u0438\u0439):\n                                    </h5>\n\n                                    <ul class=\"conditions__list\">\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u043E\u0431\u0449\u0443\u044E \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(10000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u043E\u0431\u0449\u0443\u044E \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(10000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n                                    </ul>\n\n                                    <p class=\"conditions__text\">\u041F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A2\" : \"\u04122\"}} \u0432\u043E\u0437\u043C\u043E\u0436\u0435\u043D \u0432 \u0442\u0435\u0447\u0435\u043D\u0438\u0435 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0435\u0432 \u043F\u0440\u0438 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u0435\u0440\u0435\u0445\u043E\u0434\u0430 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A2\" : \"\u04122\"}};</p>\n                                </div>\n\n                                <div class=\"conditions__block\">\n                                    <h5 class=\"conditions__title\">\n                                        \u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u0434\u043E {{isConsultant ? \"\u041A3\" : \"\u04123\"}} (\u0435\u0434\u0438\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0435 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u0432\u0441\u0435\u0445 \u0443\u0441\u043B\u043E\u0432\u0438\u0439):\n                                    </h5>\n\n                                    <ul class=\"conditions__list\">\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u043E\u0431\u0449\u0443\u044E \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(50000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 6 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u0434\u0432\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\u0430);\n                                        </li>\n\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u043E\u0431\u0449\u0443\u044E \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(100000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 6 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u0434\u0432\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\u0430);\n                                        </li>\n                                    </ul>\n\n                                    <p class=\"conditions__text\">\u041F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A3\" : \"\u04123\"}} \u0432\u043E\u0437\u043C\u043E\u0436\u0435\u043D \u0432 \u0442\u0435\u0447\u0435\u043D\u0438\u0435 6 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0435\u0432 \u043F\u0440\u0438 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u0435\u0440\u0435\u0445\u043E\u0434\u0430 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A3\" : \"\u04123\"}};</p>\n                                </div>\n                            </div>\n                        </section>\n                    </div>\n                </article>\n            </div>\n        </div>\n        <div v-else class=\"card-progress card-progress--success card-progress--unbordered\">\n            <div class=\"card-progress__inner card-progress__inner--columed\">\n                <div class=\"card-progress__image\">\n                    <svg class=\"card-progress__image-pic icon icon--cat-cheerful\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-cheerful\"></use>\n                    </svg>\n                </div>\n                <p class=\"card-progress__text\">\u0423 \u0412\u0430\u0441 \u043C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u044B\u0439 \u0443\u0440\u043E\u0432\u0435\u043D\u044C</p>\n            </div>\n        </div>\n    "
    };

    var OrdersReport = {
      mixins: [NumberFormatMixin],
      data: function data() {
        return {
          label: this.isGroup ? 'групповых' : 'личных',
          label2: this.isGroup ? 'группового' : 'личного'
        };
      },
      props: {
        ordersReport: {
          type: Object,
          required: true
        },
        isGroup: {
          type: Boolean,
          "default": false
        }
      },
      methods: {
        showPriceWhole: function showPriceWhole(item) {
          var number = parseFloat(item);
          var numberFloor = Math.floor(number);
          return numberFloor.toLocaleString('ru-RU', {
            minimumFractionDigits: 0
          });
        },
        showPriceRemains: function showPriceRemains(item) {
          var number = parseFloat(item);
          var numberFixed = number.toFixed(2);
          var totalRemains = numberFixed.toString().split('.')[1];

          if (totalRemains === "00") {
            return;
          } else {
            return ',' + totalRemains;
          }
        }
      },
      template: "\n        <div class=\"participant__block\">\n            <!--\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u044B-->\n            <div class=\"results\">\n                <ul class=\"results__list\">\n                    <li class=\"results__item\">\n                        <!--\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442-->\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u0421\u0443\u043C\u043C\u0430 \u0432\u0441\u0435\u0445 {{ label }} \u0437\u0430\u043A\u0430\u0437\u043E\u0432</p>\n                                <p class=\"result__total\">{{ formatNumber(ordersReport.total_sum) }} \u20BD</p>\n                            </div>\n                        </div>\n                        <!--/\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442-->\n                    </li>\n\n                    <li class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u0421\u0443\u043C\u043C\u0430 {{ label }} \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0437\u0430 \u0442\u0435\u043A\u0443\u0449\u0438\u0439 \u043E\u0442\u0447\u0435\u0442\u043D\u044B\u0439 \u043F\u0435\u0440\u0438\u043E\u0434</p>\n                                <p class=\"result__total\">{{ formatNumber(ordersReport.current_period_sum) }} \u20BD</p>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li v-if=\"ordersReport.current_period_bonuses\" class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u0421\u0443\u043C\u043C\u0430 {{ label }} \u0431\u0430\u043B\u043B\u043E\u0432 \u0437\u0430 \u0442\u0435\u043A\u0443\u0449\u0438\u0439 \u043F\u0435\u0440\u0438\u043E\u0434</p>\n                                <p class=\"result__total\">{{ formatNumber(ordersReport.current_period_bonuses, false) }} \u0411\u0411</p>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E {{ label }} \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441\u043E \u0441\u0442\u0430\u0442\u0443\u0441\u043E\u043C \xAB\u041E\u043F\u043B\u0430\u0447\u0435\u043D\xBB</p>\n                                <p class=\"result__total\">{{ formatNumber(ordersReport.paid_orders_count, false) }}</p>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E {{ label }} \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441\u043E \u0441\u0442\u0430\u0442\u0443\u0441\u043E\u043C \xAB\u0412\u043E\u0437\u0432\u0440\u0430\u0442\xBB</p>\n                                <p class=\"result__total\">\n                                    {{ formatNumber(Number(ordersReport.part_refunded_orders_count) + Number(ordersReport.full_refunded_orders_count), false) }}\n                                </p>\n                            </div>\n                            <div class=\"result__addition\">\n                                <div data-toggle-visibility-container>\n                                    <button type=\"button\" class=\"button button--simple button--gray button--small\" data-toggle-visibility-action=\"hide\">\n                                        <span class=\"button__icon button__icon--mini button__icon--right\">\n                                            <svg class=\"icon icon--arrow-up\">\n                                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-down\"></use>\n                                            </svg>\n                                        </span>\n                                        <span class=\"button__text\" data-toggle-visibility-action-text=\"{&quot;show&quot;:&quot;\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E&quot;, &quot;hide&quot;:&quot;\u0421\u043A\u0440\u044B\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E&quot;}\">\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E</span>\n                                    </button>\n\n                                    <div data-toggle-visibility-block style=\"display: none;\">\n                                        <!--\u0412\u043E\u0437\u0432\u0440\u0430\u0442\u044B-->\n                                        <div class=\"result__return\">\n                                            <div class=\"result__return-item\">\n                                                <p class=\"result__return-name\">\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u043F\u043E\u043B\u043D\u044B\u0445 \u0432\u043E\u0437\u0432\u0440\u0430\u0442\u043E\u0432</p>\n                                                <p class=\"result__return-total\">\n                                                    {{ formatNumber(ordersReport.full_refunded_orders_count, false) }}\n                                                </p>\n                                            </div>\n                                            <div class=\"result__return-item\">\n                                                <p class=\"result__return-name\">\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0447\u0430\u0441\u0442\u0438\u0447\u043D\u044B\u0445 \u0432\u043E\u0437\u0432\u0440\u0430\u0442\u043E\u0432</p>\n                                                <p class=\"result__return-total\">\n                                                    {{ formatNumber(ordersReport.part_refunded_orders_count, false) }}\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <!--/\u0412\u043E\u0437\u0432\u0440\u0430\u0442\u044B-->\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li v-if=\"ordersReport.last_order_date\" class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u0414\u0430\u0442\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E {{ label2 }} \u0437\u0430\u043A\u0430\u0437\u0430</p>\n                                <p class=\"result__total\">{{ ordersReport.last_order_date }}</p>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li v-if=\"ordersReport.last_month_products.length\" class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0442\u043E\u0432\u0430\u0440\u043E\u0432 \u0441\u043E \u0432\u0441\u0435\u0445 {{ label }} \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0437\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0439 \u043C\u0435\u0441\u044F\u0446</p>\n                                <p class=\"result__total\">{{ ordersReport.last_month_products.length }}</p>\n                            </div>\n                            <div class=\"result__addition\">\n                                <div data-toggle-visibility-container>\n                                    <button type=\"button\" class=\"button button--simple button--gray button--small\" data-toggle-visibility-action=\"hide\">\n                                        <span class=\"button__icon button__icon--mini button__icon--right\">\n                                            <svg class=\"icon icon--arrow-up\">\n                                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-down\"></use>\n                                            </svg>\n                                        </span>\n                                        <span class=\"button__text\" data-toggle-visibility-action-text=\"{&quot;show&quot;:&quot;\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E&quot;, &quot;hide&quot;:&quot;\u0421\u043A\u0440\u044B\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E&quot;}\">\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E</span>\n                                    </button>\n                                    <!--\u0422\u0430\u0431\u043B\u0438\u0446\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432-->\n                                    <div class=\"result__products table-list\" data-toggle-visibility-block style=\"display: none;\">\n                                        <div class=\"table-list__head\">\n                                            <div class=\"table-list__cell\">\n                                                <p class=\"table-list__name\">\n                                                    \u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435\n                                                </p>\n                                            </div>\n                                            <div class=\"table-list__cell table-list__cell--desktop\">\n                                                <p class=\"table-list__name\">\n                                                    \u0426\u0435\u043D\u0430\n                                                </p>\n                                            </div>\n                                            <div class=\"table-list__cell table-list__cell--desktop\">\n                                                <p class=\"table-list__name\">\n                                                    \u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E\n                                                </p>\n                                            </div>\n                                            <div class=\"table-list__cell table-list__cell--desktop\">\n                                                <p class=\"table-list__name\">\n                                                    \u0421\u0443\u043C\u043C\u0430\n                                                </p>\n                                            </div>\n                                        </div>\n\n                                        <ul class=\"table-list__list table-list__list--limited\" data-scrollbar>\n                                            <li v-for=\"product in ordersReport.last_month_products\" :key=\"product.article\" class=\"table-list__item\">\n                                                <article class=\"product-line\">\n                                                    <a class=\"product-line__link\" :href=\"product.link\"></a>\n                                                    <div class=\"product-line__inner\">\n                                                        <div class=\"product-line__info\">\n                                                            <div class=\"product-line__image\">\n                                                                <img :src=\"product.picture\" alt=\"#\" class=\"product-line__image-picture\">\n                                                            </div>\n                                                            <div class=\"product-line__wrapper\">\n                                                                <h2 class=\"product-line__title\">\n                                                                    {{ product.name }}\n                                                                </h2>\n                                                                <p class=\"product-line__subtitle\">\n                                                                    \u0410\u0440\u0442. {{ product.article }}\n                                                                </p>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"product-line__characteristic\">\n                                                            <ul class=\"product-line__list\">\n                                                                <li class=\"product-line__params product-line__params--span\">\n                                                                    <p class=\"product-line__text\">\n                                                                        <span class=\"product-line__params-name\">\n                                                                            \u0426\u0435\u043D\u0430:\n                                                                        </span>\n                                                                        <span class=\"product-line__params-value\">\n                                                                            <span class=\"product-line__params-value--whole\">\n                                                                                {{ showPriceWhole(product.price) }}\n                                                                            </span>\n                                                                            <span class=\"product-line__params-value--remains\">\n                                                                                {{ showPriceRemains(product.price) }}&nbsp;\u20BD\n                                                                            </span>\n                                                                        </span>\n                                                                    </p>\n                                                                </li> \n                                                                <li class=\"product-line__params\">\n                                                                    <p class=\"product-line__text\">\n                                                                        <span class=\"product-line__params-name\">\n                                                                            \u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E:\n                                                                        </span>\n                                                                        <span class=\"product-line__params-value\">\n                                                                            {{ product.quantity }}\n                                                                        </span>\n                                                                    </p>\n                                                                </li> \n                                                                <li class=\"product-line__params product-line__params--bold\">\n                                                                    <p class=\"product-line__text\">\n                                                                        <span class=\"product-line__params-name\">\n                                                                            \u0421\u0443\u043C\u043C\u0430:\n                                                                        </span>\n                                                                        <span class=\"product-line__params-value\">\n                                                                            <span class=\"product-line__params-value--whole\">\n                                                                                {{ showPriceWhole(product.price * product.quantity) }}\n                                                                            </span>\n                                                                            <span class=\"product-line__params-value--remains\">\n                                                                                {{ showPriceRemains(product.price * product.quantity) }}&nbsp;\u20BD\n                                                                            </span>\n                                                                        </span>\n                                                                    </p>\n                                                                </li> \n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                </article>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <!--/\u0422\u0430\u0431\u043B\u0438\u0446\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432-->\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            <!--\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u044B-->\n        </div>\n    "
    };

    function _regeneratorRuntime$1() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$1 = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var id = 0;
    var LoyaltyReport = {
      components: {
        LoyaltyStatusTale: LoyaltyStatusTale,
        OrdersReport: OrdersReport
      },
      mixins: [NumberFormatMixin],
      data: function data() {
        return {
          componentId: "loyalty-report".concat(++id),
          mutableLoyaltyStatus: {},
          mutableBonusesIncome: {},
          mutableOrdersReport: {}
        };
      },
      props: {
        user: {
          type: Object,
          required: true
        },
        ordersReport: {
          type: Object,
          required: true
        },
        currentAccountingPeriod: {
          type: Object,
          required: true
        },
        accountingPeriods: {
          type: Array,
          required: true
        },
        loyaltyStatus: {
          type: Object,
          required: true
        },
        bonusesIncome: {
          type: Object,
          required: true,
          "default": {}
        },
        accordion: {
          type: Boolean,
          "default": false
        },
        title: {
          type: String,
          "default": "Мой заработок"
        }
      },
      setup: function setup() {
        return {
          loyaltySalesReportStore: useLoyaltySalesReportStore()
        };
      },
      created: function created() {
        this.mutableLoyaltyStatus = this.loyaltyStatus;
        this.mutableBonusesIncome = this.bonusesIncome;
        this.mutableOrdersReport = this.ordersReport;
      },
      mounted: function mounted() {
        var _this = this;

        if (!this.accordion) {
          $('select[name=accounting_periods]').on('change', function () {
            return _this.changeAccountingPeriod();
          });
        }
      },
      methods: {
        acceptColor: function acceptColor(label) {
          if (label === 'За покупки группы') {
            return '#945DAB';
          } else if (label === 'С личных покупок') {
            return '#2C877F';
          } else if (label === 'За приглашенных консультантов') {
            return '#D82F49';
          } else if (label === 'С товаров по персональной акции') {
            return '#C73C5E';
          } else if (label === 'За переход на К1') {
            return '#D26925';
          } else if (label === 'За переход на K2') {
            return '#C99308';
          } else if (label === 'За переход на K3') {
            return '#2D8859';
          } else if (label === 'За удержание на K3') {
            return '#3887B5';
          } else {
            return '#333';
          }
        },
        changeAccountingPeriod: function changeAccountingPeriod(data) {
          var _this2 = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$1().mark(function _callee() {
            var period, response, component, diagram, dataChart;
            return _regeneratorRuntime$1().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    if (data) {
                      _context.next = 6;
                      break;
                    }

                    period = $('select[name=accounting_periods]').val().split('-');
                    _context.next = 4;
                    return _this2.loyaltySalesReportStore.getDataByPeriod(period[0], period[1]);

                  case 4:
                    response = _context.sent;
                    data = response.data;

                  case 6:
                    _this2.mutableLoyaltyStatus = data.loyalty_status;
                    _this2.mutableOrdersReport = data.orders_report;
                    _this2.mutableBonusesIncome = data.bonuses_income;
                    component = _this2;
                    diagram = $("#".concat(_this2.componentId))[0];

                    if (diagram) {
                      dataChart = _this2.mutableBonusesIncome.js_data;
                      diagram.myChart.data = {
                        labels: dataChart.labels,
                        datasets: [{
                          data: dataChart.datasets[0].data,
                          backgroundColor: function backgroundColor(context) {
                            var value = context.chart.data;
                            var label = value.labels.map(function (item, index) {
                              return component.acceptColor(item);
                            });
                            return label;
                          }
                        }]
                      };
                      diagram.myChart.update();
                    }

                  case 12:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        }
      },
      template: "\n        <div :class=\"{ 'accordeon__item': accordion, 'participant__item': accordion, participant: !accordion, 'participant--accounting': !accordion }\" :data-accordeon=\"accordion\">\n            <div class=\"participant__header box box--rounded-sm\" :class=\"{ 'accordeon__header': accordion, 'participant__item': !accordion, 'box--gray': !accordion }\">\n                <div class=\"participant__row\">\n                    <div class=\"participant__col participant__col--avatar\">\n                        <div class=\"participant__avatar avatar avatar--accent avatar--big\">\n                            <div class=\"avatar__box\">\n                                <img :src=\"user.photo ?  user.photo : '/local/templates/.default/images/no-avatar.webp'\" class=\"avatar__picture\">\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"participant__col participant__col--name\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">\u0424\u0418\u041E</span>\n                            <span class=\"participant__info-value participant__info-value--truncate participant__info-value--accent\" :data-tippy-content=\"user.name_initials\" data-show-text>{{ user.name_initials }}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"participant__row participant__row--separated\">\n                    <div class=\"participant__col participant__col--id\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">ID</span>\n                            <span class=\"participant__info-value\">{{ user.id }}</span>\n                        </div>\n                    </div>\n\n                    <div v-if=\"user.pets\" class=\"participant__col participant__col--pets\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">\u041F\u0438\u0442\u043E\u043C\u0435\u0446</span>\n                            <div v-if=\"!user.pets.length\" class=\"participant__info-pets\">\n                                <div class=\"participant__info-pet participant__info-pet--none\">\n                                    \u041D\u0435\u0442\n                                </div>\n                            </div>\n                            <div v-else class=\"participant__info-pets\">\n                                <div v-for=\"pet in user.pets.slice(0,2)\" :key=\"pet\" class=\"participant__info-pet\" :class=\"'participant__info-pet--' + pet\">\n                                    <svg class=\"icon\" :class=\"'icon--' + pet\">\n                                        <use :xlink:href=\"'/local/templates/.default/images/icons/sprite.svg#icon-' + pet + '-seating'\"></use>\n                                    </svg>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                  \n                    <div v-else class=\"participant__col participant__col--level\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">\u0423\u0440\u043E\u0432\u0435\u043D\u044C</span>\n                            <span class=\"participant__info-value\">{{ user.loyalty_level ?  user.loyalty_level : '&nbsp;' }}</span>\n                        </div>\n                    </div>\n\n                    <div class=\"participant__col participant__col--date\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">\u041D\u0430 \u0441\u0430\u0439\u0442\u0435 \u0441</span>\n                            <span class=\"participant__info-value\">{{ user.date_register ? user.date_register : '&nbsp;' }}</span>\n                        </div>\n                    </div>\n\n                    <div class=\"participant__col participant__col--tel participant__col--separated\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">\u0422\u0435\u043B\u0435\u0444\u043E\u043D</span>\n                            <span class=\"participant__info-value\">\n                                {{ user.phone ? user.phone : '&nbsp;' }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"participant__row\">\n                    <div class=\"participant__col participant__col--email\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">Email</span>\n                            <span class=\"participant__info-value participant__info-value--truncate\" :data-tippy-content=\"user.email\" data-show-text>{{ user.email ? user.email : '&nbsp;' }}</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <div v-if=\"accordion\" class=\"participant__row participant__row--toggle\" data-accordeon-toggle>\n                    <p class=\"participant__show\">\u041F\u043E\u0434\u0440\u043E\u0431\u043D\u0435\u0435</p>\n                    <button type=\"button\" class=\"accordeon__toggle button button--circular button--mini button--covered button--red-white\" >\n                        <span class=\"accordeon__toggle-icon button__icon\">\n                            <svg class=\"icon icon--arrow-down\">\n                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-down\"></use>\n                            </svg>\n                        </span>\n                    </button>\n                </div>\n            </div>\n\n            <div :class=\"{ 'accordeon__body': accordion, 'accounting__section-box': !accordion, 'section__box': !accordion, 'box': !accordion, 'box--gray': !accordion }\" :data-accordeon-content=\"accordion\">\n                <div v-if=\"!accordion\" class=\"accounting__period filter filter--content\">\n                    <form class=\"accounting__period-form form\">\n                        <div class=\"accounting__period-heading\">\n                            <div class=\"accounting__period-name heading heading--small\">\n                                \u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u043F\u0435\u0440\u0438\u043E\u0434 \u043E\u0442\u0447\u0435\u0442\u0430\n                            </div>\n\n                            <div class=\"form__field\">\n                                <div class=\"form__field-block form__field-block--input\">\n                                    <div class=\"form__control\">\n                                        <div class=\"accounting__period-select select select--mitigate select--small select--common\" data-select>\n                                            <select class=\"select__control\" name=\"accounting_periods\" data-select-control data-placeholder=\"\u041F\u0435\u0440\u0438\u043E\u0434\">\n                                                <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                                                <option\n                                                  v-for=\"accountingPeriod in accountingPeriods\"\n                                                  :key=\"accountingPeriod.name\"\n                                                  :selected=\"accountingPeriod.name === currentAccountingPeriod.name\"\n                                                  :value=\"accountingPeriod.from + '-' + accountingPeriod.to\"\n                                                >{{ accountingPeriod.name }}</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                <div v-if=\"user.is_consultant && Object.entries(this.bonusesIncome).length !== 0\" class=\"accounting__diagramm\" \n                    :hidden=\"!parseInt(mutableBonusesIncome.total)\">\n                    <h5 class=\"accounting__diagramm-title\">{{title}}</h5>\n\n                    <div class=\"diagramm diagramm--simple\">\n                        <div class=\"diagramm__row\">\n                            <div class=\"diagramm__col diagramm__col--diagramm\">\n                                <div class=\"diagramm__main\">\n                                    <canvas\n                                        width=\"227\"\n                                        height=\"227\"\n                                        :id=\"componentId\"\n                                        :data-chart='JSON.stringify(mutableBonusesIncome.js_data)'\n                                        data-chart-type='stats'\n                                    ></canvas>\n                                    <div class=\"diagramm__sum\">\n                                        {{ mutableBonusesIncome.total ? formatNumber(mutableBonusesIncome.total) : 0 }}\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"diagramm__col diagramm__col--sum\">\n                                <p class=\"diagramm__title\">\u0421\u0443\u043C\u043C\u0430 \u0432\u0441\u0435\u0445 \u0437\u0430\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u043D\u044B\u0445 \u0431\u0430\u043B\u043B\u043E\u0432:</p>\n\n                                <div class=\"diagramm__results\">\n                                    <div\n                                        v-for=\"(bonusesIncome, bonusesIncomeKey) in mutableBonusesIncome.js_data.labels\"\n                                        :key=\"bonusesIncomeKey\"\n                                        class=\"diagramm__result\"\n                                    >\n                                        <span class=\"diagramm__result-icon\" :style=\"{ 'background-color': acceptColor(bonusesIncome) }\"></span>\n                                        <span class=\"diagramm__result-text\">{{ bonusesIncome ? bonusesIncome : '\u041D\u0435 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u043E' }}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div v-if=\"user.is_consultant\" class=\"participant__section\">\n                    <h5 class=\"participant__section-title\">\n                        \u041F\u043B\u0430\u043D\u043E\u0432\u044B\u0435 \u043F\u043E\u043A\u0430\u0437\u0430\u0442\u0435\u043B\u0438\n                    </h5>\n\n                    <div class=\"tabs tabs--profile tabs--white tabs--small tabs--circle tabs--red tabs--full-mob\" data-tabs>\n                        <nav class=\"tabs__items\">\n                            <ul class=\"tabs__list\">\n                                <li class=\"tabs__item tabs__item--active\" data-tab=\"block1\">\n                                    \u041B\u0438\u0447\u043D\u044B\u0435\n                                </li>\n\n                                <li class=\"tabs__item\" data-tab=\"block2\">\n                                    \u0413\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435\n                                </li>\n                            </ul>\n                        </nav>\n\n                        <div class=\"tabs__body\">\n                            <!--\u0422\u0430\u0431 \u043B\u0438\u0447\u043D\u044B\u0435-->\n                            <div class=\"tabs__block tabs__block--active\" data-tab-section=\"block1\">\n                                <div class=\"participant__block\">\n                                    <div class=\"participant__progress cards-progress\">\n                                        <ul class=\"cards-progress__list\">\n                                            <li v-if=\"mutableLoyaltyStatus.self.hold_value\" class=\"cards-progress__item\">\n                                                <LoyaltyStatusTale\n                                                    :current-value=\"mutableLoyaltyStatus.self.current_value\"\n                                                    :target-value=\"mutableLoyaltyStatus.self.hold_value\"\n                                                    label=\"\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u0443\u0440\u043E\u0432\u043D\u044F \u043F\u043E \u043B\u0438\u0447\u043D\u044B\u043C \u043F\u043E\u043A\u0443\u043F\u043A\u0430\u043C\"\n                                                />\n                                            </li>\n                                            <li class=\"cards-progress__item\">\n                                                <LoyaltyStatusTale\n                                                    :current-value=\"mutableLoyaltyStatus.self.current_value\"\n                                                    :target-value=\"mutableLoyaltyStatus.self.upgrade_value\"\n                                                    :is-hold=\"false\"\n                                                    label=\"\u041F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u0435 \u0443\u0440\u043E\u0432\u043D\u044F \u043F\u043E \u043B\u0438\u0447\u043D\u044B\u043C \u043F\u043E\u043A\u0443\u043F\u043A\u0430\u043C\"\n                                                />\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <!--/\u0422\u0430\u0431 \u043B\u0438\u0447\u043D\u044B\u0435-->\n\n                            <!--\u0422\u0430\u0431 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435-->\n                            <div class=\"tabs__block\" data-tab-section=\"block2\">\n                                <div class=\"participant__block\">\n                                    <div class=\"participant__progress cards-progress\">\n                                        <ul class=\"cards-progress__list\">\n                                            <li v-if=\"mutableLoyaltyStatus.team.hold_value > 0\" class=\"cards-progress__item\">\n                                                <LoyaltyStatusTale\n                                                    :current-value=\"mutableLoyaltyStatus.team.current_value\"\n                                                    :target-value=\"mutableLoyaltyStatus.team.hold_value\"\n                                                    label=\"\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u0443\u0440\u043E\u0432\u043D\u044F \u043F\u043E \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u043C \u043F\u043E\u043A\u0443\u043F\u043A\u0430\u043C\"\n                                                />\n                                            </li>\n                                            <li class=\"cards-progress__item\">\n                                                <LoyaltyStatusTale\n                                                    :current-value=\"mutableLoyaltyStatus.team.current_value\"\n                                                    :target-value=\"mutableLoyaltyStatus.team.upgrade_value\"\n                                                    :is-hold=\"false\"\n                                                    label=\"\u041F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u0435 \u0443\u0440\u043E\u0432\u043D\u044F \u043F\u043E \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u043C \u043F\u043E\u043A\u0443\u043F\u043A\u0430\u043C\"\n                                                />\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <!--/\u0422\u0430\u0431 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435-->\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"participant__section\">\n                    <h5 class=\"participant__section-title\">\n                        \u041F\u043E\u043A\u0443\u043F\u043A\u0438\n                    </h5>\n\n                    <div class=\"tabs tabs--profile tabs--white tabs--small tabs--circle tabs--red tabs--full-mob\" data-tabs>\n                        <nav v-if=\"user.is_consultant\" class=\"tabs__items\">\n                            <ul class=\"tabs__list\">\n                                <li class=\"tabs__item tabs__item--active\" data-tab=\"block1\">\n                                    \u041B\u0438\u0447\u043D\u044B\u0435\n                                </li>\n\n                                <li class=\"tabs__item\" data-tab=\"block2\">\n                                    \u0413\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435\n                                </li>\n                            </ul>\n                        </nav>\n\n                        <div class=\"tabs__body\">\n                        <template v-if=\"user.is_consultant\">\n                            <!--\u0422\u0430\u0431 \u041B\u0438\u0447\u043D\u044B\u0435-->\n                            <div class=\"tabs__block tabs__block--active\" data-tab-section=\"block1\">\n                                <OrdersReport :orders-report=\"mutableOrdersReport.self\" />\n                            </div>\n                            <!--/\u0422\u0430\u0431 \u041B\u0438\u0447\u043D\u044B\u0435-->\n\n                            <!--\u0422\u0430\u0431 \u0413\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435-->\n                            <div class=\"tabs__block\" data-tab-section=\"block2\">\n                                <OrdersReport :orders-report=\"mutableOrdersReport.team\" :isGroup=\"true\" />\n                            </div>\n                            <!--/\u0422\u0430\u0431 \u0413\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435-->\n                        </template>\n                        <template v-else>\n                            <!--\u0422\u0430\u0431 \u041B\u0438\u0447\u043D\u044B\u0435-->\n                            <div class=\"tabs__block tabs__block--active\">\n                                <OrdersReport :orders-report=\"mutableOrdersReport.self\" />\n                            </div>\n                            <!--/\u0422\u0430\u0431 \u041B\u0438\u0447\u043D\u044B\u0435-->\n                        </template>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div> \n    "
    };

    exports.LoyaltyReport = LoyaltyReport;

}((this.zolo.loyaltyReport = this.zolo.loyaltyReport || {}),BX.Vue3.Pinia));
//# sourceMappingURL=component.bundle.js.map
