{"version":3,"file":"component.bundle.js","sources":["../../../stores/petStore.js","../../../../../../../../assets/js/modules/select.js","../../../mixins/StringFormatMixin.js","../../gui/select/src/component.js","../../gui/dateInput/src/component.js","../src/component.js"],"sourcesContent":["import { defineStore } from 'ui.vue3.pinia';\n\nexport const usePetStore = defineStore('pet', {\n    actions: {\n        async deletePet(petId) {\n            return await BX.ajax.runComponentAction('zolo:main.profile', 'deletePet', {\n                mode: 'class',\n                data: { petId },\n            });\n        },\n        async addPet(pet) {\n            return await BX.ajax.runComponentAction('zolo:main.profile', 'addPet', {\n                mode: 'class',\n                data: { pet },\n            });\n        },\n        async changePet(pet) {\n            return await BX.ajax.runComponentAction('zolo:main.profile', 'changePet', {\n                mode: 'class',\n                data: { pet },\n            });\n        },\n    },\n})","import select2 from 'select2';\nimport 'jquery.nicescroll';\n\nconst ELEMENTS_SELECTOR = {\n    selectBox: '[data-select]',\n    selectControl: '[data-select-control]',\n    select2Container: '.select2-container',\n}\n\nexport default function () {\n    /**\n     * Инициализирует селекты с плагином select2\n     * @param jqObj объект JQuery (контейнер, в котором нужно проинициализировать селекты). Если не задан - инициализирует все селекты в BODY\n     */\n    function initSelect(jqObj = undefined) {\n        const baseOptions = {\n            templateResult: formatState,\n            templateSelection: formatState,\n        };\n\n        function formatState (state) {\n            let before = $(state.element).data('option-before') ? $(state.element).data('option-before') : '';\n            let after = $(state.element).data('option-after') ? $(state.element).data('option-after') : '';\n\n            let classItem = (before || after) ? 'select__item--inlined' : '';\n\n            let result = $(`\n                <span class=\"select__item ${classItem}\">\n                    ${before}\n                    ${state.text}\n                    ${after}\n                </span>\n            `);\n\n            return result;\n        };\n\n        function searchDisabled (element) {\n            let searchfield = element.parent().find('.select2-search__field');\n            searchfield.prop('disabled', true);\n        }\n\n        const scrollOptions = {\n            autohidemode: \"leave\",\n            railpadding: { top: 0, right: 0, left: 6, bottom: 0 },\n        }\n\n        var selectsContainer = $(document.body);\n\n        if (typeof jqObj != 'undefined') {\n            selectsContainer = jqObj;\n        }\n\n        selectsContainer.find(ELEMENTS_SELECTOR.selectControl).each(function(index, select) {\n            const $selectBox = $(select).closest(ELEMENTS_SELECTOR.selectBox);\n\n            const petsBreed = $selectBox.data('pets-breed');\n            if (petsBreed != undefined) {\n                baseOptions.language = {\n                    \"noResults\": ()=>{\n                        return \"Выберите тип питомца\";\n                    }\n                };\n            }\n\n            const placeholder = $(select).attr('data-placeholder');\n\n            const currentOptions = {\n                ...baseOptions,\n                placeholder,\n                dropdownParent: $selectBox,\n            };\n\n            $(select)\n                .select2(currentOptions)\n                .on('select2:open', function(e) {\n                    const $select = $(this);\n                    const $selectContainer = $select.siblings('.select2-container');\n                    const $selectList = $selectContainer.find('.select2-results__options');\n\n                    $selectList.niceScroll(scrollOptions);\n                })\n                .on('select2:close', function() {\n                    const select = $(this);\n                    const multiple = select.attr('multiple');\n\n                    if (typeof multiple !== 'undefined' && multiple !== false) {\n                        select.closest('[data-select]').find('.select2-selection__rendered').html(()=>{\n                            let counter = select.select2('data').length;\n                            if (counter > 0) {\n                                return `<li class=\"select2-selection__rendered-item\">Выбрано: ${counter}<li>`;\n                            }\n                        });\n                    }\n                })\n                .on('select2:opening select2:closing', function() {\n                    searchDisabled($(this));\n                });\n        });\n    }\n\n    initSelect();\n    window.initSelect = initSelect;\n}","export default {\n    methods: {\n        uppercaseFirst(string) {\n            return string[0].toUpperCase() + string.substring(1);\n        },\n    },\n};\n","import select from \"../../../../../../../../../assets/js/modules/select\";\nimport StringFormatMixin from \"../../../../mixins/StringFormatMixin\";\n\nlet id = 0;\n\nexport const Select = {\n    mixins: [StringFormatMixin],\n\n    data() {\n        return {\n            componentId: 'select-' + ++id,\n        };\n    },\n\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n        placeholder: {\n            type: String,\n            default: null,\n        },\n        options: {\n            type: Object,\n            required: true,\n        },\n        selected: {\n            type: Number,\n            default: null,\n        },\n        iconed: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    mounted() {\n        select();\n\n        $(`#${this.componentId}`).on('change', () => {\n            this.$emit('custom-change', $(`#${this.componentId}`).val());\n        });\n    },\n\n    methods: {\n        getIconPath(icon) {\n            return `<svg class=\"select__item-icon icon icon--${icon}\"><use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-${icon}\"></use></svg>`;\n        },\n    },\n\n    template: `\n        <div class=\"select select--mitigate\" :class=\"{ 'select--iconed': iconed }\" data-select>\n            <select class=\"select__control\" :name=\"name\" :id=\"componentId\" data-select-control :data-placeholder=\"placeholder ?? 'Выбрать'\">\n                <option><!-- пустой option для placeholder --></option>\n                <option\n                    v-for=\"(option, optionId) in options\"\n                    :key=\"optionId\"\n                    :value=\"optionId\"\n                    :data-option-before=\"iconed ? getIconPath(option.icon) : false\"\n                    :selected=\"optionId === selected\"\n                >\n                    {{ uppercaseFirst(option.name) }}\n                </option>\n            </select>\n        </div>\n    `,\n};","import inputMaskInit from \"../../../../../../../../../assets/js/modules/inputmask\";\n\nlet id = 0;\n\nexport const DateInput = {\n    data() {\n        return {\n            componentId: 'date-input-' + ++id,\n            currentValue: null,\n        };\n    },\n\n    props: {\n        name: {\n            type: String,\n            required: true,\n        },\n        value: {\n            type: String,\n            default: null,\n        },\n    },\n\n    watch: {\n        currentValue(newValue) {\n            this.$emit('custom-change', newValue);\n        },\n    },\n\n    created() {\n        this.currentValue = this.value;\n    },\n\n    mounted() {\n        // inputMaskInit($(`[data-date-input-id=${this.componentId}]`), 'dateMask');\n    },\n\n    template: `\n        <div class=\"input input--iconed\" :data-date-input-id=\"componentId\">\n            <input\n                inputmode=\"numeric\"\n                class=\"input__control\"\n                :name=\"name\"\n                placeholder=\"ДД.ММ.ГГГГ\"\n                data-mask-date\n                :id=\"componentId\"\n                v-model=\"currentValue\"\n                data-pets-date-input\n                data-pets-change\n                autocomplete=\"off\"\n            >\n            <span class=\"input__control-error--mask\"></span>\n            <span class=\"input__icon\">\n                <svg class=\"icon icon--calendar\">\n                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-calendar\"></use>\n                </svg>\n            </span>\n        </div>\n    `,\n};","import { usePetStore } from '../../../stores/petStore';\nimport { Select } from \"../../gui/select/src/component\";\nimport { DateInput } from \"../../gui/dateInput/src/component\";\nimport tooltip from '../../../../../../../../assets/js/modules/tooltip.js'\n\nexport const Pets = {\n    components: { Select, DateInput },\n\n    data() {\n        return {\n            originalPets: {},\n            mutablePets: [],\n        };\n    },\n\n    props: {\n        pets: {\n            type: Object,\n            default: {},\n        },\n        genders: {\n            type: Object,\n            required: true,\n        },\n        breeds: {\n            type: Object,\n            required: true,\n        },\n        kinds: {\n            type: Object,\n            required: true,\n        },\n    },\n\n    setup() {\n        return { petStore: usePetStore() };\n    },\n\n    created() {\n        this.originalPets = JSON.parse(JSON.stringify(this.pets));\n        this.mutablePets = JSON.parse(JSON.stringify(Object.values(this.pets)));\n    },\n\n    methods: {\n        addPet() {\n            this.mutablePets.push({ id: `new-${Date.now()}`, editing: true });\n        },\n        deletePet(pet) {\n            if (pet.id.indexOf('new') === -1) {\n                this.petStore.deletePet(pet.id);\n            }\n\n            this.mutablePets.splice(this.mutablePets.indexOf(pet), 1);\n        },\n        checkPetAvailable(pet) {\n            const petReplaceValue = pet.birthdate?.replace(/[^0-9]/g, '');\n            const petBirthdateLenght = petReplaceValue?.length\n           \n            if (petBirthdateLenght < 8) {\n                return\n            }\n\n            return pet.name && pet.kind && pet.breed && pet.birthdate && pet.gender;\n        },\n        cancelEditing(pet, petKey) {\n            if (pet.id.indexOf('new') !== -1) {\n                this.deletePet(pet);\n            } else {\n                this.mutablePets[petKey] = JSON.parse(JSON.stringify(this.originalPets[pet.id]));\n            }\n        },\n        async savePet(pet) {\n            if (pet.id.indexOf('new') === -1) {\n                await this.petStore.changePet(pet);\n            } else {\n                const response = await this.petStore.addPet(pet);\n                pet.id = `${response.data.id}`;\n            }\n\n            pet.editing = false;\n            this.originalPets[pet.id] = JSON.parse(JSON.stringify(pet));\n            \n            setTimeout(() => {\n                tippy('button[data-tippy-content]', {\n                    theme: 'light',\n                    arrow: false,\n                    appendTo: 'parent',\n                });\n            }, 500); \n        },\n    },\n\n    template: `\n        <div class=\"profile__block accordeon__item\" data-accordeon>\n            <div class=\"section__box box box--gray box--rounded\">\n                <div class=\"profile__accordeon-header accordeon__header section__header\">\n                    <h4 class=\"section__title section__title--closer\">Данные о питомцах</h4>\n\n                    <div class=\"profile__actions\">\n                        <button type=\"button\" class=\"profile__actions-button profile__actions-button--toggle accordeon__toggle button button--circular button--mini button--covered button--red-white\" data-accordeon-toggle>\n                            <span class=\"accordeon__toggle-icon button__icon\">\n                                <svg class=\"icon icon--arrow-down\">\n                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-down\"></use>\n                                </svg>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n\n                <div class=\"profile__accordeon-body accordeon__body accordeon__body--closer\" data-accordeon-content>\n                    <div class=\"pet-cards\">\n                        <ul class=\"pet-cards__list\" data-pets-list>\n                            <li v-for=\"(pet, petKey) in mutablePets\" :key=\"pet.id\" class=\"pet-cards__item\">\n                                <article class=\"pet-card\" :class=\"{ 'pet-card--editing': pet.editing }\" data-pets-card>\n                                    <div class=\"pet-card__main box box--circle\" data-pets-main>\n                                        <div class=\"pet-card__content\">\n                                            <div class=\"pet-card__avatar\" data-pets-type>\n                                                <svg class=\"icon\" :class=\"'icon--' + pet.kind?.code.toLowerCase().substring(5)\">\n                                                    <use :xlink:href=\"'/local/templates/.default/images/icons/sprite.svg#icon-' + pet.kind?.code.toLowerCase().substring(5)\"></use>\n                                                </svg>\n                                            </div>\n\n                                            <div class=\"pet-card__info\">\n                                                <div class=\"pet-card__name\" data-pets-name>\n                                                    {{ pet.name }}\n                                                </div>\n\n                                                <div class=\"pet-card__breed\" data-pets-breed>\n                                                    {{ pet.breed?.name }}\n                                                </div>\n\n                                                <div class=\"pet-card__info-record\">\n                                                    <div class=\"pet-card__gender\" data-pets-gender>\n                                                        <svg class=\"icon\" :class=\"'icon--' + (pet.gender?.code.indexOf('FEMALE') !== -1 ? 'woman' : 'man')\">\n                                                            <use :xlink:href=\"'/local/templates/.default/images/icons/sprite.svg#icon-' + (pet.gender?.code.indexOf('FEMALE') !== -1 ? 'woman' : 'man')\"></use>\n                                                        </svg>\n                                                    </div>\n\n                                                    <div class=\"pet-card__date\" data-pets-date>\n                                                        {{ pet.birthdate }}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"pet-card__actions\">\n                                            <div class=\"pet-card__modify\">\n                                                <button type=\"button\" class=\"pet-card__actions-button button button--iconed button--simple button--red\" data-tippy-content=\"Редактировать\" @click=\"pet.editing = true\">\n                                                    <span class=\"button__icon\">\n                                                        <svg class=\"icon icon--edit\">\n                                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-edit\"></use>\n                                                        </svg>\n                                                    </span>\n                                                </button>\n                                            </div>\n\n                                            <div class=\"pet-card__delete\">\n                                                <button type=\"button\" class=\"pet-card__actions-button button button--iconed button--simple button--red\" data-tippy-content=\"Удалить\" @click=\"deletePet(pet)\">\n                                                    <span class=\"button__icon\">\n                                                        <svg class=\"icon icon--trash\">\n                                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-trash\"></use>\n                                                        </svg>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"pet-card__edit box box--rounded-sm\" data-pets-edit>\n                                        <form class=\"form\" action=\"\" method=\"post\" data-pets-form>\n                                            <div class=\"pet-card__row form__row\">\n                                                <div class=\"pet-card__col pet-card__col--1-3 pet-card__col--3 form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"UF_KIND\" class=\"form__label\">\n                                                                <span class=\"form__label-text\">Тип питомца</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"form__control\">\n                                                                <Select\n                                                                    :name=\"UF_KIND\"\n                                                                    :options=\"kinds\"\n                                                                    :selected=\"pet.kind?.id\"\n                                                                    :iconed=\"true\"\n                                                                    @custom-change=\"(value) => { pet.kind = kinds[value]; pet.breed = null }\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"pet-card__col pet-card__col--1-3 form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"UF_GENDER\" class=\"form__label\">\n                                                                <span class=\"form__label-text\">Пол</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"form__control\">\n                                                                <Select\n                                                                    :name=\"UF_GENDER\"\n                                                                    :options=\"genders\"\n                                                                    :selected=\"pet.gender?.id\"\n                                                                    @custom-change=\"(value) => { pet.gender = genders[value] }\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"pet-card__col pet-card__col--1-3 form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"UF_BIRTHDATE\" class=\"form__label\">\n                                                                <span class=\"form__label-text\">Дата рождения</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                           <DateInput\n                                                               :name=\"UF_BIRTHDATE\"\n                                                               :value=\"pet.birthdate\"\n                                                               @custom-change=\"(value) => { pet.birthdate = value }\"\n                                                           />\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"pet-card__col pet-card__col--1-2 pet-card__col--1 form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"UF_BREED\" class=\"form__label\">\n                                                                <span class=\"form__label-text\">Порода</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"form__control\">\n                                                                <Select\n                                                                    :name=\"UF_BREED\"\n                                                                    :options=\"breeds[pet.kind?.code] ?? {}\"\n                                                                    :selected=\"pet.breed?.id\"\n                                                                    @custom-change=\"(value) => { pet.breed = breeds[pet.kind.code][value] }\"\n                                                                    data-pets-breed\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"pet-card__col pet-card__col--1-2 pet-card__col--2 form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"UF_NAME\" class=\"form__label\">\n                                                                <span class=\"form__label-text\">Кличка</span>\n                                                            </label>\n                                                        </div>\n                                                \n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"input\">\n                                                                <input\n                                                                    type=\"text\"\n                                                                    class=\"input__control\"\n                                                                    name=\"UF_NAME\"\n                                                                    id=\"text19\"\n                                                                    placeholder=\"Введите кличку питомца\"\n                                                                    data-pets-name-input\n                                                                    v-model=\"pet.name\"\n                                                                >\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"pet-card__buttons\">\n                                                <button type=\"button\" class=\"pet-card__button pet-card__button-save button button--rounded button--covered button--green button--full\" :class=\"{ 'button--disabled': !checkPetAvailable(pet) }\" :disabled=\"!checkPetAvailable(pet)\" @click=\"savePet(pet)\">\n                                                    Сохранить изменения\n                                                </button>\n                                            \n                                                <button type=\"button\" class=\"pet-card__button button button--rounded button--mixed button--red button--full\" @click=\"() => cancelEditing(pet, petKey)\">\n                                                    Отменить изменения\n                                                </button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </article>\n                            </li>\n                        </ul>\n\n                        <div class=\"pet-cards__adding\">\n                            <button type=\"button\" class=\"button button--rounded button--covered button--white-green button--full\" :class=\"{ 'button--disabled': mutablePets.length >= 10 }\" :disabled=\"mutablePets.length >= 10\" @click=\"addPet\">\n                                <span class=\"button__icon button__icon--medium\">\n                                    <svg class=\"icon icon--add-circle\">\n                                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-add-circle\"></use>\n                                    </svg>\n                                </span>\n                                <span class=\"button__text\">Добавить питомца</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n};"],"names":["usePetStore","defineStore","actions","deletePet","petId","BX","ajax","runComponentAction","mode","data","addPet","pet","changePet","ELEMENTS_SELECTOR","selectBox","selectControl","select2Container","initSelect","jqObj","undefined","baseOptions","templateResult","formatState","templateSelection","state","before","$","element","after","classItem","result","text","searchDisabled","searchfield","parent","find","prop","scrollOptions","autohidemode","railpadding","top","right","left","bottom","selectsContainer","document","body","each","index","select","$selectBox","closest","petsBreed","language","placeholder","attr","currentOptions","dropdownParent","select2","on","e","$select","$selectContainer","siblings","$selectList","niceScroll","multiple","html","counter","length","window","methods","uppercaseFirst","string","toUpperCase","substring","id","Select","mixins","StringFormatMixin","componentId","props","name","type","String","required","options","Object","selected","Number","iconed","Boolean","mounted","$emit","val","getIconPath","icon","template","DateInput","currentValue","value","watch","newValue","created","Pets","components","originalPets","mutablePets","pets","genders","breeds","kinds","setup","petStore","JSON","parse","stringify","values","push","Date","now","editing","indexOf","splice","checkPetAvailable","petReplaceValue","birthdate","replace","petBirthdateLenght","kind","breed","gender","cancelEditing","petKey","savePet","response","setTimeout","tippy","theme","arrow","appendTo"],"mappings":"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"}