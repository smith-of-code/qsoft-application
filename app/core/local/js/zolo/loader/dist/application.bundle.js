(function (exports,ui_vue3,select2,jquery_nicescroll,Inputmask,tippy$1,Swiper,ui_vue3_pinia) {
    'use strict';

    select2 = select2 && select2.hasOwnProperty('default') ? select2['default'] : select2;
    Inputmask = Inputmask && Inputmask.hasOwnProperty('default') ? Inputmask['default'] : Inputmask;
    tippy$1 = tippy$1 && tippy$1.hasOwnProperty('default') ? tippy$1['default'] : tippy$1;
    Swiper = Swiper && Swiper.hasOwnProperty('default') ? Swiper['default'] : Swiper;

    function _regeneratorRuntime() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var useBasketStore = ui_vue3_pinia.defineStore('basket', {
      state: function state() {
        return {
          fetched: false,
          items: {},
          itemsCount: undefined,
          basketPrice: undefined,
          loading: false
        };
      },
      actions: {
        getItem: function getItem(id) {
          var _this = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    if (_this.fetched) {
                      _context.next = 4;
                      break;
                    }

                    _context.next = 3;
                    return _this.fetchBasketTotals();

                  case 3:
                    _this.fetched = true;

                  case 4:
                    return _context.abrupt("return", _this.items[id]);

                  case 5:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        fetchBasketTotals: function fetchBasketTotals() {
          var _this2 = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
            var response;
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    if (_this2.fetched) {
                      _context2.next = 13;
                      break;
                    }

                    _this2.loading = true;
                    _context2.prev = 2;
                    _context2.next = 5;
                    return BX.ajax.runComponentAction('zolo:sale.basket.basket.line', 'getBasketTotals', {
                      data: {
                        withPersonalPromotions: window.location.pathname === '/cart/' || window.location.pathname === '/order/make/'
                      }
                    }).then(function (response) {
                      return response.data;
                    });

                  case 5:
                    response = _context2.sent;
                    _this2.items = response.items;
                    _this2.itemsCount = response.itemsCount;
                    _this2.basketPrice = response.basketPrice;

                  case 9:
                    _context2.prev = 9;
                    _this2.loading = false;
                    return _context2.finish(9);

                  case 12:
                    _this2.fetched = true;

                  case 13:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2, null, [[2,, 9, 12]]);
          }))();
        },
        increaseItem: function increaseItem(offerId) {
          var _arguments = arguments,
              _this3 = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
            var detailPage, nonreturnable, response;
            return _regeneratorRuntime().wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    detailPage = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : '';
                    nonreturnable = _arguments.length > 2 && _arguments[2] !== undefined ? _arguments[2] : false;
                    _this3.loading = true;
                    _context3.prev = 3;
                    _context3.next = 6;
                    return BX.ajax.runComponentAction('zolo:sale.basket.basket.line', 'increaseItem', {
                      data: {
                        offerId: offerId,
                        detailPage: detailPage,
                        nonreturnable: nonreturnable,
                        withPersonalPromotions: window.location.pathname === '/cart/'
                      }
                    }).then(function (response) {
                      return response.data;
                    });

                  case 6:
                    response = _context3.sent;
                    _this3.items = response.items;
                    _this3.itemsCount = response.itemsCount;
                    _this3.basketPrice = response.basketPrice;

                  case 10:
                    _context3.prev = 10;
                    _this3.loading = false;
                    return _context3.finish(10);

                  case 13:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3, null, [[3,, 10, 13]]);
          }))();
        },
        decreaseItem: function decreaseItem(offerId) {
          var _arguments2 = arguments,
              _this4 = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
            var quantity, response;
            return _regeneratorRuntime().wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    quantity = _arguments2.length > 1 && _arguments2[1] !== undefined ? _arguments2[1] : 1;
                    _this4.loading = true;
                    _context4.prev = 2;
                    _context4.next = 5;
                    return BX.ajax.runComponentAction('zolo:sale.basket.basket.line', 'decreaseItem', {
                      data: {
                        offerId: offerId,
                        quantity: quantity,
                        withPersonalPromotions: window.location.pathname === '/cart/'
                      }
                    }).then(function (response) {
                      return response.data;
                    });

                  case 5:
                    response = _context4.sent;
                    _this4.items = response.items;
                    _this4.itemsCount = response.itemsCount;
                    _this4.basketPrice = response.basketPrice;

                  case 9:
                    _context4.prev = 9;
                    _this4.loading = false;
                    return _context4.finish(9);

                  case 12:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4, null, [[2,, 9, 12]]);
          }))();
        },
        repeatOrder: function repeatOrder() {
          var _this5 = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {
            var response;
            return _regeneratorRuntime().wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    _context5.next = 2;
                    return BX.ajax.runComponentAction('zolo:sale.basket.basket.line', 'repeatOrder', {
                      data: {
                        orderId: orderId
                      }
                    }).then(function (response) {
                      return response.data;
                    });

                  case 2:
                    response = _context5.sent;
                    _this5.items = response.items;
                    _this5.itemsCount = response.itemsCount;
                    _this5.basketPrice = response.basketPrice;
                    return _context5.abrupt("return", response.missedProducts);

                  case 7:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5);
          }))();
        }
      }
    });

    var NumberFormatMixin = {
      methods: {
        formatNumber: function formatNumber(number) {
          var useDecimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
          if (!number) return 0;
          number = Math.round(parseFloat(number));
          var result = number.toFixed(2).replace(/\d(?=(\d{3})+\.)/g, "$&\xA0");
          return useDecimals ? result : result.substring(0, result.length - 3);
        }
      }
    };

    var MiniBasket = {
      mixins: [NumberFormatMixin],
      data: function data() {
        return {};
      },
      setup: function setup() {
        var store = useBasketStore();
        store.fetchBasketTotals();
        return {
          itemsCount: ui_vue3.computed(function () {
            return store.itemsCount;
          }),
          basketPrice: ui_vue3.computed(function () {
            return store.basketPrice;
          })
        };
      },
      methods: {
        showPriceWhole: function showPriceWhole(item) {
          var number = parseFloat(item);
          var numberFloor = Math.floor(number);
          return numberFloor.toLocaleString('ru-RU', {
            minimumFractionDigits: 0
          });
        },
        showPriceRemains: function showPriceRemains(item) {
          var number = parseFloat(item);
          var numberFixed = number.toFixed(2);
          var totalRemains = numberFixed.toString().split('.')[1];

          if (totalRemains === "00") {
            return;
          } else {
            return ',' + totalRemains;
          }
        }
      },
      template: "\n      <button type=\"button\" class=\"button button--simple button--red button--vertical\">\n      <span class=\"button__icon button__icon--mixed\">\n        <svg class=\"icon icon--basket\">\n          <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-basket\"></use>\n        </svg>\n        <span v-if=\"itemsCount\" class=\"button__icon-counter button__icon-counter--dark\">{{ itemsCount }}</span>\n        </span>\n      <span v-if=\"itemsCount\" class=\"personal__button-text button__text\">\n        <span class=\"personal__price-whole\">\n            {{ showPriceWhole(basketPrice) }}\n        </span>\n        <span class=\"personal__price-remains\">\n            {{ showPriceRemains(basketPrice) }}&nbsp;&#8381\n        </span>\n      </span>\n      <span v-else class=\"personal__button-text button__text\">\u041A\u043E\u0440\u0437\u0438\u043D\u0430</span>\n      </button>\n    "
    };

    function _regeneratorRuntime$1() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$1 = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var useLoyaltySalesReportStore = ui_vue3_pinia.defineStore('loyaltySalesReport', {
      actions: {
        getDataByPeriod: function getDataByPeriod(from, to) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$1().mark(function _callee() {
            return _regeneratorRuntime$1().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return BX.ajax.runComponentAction('zolo:loyalty.sales.report', 'getDataByPeriod', {
                      mode: 'class',
                      data: {
                        from: from,
                        to: to
                      }
                    });

                  case 2:
                    return _context.abrupt("return", _context.sent);

                  case 3:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        getTeamMembersDataByPeriod: function getTeamMembersDataByPeriod(ids, from, to) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$1().mark(function _callee2() {
            return _regeneratorRuntime$1().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return BX.ajax.runComponentAction('zolo:loyalty.sales.report', 'getTeamMembersDataByPeriod', {
                      mode: 'class',
                      data: {
                        ids: ids,
                        from: from,
                        to: to
                      }
                    });

                  case 2:
                    return _context2.abrupt("return", _context2.sent);

                  case 3:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }))();
        }
      }
    });

    var LoyaltyStatusTale = {
      mixins: [NumberFormatMixin],
      props: {
        currentValue: {
          type: Number,
          required: true
        },
        targetValue: {
          type: Number,
          required: true
        },
        label: {
          type: String,
          required: true
        },
        isHold: {
          type: Boolean,
          "default": true
        },
        isConsultant: {
          type: Boolean,
          "default": true
        }
      },
      template: "\n        <div v-if=\"targetValue > 0\" class=\"card-progress card-progress--unbordered\">\n            <div class=\"card-progress__inner\">\n                <p class=\"card-progress__title\">\n                    {{ label }}\n                </p>\n                <div v-if=\"currentValue / targetValue < 0.5\" class=\"card-progress__mark\">\n                    <svg class=\"card-progress__icon icon icon--cat-serious\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-sad\"></use>\n                    </svg>\n                    <span class=\"card-progress__mark-text\">\n                        \u041D\u0443\u0436\u043D\u043E \u0431\u043E\u043B\u044C\u0448\u0435 \u0443\u0441\u0438\u043B\u0438\u0439\n                    </span>\n                </div>\n                <div v-else-if=\"currentValue / targetValue < 1\" class=\"card-progress__mark\">\n                    <svg class=\"card-progress__icon icon icon--cat-serious\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-serious\"></use>\n                    </svg>\n                    <span class=\"card-progress__mark-text\">\n                        \u0425\u043E\u0440\u043E\u0448\u043E \u043F\u043E\u043B\u0443\u0447\u0430\u0435\u0442\u0441\u044F\n                    </span>\n                </div>\n                <div v-else-if=\"currentValue / targetValue == 1\" class=\"card-progress__mark\">\n                    <svg class=\"card-progress__icon icon icon--cat-serious\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-smile\"></use>\n                    </svg>\n                    <span class=\"card-progress__mark-text\">\n                        \u0426\u0435\u043B\u044C \u0434\u043E\u0441\u0442\u0438\u0433\u043D\u0443\u0442\u0430\n                    </span>\n                </div>\n                <div v-else class=\"card-progress__mark\">\n                    <svg class=\"card-progress__icon icon icon--cat-serious\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-happy\"></use>\n                    </svg>\n                    <span class=\"card-progress__mark-text\">\n                        \u041F\u0440\u043E\u0441\u0442\u043E \u0444\u0430\u043D\u0442\u0430\u0441\u0442\u0438\u043A\u0430\n                    </span>\n                </div>\n                <div class=\"card-progress__wrapper\">\n                    <div class=\"card-progress__progress progress-bar\">\n                        <div\n                            class=\"progress-bar__filler\"\n                            :style=\"{ width: ((currentValue * 100 / targetValue) < 100 ? (currentValue * 100 / targetValue) : 100) + '%' }\"\n                            :class=\"{ \n                                'progress-bar__filler--green': targetValue - currentValue <= 0,\n                                'progress-bar__filler--red': targetValue - currentValue > 0,\n                             }\"\n                        ></div>\n                    </div>\n                    <div class=\"card-progress__bottom\">\n                        <div class=\"card-progress__amount amount\">\n                            <p\n                                class=\"amount__target\"\n                                :class=\"{\n                                    'amount__target--green': targetValue - currentValue <= 0,\n                                    'amount__target--red': targetValue - currentValue > 0,\n                                }\"\n                            >\n                                {{ formatNumber(currentValue) }} \u20BD\n                            </p>\n                            <p class=\"amount__total\">\n                                \u0438\u0437 {{ formatNumber(targetValue) }} \u20BD\n                            </p>\n                        </div>\n                        <div v-if=\"targetValue - currentValue > 0\" class=\"card-progress__status\">\n                            <p class=\"card-progress__text\">\n                                \u041E\u0441\u0442\u0430\u043B\u043E\u0441\u044C {{ formatNumber(targetValue - currentValue) }}&nbsp;\u20BD\n                            </p>\n                        </div>\n                        <div v-else-if=\"targetValue - currentValue == 0\" class=\"card-progress__status\">\n                            <p class=\"card-progress__text\">\n                                \u0412\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u043E\n                            </p>\n                        </div>\n                        <div v-else class=\"card-progress__status\">\n                            <p class=\"card-progress__text\">\n                                \u041F\u0435\u0440\u0435\u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u043E \u043D\u0430  {{ formatNumber(currentValue - targetValue) }}&nbsp;\u20BD\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-progress__warning warning\">\n                    <div class=\"warning__mark\">\n                        <button type=\"button\" class=\"button button--iconed button--simple button--red\" data-fancybox=\"\" data-modal-type=\"modal\" :data-src=\"isHold ? '#hold-conditions' : '#upgrade-conditions'\">\n                            <span class=\"button__icon\">\n                                <svg class=\"icon icon--basket warning__icon\">\n                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-attention\"></use>\n                                </svg>\n                            </span>\n                        </button>\n                    </div>\n                    \n                    <p class=\"warning__text\">\n                        {{ isHold ? isConsultant ? '\u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F' : '\u0423\u0441\u043B\u043E\u0432\u0438\u044F \u0443\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0441\u043A\u0438\u0434\u043A\u0438' : '\u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F' }}\n                    </p>\n                </div>\n                <article v-if=\"isHold\" id=\"hold-conditions\" class=\"modal modal--full box box--circle box--hanging\" style=\"display: none\">\n                    <div class=\"modal__content\">\n                        <header class=\"modal__section modal__section--header\">\n                            <p class=\"heading heading--average\">\u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F</p>\n                        </header>\n\n                        <section class=\"modal__section modal__section--content\">\n                            <div class=\"conditions\">\n                                <div class=\"conditions__block\">\n                                    <h5 class=\"conditions__title\">\n                                        \u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u0434\u043B\u044F {{isConsultant ? \"\u041A1\" : \"\u04121\"}}:\n                                    </h5>\n                                    <ul class=\"conditions__list\">\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u043E\u0431\u0449\u0443\u044E \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(5000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n                                    </ul>\n                                </div>\n\n                                <div class=\"conditions__block\">\n                                    <h5 class=\"conditions__title\">\n                                        \u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u0434\u043B\u044F {{isConsultant ? \"\u041A2\" : \"\u04122\"}} (\u0435\u0434\u0438\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0435 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u0432\u0441\u0435\u0445 \u0443\u0441\u043B\u043E\u0432\u0438\u0439):\n                                    </h5>\n\n                                    <ul class=\"conditions__list\">\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(5000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u043A\u0430\u0436\u0434\u044B\u0439 \u043C\u0435\u0441\u044F\u0446 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(7000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u043A\u0430\u0436\u0434\u044B\u0439 \u043C\u0435\u0441\u044F\u0446 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n                                    </ul>\n\n                                    <p class=\"conditions__text\">\u041F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A2\" : \"\u04122\"}} \u0432\u043E\u0437\u043C\u043E\u0436\u0435\u043D \u0432 \u0442\u0435\u0447\u0435\u043D\u0438\u0435 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0435\u0432 \u043F\u0440\u0438 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u0435\u0440\u0435\u0445\u043E\u0434\u0430 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A2\" : \"\u04122\"}};\n                                    </p>\n                                    <p class=\"conditions__text\">\u041F\u0440\u0438 \u043D\u0435\u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F {{isConsultant ? \"\u041A2\" : \"\u04122\"}} \u0431\u0443\u0434\u0435\u0442 \u0432\u044B\u043F\u043E\u043B\u043D\u044F\u0442\u044C\u0441\u044F \u043F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A1\" : \"\u04121\"}}.</p>\n                                </div>\n\n                                <div class=\"conditions__block\">\n                                    <h5 class=\"conditions__title\">\n                                        \u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u0434\u043B\u044F {{isConsultant ? \"\u041A3\" : \"\u04123\"}} (\u0435\u0434\u0438\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0435 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u0432\u0441\u0435\u0445 \u0443\u0441\u043B\u043E\u0432\u0438\u0439):\n                                    </h5>\n\n                                    <ul class=\"conditions__list\">\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(10000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u043A\u0430\u0436\u0434\u044B\u0439 \u043C\u0435\u0441\u044F\u0446 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(20000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u043A\u0430\u0436\u0434\u044B\u0439 \u043C\u0435\u0441\u044F\u0446 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n                                    </ul>\n\n                                    <p class=\"conditions__text\">\u041F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A3\" : \"\u04123\"}} \u0432\u043E\u0437\u043C\u043E\u0436\u0435\u043D \u0432 \u0442\u0435\u0447\u0435\u043D\u0438\u0435 6 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0435\u0432 \u043F\u0440\u0438 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u0435\u0440\u0435\u0445\u043E\u0434\u0430 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A3\" : \"\u04123\"}};\n\n                                    </p>\n                                    <p class=\"conditions__text\">\u041F\u0440\u0438 \u043D\u0435\u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F {{isConsultant ? \"\u041A3\" : \"\u04123\"}} \u0431\u0443\u0434\u0435\u0442 \u0432\u044B\u043F\u043E\u043B\u043D\u044F\u0442\u044C\u0441\u044F \u043F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A2\" : \"\u04122\"}}.</p>\n                                </div>\n                            </div>\n                        </section>\n                    </div>\n                </article>\n                <article v-else id=\"upgrade-conditions\" class=\"modal modal--full box box--circle box--hanging\" style=\"display: none\">\n                    <div class=\"modal__content\">\n                        <header class=\"modal__section modal__section--header\">\n                            <p class=\"heading heading--average\">\u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F</p>\n                        </header>\n\n                        <section class=\"modal__section modal__section--content\">\n                            <div class=\"conditions\">\n                                <div class=\"conditions__block\">\n                                    <h5 class=\"conditions__title\">\n                                        \u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u0434\u043E {{isConsultant ? \"\u041A2\" : \"\u04122\"}} (\u0435\u0434\u0438\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0435 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u0432\u0441\u0435\u0445 \u0443\u0441\u043B\u043E\u0432\u0438\u0439):\n                                    </h5>\n\n                                    <ul class=\"conditions__list\">\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u043E\u0431\u0449\u0443\u044E \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(10000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u043E\u0431\u0449\u0443\u044E \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(10000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B);\n                                        </li>\n                                    </ul>\n\n                                    <p class=\"conditions__text\">\u041F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A2\" : \"\u04122\"}} \u0432\u043E\u0437\u043C\u043E\u0436\u0435\u043D \u0432 \u0442\u0435\u0447\u0435\u043D\u0438\u0435 3 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0435\u0432 \u043F\u0440\u0438 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u0435\u0440\u0435\u0445\u043E\u0434\u0430 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A2\" : \"\u04122\"}};</p>\n                                </div>\n\n                                <div class=\"conditions__block\">\n                                    <h5 class=\"conditions__title\">\n                                        \u0423\u0441\u043B\u043E\u0432\u0438\u044F \u043F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u044F \u0443\u0440\u043E\u0432\u043D\u044F \u0434\u043E {{isConsultant ? \"\u041A3\" : \"\u04123\"}} (\u0435\u0434\u0438\u043D\u043E\u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0435 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u0432\u0441\u0435\u0445 \u0443\u0441\u043B\u043E\u0432\u0438\u0439):\n                                    </h5>\n\n                                    <ul class=\"conditions__list\">\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u043E\u0431\u0449\u0443\u044E \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(50000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 6 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u0434\u0432\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\u0430);\n                                        </li>\n\n                                        <li class=\"conditions__item\">\n                                            \u0421\u043E\u0432\u0435\u0440\u0448\u0435\u043D\u0438\u0435 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0445 \u043F\u043E\u043A\u0443\u043F\u043E\u043A \u043D\u0430 \u043E\u0431\u0449\u0443\u044E \u0441\u0443\u043C\u043C\u0443 {{ formatNumber(100000) }} \u0440\u0443\u0431\u043B\u0435\u0439 \u0437\u0430 \u043F\u0435\u0440\u0438\u043E\u0434 \u0432 6 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0430 (\u0434\u0432\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043A\u0432\u0430\u0440\u0442\u0430\u043B\u0430);\n                                        </li>\n                                    </ul>\n\n                                    <p class=\"conditions__text\">\u041F\u0435\u0440\u0435\u0445\u043E\u0434 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A3\" : \"\u04123\"}} \u0432\u043E\u0437\u043C\u043E\u0436\u0435\u043D \u0432 \u0442\u0435\u0447\u0435\u043D\u0438\u0435 6 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u0435\u0441\u044F\u0446\u0435\u0432 \u043F\u0440\u0438 \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0438 \u0443\u0441\u043B\u043E\u0432\u0438\u0439 \u043F\u0435\u0440\u0435\u0445\u043E\u0434\u0430 \u043D\u0430 \u0443\u0440\u043E\u0432\u0435\u043D\u044C {{isConsultant ? \"\u041A3\" : \"\u04123\"}};</p>\n                                </div>\n                            </div>\n                        </section>\n                    </div>\n                </article>\n            </div>\n        </div>\n        <div v-else class=\"card-progress card-progress--success card-progress--unbordered\">\n            <div class=\"card-progress__inner card-progress__inner--columed\">\n                <div class=\"card-progress__image\">\n                    <svg class=\"card-progress__image-pic icon icon--cat-cheerful\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-cheerful\"></use>\n                    </svg>\n                </div>\n                <p class=\"card-progress__text\">\u0423 \u0412\u0430\u0441 \u043C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u044B\u0439 \u0443\u0440\u043E\u0432\u0435\u043D\u044C</p>\n            </div>\n        </div>\n    "
    };

    var OrdersReport = {
      mixins: [NumberFormatMixin],
      data: function data() {
        return {
          label: this.isGroup ? 'групповых' : 'личных',
          label2: this.isGroup ? 'группового' : 'личного'
        };
      },
      props: {
        ordersReport: {
          type: Object,
          required: true
        },
        isGroup: {
          type: Boolean,
          "default": false
        }
      },
      methods: {
        showPriceWhole: function showPriceWhole(item) {
          var number = parseFloat(item);
          var numberFloor = Math.floor(number);
          return numberFloor.toLocaleString('ru-RU', {
            minimumFractionDigits: 0
          });
        },
        showPriceRemains: function showPriceRemains(item) {
          var number = parseFloat(item);
          var numberFixed = number.toFixed(2);
          var totalRemains = numberFixed.toString().split('.')[1];

          if (totalRemains === "00") {
            return;
          } else {
            return ',' + totalRemains;
          }
        }
      },
      template: "\n        <div class=\"participant__block\">\n            <!--\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u044B-->\n            <div class=\"results\">\n                <ul class=\"results__list\">\n                    <li class=\"results__item\">\n                        <!--\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442-->\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u0421\u0443\u043C\u043C\u0430 \u0432\u0441\u0435\u0445 {{ label }} \u0437\u0430\u043A\u0430\u0437\u043E\u0432</p>\n                                <p class=\"result__total\">{{ formatNumber(ordersReport.total_sum) }} \u20BD</p>\n                            </div>\n                        </div>\n                        <!--/\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442-->\n                    </li>\n\n                    <li class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u0421\u0443\u043C\u043C\u0430 {{ label }} \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0437\u0430 \u0442\u0435\u043A\u0443\u0449\u0438\u0439 \u043E\u0442\u0447\u0435\u0442\u043D\u044B\u0439 \u043F\u0435\u0440\u0438\u043E\u0434</p>\n                                <p class=\"result__total\">{{ formatNumber(ordersReport.current_period_sum) }} \u20BD</p>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li v-if=\"ordersReport.current_period_bonuses\" class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u0421\u0443\u043C\u043C\u0430 {{ label }} \u0431\u0430\u043B\u043B\u043E\u0432 \u0437\u0430 \u0442\u0435\u043A\u0443\u0449\u0438\u0439 \u043F\u0435\u0440\u0438\u043E\u0434</p>\n                                <p class=\"result__total\">{{ formatNumber(ordersReport.current_period_bonuses, false) }} \u0411\u0411</p>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E {{ label }} \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441\u043E \u0441\u0442\u0430\u0442\u0443\u0441\u043E\u043C \xAB\u041E\u043F\u043B\u0430\u0447\u0435\u043D\xBB</p>\n                                <p class=\"result__total\">{{ formatNumber(ordersReport.paid_orders_count, false) }}</p>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E {{ label }} \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441\u043E \u0441\u0442\u0430\u0442\u0443\u0441\u043E\u043C \xAB\u0412\u043E\u0437\u0432\u0440\u0430\u0442\xBB</p>\n                                <p class=\"result__total\">\n                                    {{ formatNumber(Number(ordersReport.part_refunded_orders_count) + Number(ordersReport.full_refunded_orders_count), false) }}\n                                </p>\n                            </div>\n                            <div class=\"result__addition\">\n                                <div data-toggle-visibility-container>\n                                    <button type=\"button\" class=\"button button--simple button--gray button--small\" data-toggle-visibility-action=\"hide\">\n                                        <span class=\"button__icon button__icon--mini button__icon--right\">\n                                            <svg class=\"icon icon--arrow-up\">\n                                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-down\"></use>\n                                            </svg>\n                                        </span>\n                                        <span class=\"button__text\" data-toggle-visibility-action-text=\"{&quot;show&quot;:&quot;\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E&quot;, &quot;hide&quot;:&quot;\u0421\u043A\u0440\u044B\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E&quot;}\">\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E</span>\n                                    </button>\n\n                                    <div data-toggle-visibility-block style=\"display: none;\">\n                                        <!--\u0412\u043E\u0437\u0432\u0440\u0430\u0442\u044B-->\n                                        <div class=\"result__return\">\n                                            <div class=\"result__return-item\">\n                                                <p class=\"result__return-name\">\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u043F\u043E\u043B\u043D\u044B\u0445 \u0432\u043E\u0437\u0432\u0440\u0430\u0442\u043E\u0432</p>\n                                                <p class=\"result__return-total\">\n                                                    {{ formatNumber(ordersReport.full_refunded_orders_count, false) }}\n                                                </p>\n                                            </div>\n                                            <div class=\"result__return-item\">\n                                                <p class=\"result__return-name\">\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0447\u0430\u0441\u0442\u0438\u0447\u043D\u044B\u0445 \u0432\u043E\u0437\u0432\u0440\u0430\u0442\u043E\u0432</p>\n                                                <p class=\"result__return-total\">\n                                                    {{ formatNumber(ordersReport.part_refunded_orders_count, false) }}\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <!--/\u0412\u043E\u0437\u0432\u0440\u0430\u0442\u044B-->\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li v-if=\"ordersReport.last_order_date\" class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u0414\u0430\u0442\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E {{ label2 }} \u0437\u0430\u043A\u0430\u0437\u0430</p>\n                                <p class=\"result__total\">{{ ordersReport.last_order_date }}</p>\n                            </div>\n                        </div>\n                    </li>\n\n                    <li v-if=\"ordersReport.last_month_products.length\" class=\"results__item\">\n                        <div class=\"result\">\n                            <div class=\"result__main\">\n                                <p class=\"result__title\">\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0442\u043E\u0432\u0430\u0440\u043E\u0432 \u0441\u043E \u0432\u0441\u0435\u0445 {{ label }} \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0437\u0430 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0439 \u043C\u0435\u0441\u044F\u0446</p>\n                                <p class=\"result__total\">{{ ordersReport.last_month_products.length }}</p>\n                            </div>\n                            <div class=\"result__addition\">\n                                <div data-toggle-visibility-container>\n                                    <button type=\"button\" class=\"button button--simple button--gray button--small\" data-toggle-visibility-action=\"hide\">\n                                        <span class=\"button__icon button__icon--mini button__icon--right\">\n                                            <svg class=\"icon icon--arrow-up\">\n                                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-down\"></use>\n                                            </svg>\n                                        </span>\n                                        <span class=\"button__text\" data-toggle-visibility-action-text=\"{&quot;show&quot;:&quot;\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E&quot;, &quot;hide&quot;:&quot;\u0421\u043A\u0440\u044B\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E&quot;}\">\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0434\u0435\u0442\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E</span>\n                                    </button>\n                                    <!--\u0422\u0430\u0431\u043B\u0438\u0446\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432-->\n                                    <div class=\"result__products table-list\" data-toggle-visibility-block style=\"display: none;\">\n                                        <div class=\"table-list__head\">\n                                            <div class=\"table-list__cell\">\n                                                <p class=\"table-list__name\">\n                                                    \u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435\n                                                </p>\n                                            </div>\n                                            <div class=\"table-list__cell table-list__cell--desktop\">\n                                                <p class=\"table-list__name\">\n                                                    \u0426\u0435\u043D\u0430\n                                                </p>\n                                            </div>\n                                            <div class=\"table-list__cell table-list__cell--desktop\">\n                                                <p class=\"table-list__name\">\n                                                    \u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E\n                                                </p>\n                                            </div>\n                                            <div class=\"table-list__cell table-list__cell--desktop\">\n                                                <p class=\"table-list__name\">\n                                                    \u0421\u0443\u043C\u043C\u0430\n                                                </p>\n                                            </div>\n                                        </div>\n\n                                        <ul class=\"table-list__list table-list__list--limited\" data-scrollbar>\n                                            <li v-for=\"product in ordersReport.last_month_products\" :key=\"product.article\" class=\"table-list__item\">\n                                                <article class=\"product-line\">\n                                                    <a class=\"product-line__link\" :href=\"product.link\"></a>\n                                                    <div class=\"product-line__inner\">\n                                                        <div class=\"product-line__info\">\n                                                            <div class=\"product-line__image\">\n                                                                <img :src=\"product.picture\" alt=\"#\" class=\"product-line__image-picture\">\n                                                            </div>\n                                                            <div class=\"product-line__wrapper\">\n                                                                <h2 class=\"product-line__title\">\n                                                                    {{ product.name }}\n                                                                </h2>\n                                                                <p class=\"product-line__subtitle\">\n                                                                    \u0410\u0440\u0442. {{ product.article }}\n                                                                </p>\n                                                            </div>\n                                                        </div>\n                                                        <div class=\"product-line__characteristic\">\n                                                            <ul class=\"product-line__list\">\n                                                                <li class=\"product-line__params product-line__params--span\">\n                                                                    <p class=\"product-line__text\">\n                                                                        <span class=\"product-line__params-name\">\n                                                                            \u0426\u0435\u043D\u0430:\n                                                                        </span>\n                                                                        <span class=\"product-line__params-value\">\n                                                                            <span class=\"product-line__params-value--whole\">\n                                                                                {{ showPriceWhole(product.price) }}\n                                                                            </span>\n                                                                            <span class=\"product-line__params-value--remains\">\n                                                                                {{ showPriceRemains(product.price) }}&nbsp;\u20BD\n                                                                            </span>\n                                                                        </span>\n                                                                    </p>\n                                                                </li> \n                                                                <li class=\"product-line__params\">\n                                                                    <p class=\"product-line__text\">\n                                                                        <span class=\"product-line__params-name\">\n                                                                            \u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E:\n                                                                        </span>\n                                                                        <span class=\"product-line__params-value\">\n                                                                            {{ product.quantity }}\n                                                                        </span>\n                                                                    </p>\n                                                                </li> \n                                                                <li class=\"product-line__params product-line__params--bold\">\n                                                                    <p class=\"product-line__text\">\n                                                                        <span class=\"product-line__params-name\">\n                                                                            \u0421\u0443\u043C\u043C\u0430:\n                                                                        </span>\n                                                                        <span class=\"product-line__params-value\">\n                                                                            <span class=\"product-line__params-value--whole\">\n                                                                                {{ showPriceWhole(product.price * product.quantity) }}\n                                                                            </span>\n                                                                            <span class=\"product-line__params-value--remains\">\n                                                                                {{ showPriceRemains(product.price * product.quantity) }}&nbsp;\u20BD\n                                                                            </span>\n                                                                        </span>\n                                                                    </p>\n                                                                </li> \n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                </article>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                    <!--/\u0422\u0430\u0431\u043B\u0438\u0446\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432-->\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            <!--\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u044B-->\n        </div>\n    "
    };

    function _regeneratorRuntime$2() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$2 = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var id = 0;
    var LoyaltyReport = {
      components: {
        LoyaltyStatusTale: LoyaltyStatusTale,
        OrdersReport: OrdersReport
      },
      mixins: [NumberFormatMixin],
      data: function data() {
        return {
          componentId: "loyalty-report".concat(++id),
          mutableLoyaltyStatus: {},
          mutableBonusesIncome: {},
          mutableOrdersReport: {}
        };
      },
      props: {
        user: {
          type: Object,
          required: true
        },
        ordersReport: {
          type: Object,
          required: true
        },
        currentAccountingPeriod: {
          type: Object,
          required: true
        },
        accountingPeriods: {
          type: Array,
          required: true
        },
        loyaltyStatus: {
          type: Object,
          required: true
        },
        bonusesIncome: {
          type: Object,
          required: true,
          "default": {}
        },
        accordion: {
          type: Boolean,
          "default": false
        },
        title: {
          type: String,
          "default": "Мой заработок"
        }
      },
      setup: function setup() {
        return {
          loyaltySalesReportStore: useLoyaltySalesReportStore()
        };
      },
      created: function created() {
        this.mutableLoyaltyStatus = this.loyaltyStatus;
        this.mutableBonusesIncome = this.bonusesIncome;
        this.mutableOrdersReport = this.ordersReport;
      },
      mounted: function mounted() {
        var _this = this;

        if (!this.accordion) {
          $('select[name=accounting_periods]').on('change', function () {
            return _this.changeAccountingPeriod();
          });
        }
      },
      methods: {
        acceptColor: function acceptColor(label) {
          if (label === 'За покупки группы') {
            return '#945DAB';
          } else if (label === 'С личных покупок') {
            return '#2C877F';
          } else if (label === 'За приглашенных консультантов') {
            return '#D82F49';
          } else if (label === 'С товаров по персональной акции') {
            return '#C73C5E';
          } else if (label === 'За переход на К1') {
            return '#D26925';
          } else if (label === 'За переход на K2') {
            return '#C99308';
          } else if (label === 'За переход на K3') {
            return '#2D8859';
          } else if (label === 'За удержание на K3') {
            return '#3887B5';
          } else {
            return '#333';
          }
        },
        changeAccountingPeriod: function changeAccountingPeriod(data) {
          var _this2 = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$2().mark(function _callee() {
            var period, response, component, diagram, dataChart;
            return _regeneratorRuntime$2().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    if (data) {
                      _context.next = 6;
                      break;
                    }

                    period = $('select[name=accounting_periods]').val().split('-');
                    _context.next = 4;
                    return _this2.loyaltySalesReportStore.getDataByPeriod(period[0], period[1]);

                  case 4:
                    response = _context.sent;
                    data = response.data;

                  case 6:
                    _this2.mutableLoyaltyStatus = data.loyalty_status;
                    _this2.mutableOrdersReport = data.orders_report;
                    _this2.mutableBonusesIncome = data.bonuses_income;
                    component = _this2;
                    diagram = $("#".concat(_this2.componentId))[0];

                    if (diagram) {
                      dataChart = _this2.mutableBonusesIncome.js_data;
                      diagram.myChart.data = {
                        labels: dataChart.labels,
                        datasets: [{
                          data: dataChart.datasets[0].data,
                          backgroundColor: function backgroundColor(context) {
                            var value = context.chart.data;
                            var label = value.labels.map(function (item, index) {
                              return component.acceptColor(item);
                            });
                            return label;
                          }
                        }]
                      };
                      diagram.myChart.update();
                    }

                  case 12:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        }
      },
      template: "\n        <div :class=\"{ 'accordeon__item': accordion, 'participant__item': accordion, participant: !accordion, 'participant--accounting': !accordion }\" :data-accordeon=\"accordion\">\n            <div class=\"participant__header box box--rounded-sm\" :class=\"{ 'accordeon__header': accordion, 'participant__item': !accordion, 'box--gray': !accordion }\">\n                <div class=\"participant__row\">\n                    <div class=\"participant__col participant__col--avatar\">\n                        <div class=\"participant__avatar avatar avatar--accent avatar--big\">\n                            <div class=\"avatar__box\">\n                                <img :src=\"user.photo ?  user.photo : '/local/templates/.default/images/no-avatar.webp'\" class=\"avatar__picture\">\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"participant__col participant__col--name\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">\u0424\u0418\u041E</span>\n                            <span class=\"participant__info-value participant__info-value--truncate participant__info-value--accent\" :data-tippy-content=\"user.name_initials\" data-show-text>{{ user.name_initials }}</span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"participant__row participant__row--separated\">\n                    <div class=\"participant__col participant__col--id\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">ID</span>\n                            <span class=\"participant__info-value\">{{ user.id }}</span>\n                        </div>\n                    </div>\n\n                    <div v-if=\"user.pets\" class=\"participant__col participant__col--pets\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">\u041F\u0438\u0442\u043E\u043C\u0435\u0446</span>\n                            <div v-if=\"!user.pets.length\" class=\"participant__info-pets\">\n                                <div class=\"participant__info-pet participant__info-pet--none\">\n                                    \u041D\u0435\u0442\n                                </div>\n                            </div>\n                            <div v-else class=\"participant__info-pets\">\n                                <div v-for=\"pet in user.pets.slice(0,2)\" :key=\"pet\" class=\"participant__info-pet\" :class=\"'participant__info-pet--' + pet\">\n                                    <svg class=\"icon\" :class=\"'icon--' + pet\">\n                                        <use :xlink:href=\"'/local/templates/.default/images/icons/sprite.svg#icon-' + pet + '-seating'\"></use>\n                                    </svg>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                  \n                    <div v-else class=\"participant__col participant__col--level\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">\u0423\u0440\u043E\u0432\u0435\u043D\u044C</span>\n                            <span class=\"participant__info-value\">{{ user.loyalty_level ?  user.loyalty_level : '&nbsp;' }}</span>\n                        </div>\n                    </div>\n\n                    <div class=\"participant__col participant__col--date\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">\u041D\u0430 \u0441\u0430\u0439\u0442\u0435 \u0441</span>\n                            <span class=\"participant__info-value\">{{ user.date_register ? user.date_register : '&nbsp;' }}</span>\n                        </div>\n                    </div>\n\n                    <div class=\"participant__col participant__col--tel participant__col--separated\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">\u0422\u0435\u043B\u0435\u0444\u043E\u043D</span>\n                            <span class=\"participant__info-value\">\n                                {{ user.phone ? user.phone : '&nbsp;' }}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"participant__row\">\n                    <div class=\"participant__col participant__col--email\">\n                        <div class=\"participant__info\">\n                            <span class=\"participant__info-name\">Email</span>\n                            <span class=\"participant__info-value participant__info-value--truncate\" :data-tippy-content=\"user.email\" data-show-text>{{ user.email ? user.email : '&nbsp;' }}</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <div v-if=\"accordion\" class=\"participant__row participant__row--toggle\" data-accordeon-toggle>\n                    <p class=\"participant__show\">\u041F\u043E\u0434\u0440\u043E\u0431\u043D\u0435\u0435</p>\n                    <button type=\"button\" class=\"accordeon__toggle button button--circular button--mini button--covered button--red-white\" >\n                        <span class=\"accordeon__toggle-icon button__icon\">\n                            <svg class=\"icon icon--arrow-down\">\n                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-down\"></use>\n                            </svg>\n                        </span>\n                    </button>\n                </div>\n            </div>\n\n            <div :class=\"{ 'accordeon__body': accordion, 'accounting__section-box': !accordion, 'section__box': !accordion, 'box': !accordion, 'box--gray': !accordion }\" :data-accordeon-content=\"accordion\">\n                <div v-if=\"!accordion\" class=\"accounting__period filter filter--content\">\n                    <form class=\"accounting__period-form form\">\n                        <div class=\"accounting__period-heading\">\n                            <div class=\"accounting__period-name heading heading--small\">\n                                \u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u043F\u0435\u0440\u0438\u043E\u0434 \u043E\u0442\u0447\u0435\u0442\u0430\n                            </div>\n\n                            <div class=\"form__field\">\n                                <div class=\"form__field-block form__field-block--input\">\n                                    <div class=\"form__control\">\n                                        <div class=\"accounting__period-select select select--mitigate select--small select--common\" data-select>\n                                            <select class=\"select__control\" name=\"accounting_periods\" data-select-control data-placeholder=\"\u041F\u0435\u0440\u0438\u043E\u0434\">\n                                                <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                                                <option\n                                                  v-for=\"accountingPeriod in accountingPeriods\"\n                                                  :key=\"accountingPeriod.name\"\n                                                  :selected=\"accountingPeriod.name === currentAccountingPeriod.name\"\n                                                  :value=\"accountingPeriod.from + '-' + accountingPeriod.to\"\n                                                >{{ accountingPeriod.name }}</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                <div v-if=\"user.is_consultant && Object.entries(this.bonusesIncome).length !== 0\" class=\"accounting__diagramm\" \n                    :hidden=\"!parseInt(mutableBonusesIncome.total)\">\n                    <h5 class=\"accounting__diagramm-title\">{{title}}</h5>\n\n                    <div class=\"diagramm diagramm--simple\">\n                        <div class=\"diagramm__row\">\n                            <div class=\"diagramm__col diagramm__col--diagramm\">\n                                <div class=\"diagramm__main\">\n                                    <canvas\n                                        width=\"227\"\n                                        height=\"227\"\n                                        :id=\"componentId\"\n                                        :data-chart='JSON.stringify(mutableBonusesIncome.js_data)'\n                                        data-chart-type='stats'\n                                    ></canvas>\n                                    <div class=\"diagramm__sum\">\n                                        {{ mutableBonusesIncome.total ? formatNumber(mutableBonusesIncome.total) : 0 }}\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"diagramm__col diagramm__col--sum\">\n                                <p class=\"diagramm__title\">\u0421\u0443\u043C\u043C\u0430 \u0432\u0441\u0435\u0445 \u0437\u0430\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u043D\u044B\u0445 \u0431\u0430\u043B\u043B\u043E\u0432:</p>\n\n                                <div class=\"diagramm__results\">\n                                    <div\n                                        v-for=\"(bonusesIncome, bonusesIncomeKey) in mutableBonusesIncome.js_data.labels\"\n                                        :key=\"bonusesIncomeKey\"\n                                        class=\"diagramm__result\"\n                                    >\n                                        <span class=\"diagramm__result-icon\" :style=\"{ 'background-color': acceptColor(bonusesIncome) }\"></span>\n                                        <span class=\"diagramm__result-text\">{{ bonusesIncome ? bonusesIncome : '\u041D\u0435 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u043E' }}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div v-if=\"user.is_consultant\" class=\"participant__section\">\n                    <h5 class=\"participant__section-title\">\n                        \u041F\u043B\u0430\u043D\u043E\u0432\u044B\u0435 \u043F\u043E\u043A\u0430\u0437\u0430\u0442\u0435\u043B\u0438\n                    </h5>\n\n                    <div class=\"tabs tabs--profile tabs--white tabs--small tabs--circle tabs--red tabs--full-mob\" data-tabs>\n                        <nav class=\"tabs__items\">\n                            <ul class=\"tabs__list\">\n                                <li class=\"tabs__item tabs__item--active\" data-tab=\"block1\">\n                                    \u041B\u0438\u0447\u043D\u044B\u0435\n                                </li>\n\n                                <li class=\"tabs__item\" data-tab=\"block2\">\n                                    \u0413\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435\n                                </li>\n                            </ul>\n                        </nav>\n\n                        <div class=\"tabs__body\">\n                            <!--\u0422\u0430\u0431 \u043B\u0438\u0447\u043D\u044B\u0435-->\n                            <div class=\"tabs__block tabs__block--active\" data-tab-section=\"block1\">\n                                <div class=\"participant__block\">\n                                    <div class=\"participant__progress cards-progress\">\n                                        <ul class=\"cards-progress__list\">\n                                            <li v-if=\"mutableLoyaltyStatus.self.hold_value\" class=\"cards-progress__item\">\n                                                <LoyaltyStatusTale\n                                                    :current-value=\"mutableLoyaltyStatus.self.current_value\"\n                                                    :target-value=\"mutableLoyaltyStatus.self.hold_value\"\n                                                    label=\"\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u0443\u0440\u043E\u0432\u043D\u044F \u043F\u043E \u043B\u0438\u0447\u043D\u044B\u043C \u043F\u043E\u043A\u0443\u043F\u043A\u0430\u043C\"\n                                                />\n                                            </li>\n                                            <li class=\"cards-progress__item\">\n                                                <LoyaltyStatusTale\n                                                    :current-value=\"mutableLoyaltyStatus.self.current_value\"\n                                                    :target-value=\"mutableLoyaltyStatus.self.upgrade_value\"\n                                                    :is-hold=\"false\"\n                                                    label=\"\u041F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u0435 \u0443\u0440\u043E\u0432\u043D\u044F \u043F\u043E \u043B\u0438\u0447\u043D\u044B\u043C \u043F\u043E\u043A\u0443\u043F\u043A\u0430\u043C\"\n                                                />\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <!--/\u0422\u0430\u0431 \u043B\u0438\u0447\u043D\u044B\u0435-->\n\n                            <!--\u0422\u0430\u0431 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435-->\n                            <div class=\"tabs__block\" data-tab-section=\"block2\">\n                                <div class=\"participant__block\">\n                                    <div class=\"participant__progress cards-progress\">\n                                        <ul class=\"cards-progress__list\">\n                                            <li v-if=\"mutableLoyaltyStatus.team.hold_value > 0\" class=\"cards-progress__item\">\n                                                <LoyaltyStatusTale\n                                                    :current-value=\"mutableLoyaltyStatus.team.current_value\"\n                                                    :target-value=\"mutableLoyaltyStatus.team.hold_value\"\n                                                    label=\"\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u0443\u0440\u043E\u0432\u043D\u044F \u043F\u043E \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u043C \u043F\u043E\u043A\u0443\u043F\u043A\u0430\u043C\"\n                                                />\n                                            </li>\n                                            <li class=\"cards-progress__item\">\n                                                <LoyaltyStatusTale\n                                                    :current-value=\"mutableLoyaltyStatus.team.current_value\"\n                                                    :target-value=\"mutableLoyaltyStatus.team.upgrade_value\"\n                                                    :is-hold=\"false\"\n                                                    label=\"\u041F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u0435 \u0443\u0440\u043E\u0432\u043D\u044F \u043F\u043E \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u043C \u043F\u043E\u043A\u0443\u043F\u043A\u0430\u043C\"\n                                                />\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </div>\n                            <!--/\u0422\u0430\u0431 \u0433\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435-->\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"participant__section\">\n                    <h5 class=\"participant__section-title\">\n                        \u041F\u043E\u043A\u0443\u043F\u043A\u0438\n                    </h5>\n\n                    <div class=\"tabs tabs--profile tabs--white tabs--small tabs--circle tabs--red tabs--full-mob\" data-tabs>\n                        <nav v-if=\"user.is_consultant\" class=\"tabs__items\">\n                            <ul class=\"tabs__list\">\n                                <li class=\"tabs__item tabs__item--active\" data-tab=\"block1\">\n                                    \u041B\u0438\u0447\u043D\u044B\u0435\n                                </li>\n\n                                <li class=\"tabs__item\" data-tab=\"block2\">\n                                    \u0413\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435\n                                </li>\n                            </ul>\n                        </nav>\n\n                        <div class=\"tabs__body\">\n                        <template v-if=\"user.is_consultant\">\n                            <!--\u0422\u0430\u0431 \u041B\u0438\u0447\u043D\u044B\u0435-->\n                            <div class=\"tabs__block tabs__block--active\" data-tab-section=\"block1\">\n                                <OrdersReport :orders-report=\"mutableOrdersReport.self\" />\n                            </div>\n                            <!--/\u0422\u0430\u0431 \u041B\u0438\u0447\u043D\u044B\u0435-->\n\n                            <!--\u0422\u0430\u0431 \u0413\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435-->\n                            <div class=\"tabs__block\" data-tab-section=\"block2\">\n                                <OrdersReport :orders-report=\"mutableOrdersReport.team\" :isGroup=\"true\" />\n                            </div>\n                            <!--/\u0422\u0430\u0431 \u0413\u0440\u0443\u043F\u043F\u043E\u0432\u044B\u0435-->\n                        </template>\n                        <template v-else>\n                            <!--\u0422\u0430\u0431 \u041B\u0438\u0447\u043D\u044B\u0435-->\n                            <div class=\"tabs__block tabs__block--active\">\n                                <OrdersReport :orders-report=\"mutableOrdersReport.self\" />\n                            </div>\n                            <!--/\u0422\u0430\u0431 \u041B\u0438\u0447\u043D\u044B\u0435-->\n                        </template>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div> \n    "
    };

    function _regeneratorRuntime$3() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$3 = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var SalesReportPage = {
      components: {
        LoyaltyReport: LoyaltyReport
      },
      data: function data() {
        return {
          consultantsSortAsc: true,
          consultantsSort: 'id',
          buyersSortAsc: true,
          buyersSort: 'id',
          consultantsLoyaltyLevelFilter: [],
          buyersLoyaltyLevelFilter: [],
          mutableConsultants: [],
          mutableBuyers: []
        };
      },
      props: {
        consultantLoyaltyLevels: {
          type: Object,
          required: true
        },
        buyerLoyaltyLevels: {
          type: Object,
          required: true
        },
        consultantAccountingPeriods: {
          type: Array,
          required: true
        },
        buyerAccountingPeriods: {
          type: Array,
          required: true
        },
        currentUser: {
          type: Object,
          required: true
        },
        currentAccountingPeriod: {
          type: Object,
          required: true
        },
        team: {
          type: Array,
          required: true
        }
      },
      setup: function setup() {
        return {
          loyaltySalesReportStore: useLoyaltySalesReportStore()
        };
      },
      computed: {
        consultantsMembers: function consultantsMembers() {
          var _this = this;

          return this.mutableConsultants.filter(function (consultant) {
            return _this.consultantsLoyaltyLevelFilter.length ? _this.consultantsLoyaltyLevelFilter.includes(consultant.user_info.loyalty_level) : true;
          }).sort(function (a, b) {
            var result, aPrepared, bPrepared, aDate, bDate;

            switch (_this.consultantsSort) {
              case 'id':
                result = _this.consultantsSortAsc ? parseInt(a.user_info.id) > parseInt(b.user_info.id) : parseInt(a.user_info.id) < parseInt(b.user_info.id);
                break;

              case 'loyalty_level':
                result = _this.consultantsSortAsc ? a.user_info.loyalty_level > b.user_info.loyalty_level : a.user_info.loyalty_level < b.user_info.loyalty_level;
                break;

              case 'date_register':
                aPrepared = a.user_info.date_register.split('.');
                bPrepared = b.user_info.date_register.split('.');
                aDate = new Date("".concat(aPrepared[2], "-").concat(aPrepared[1], "-").concat(aPrepared[0]));
                bDate = new Date("".concat(bPrepared[2], "-").concat(bPrepared[1], "-").concat(bPrepared[0]));
                result = _this.consultantsSortAsc ? aDate.getTime() > bDate.getTime() : aDate.getTime() < bDate.getTime();
                break;

              case 'paid_orders':
                result = _this.consultantsSortAsc ? parseInt(a.orders_report.self.paid_orders_count) > parseInt(b.orders_report.self.paid_orders_count) : parseInt(a.orders_report.self.paid_orders_count) < parseInt(b.orders_report.self.paid_orders_count);
                break;

              case 'refunded_orders':
                result = _this.consultantsSortAsc ? parseInt(a.orders_report.self.refunded_orders_count) > parseInt(b.orders_report.self.refunded_orders_count) : parseInt(a.orders_report.self.refunded_orders_count) < parseInt(b.orders_report.self.refunded_orders_count);
                break;

              case 'total_sum':
                result = _this.consultantsSortAsc ? parseInt(a.orders_report.self.total_sum) > parseInt(b.orders_report.self.total_sum) : parseInt(a.orders_report.self.total_sum) < parseInt(b.orders_report.self.total_sum);
                break;

              case 'current_bonuses_count':
                result = _this.consultantsSortAsc ? parseInt(a.bonuses_income.total) > parseInt(b.bonuses_income.total) : parseInt(a.bonuses_income.total) < parseInt(b.bonuses_income.total);
                break;

              case 'current_period_sum':
                result = _this.consultantsSortAsc ? parseInt(a.orders_report.self.current_period_sum) > parseInt(b.orders_report.self.current_period_sum) : parseInt(a.orders_report.self.current_period_sum) < parseInt(b.orders_report.self.current_period_sum);
                break;

              case 'last_order_date':
                aPrepared = a.orders_report.self.last_order_date.split('.');
                bPrepared = b.orders_report.self.last_order_date.split('.');
                aDate = new Date("".concat(aPrepared[2], "-").concat(aPrepared[1], "-").concat(aPrepared[0]));
                bDate = new Date("".concat(bPrepared[2], "-").concat(bPrepared[1], "-").concat(bPrepared[0]));

                if (_this.consultantsSortAsc) {
                  if (isNaN(aDate.getTime())) {
                    result = false;
                  } else if (isNaN(bDate.getTime())) {
                    result = true;
                  }

                  result = aDate.getTime() > bDate.getTime();
                }

                if (isNaN(aDate.getTime())) {
                  result = true;
                } else if (isNaN(bDate.getTime())) {
                  result = false;
                }

                result = aDate.getTime() < bDate.getTime();
                break;

              case 'bonuses_count':
                result = _this.consultantsSortAsc ? parseInt(a.bonuses_income.all_total) > parseInt(b.bonuses_income.all_total) : parseInt(a.bonuses_income.all_total) < parseInt(b.bonuses_income.all_total);
                break;
            }

            return result ? 1 : -1;
          });
        },
        buyersMembers: function buyersMembers() {
          var _this2 = this;

          return this.mutableBuyers.filter(function (buyer) {
            return _this2.buyersLoyaltyLevelFilter.length ? _this2.buyersLoyaltyLevelFilter.includes(buyer.user_info.loyalty_level) : true;
          }).sort(function (a, b) {
            var result, aPrepared, bPrepared, aDate, bDate;

            switch (_this2.buyersSort) {
              case 'id':
                result = _this2.buyersSortAsc ? parseInt(a.user_info.id) > parseInt(b.user_info.id) : parseInt(a.user_info.id) < parseInt(b.user_info.id);
                break;

              case 'date_register':
                aPrepared = a.user_info.date_register.split('.');
                bPrepared = b.user_info.date_register.split('.');
                aDate = new Date("".concat(aPrepared[2], "-").concat(aPrepared[1], "-").concat(aPrepared[0]));
                bDate = new Date("".concat(bPrepared[2], "-").concat(bPrepared[1], "-").concat(bPrepared[0]));
                result = _this2.buyersSortAsc ? aDate.getTime() > bDate.getTime() : aDate.getTime() < bDate.getTime();
                break;

              case 'paid_orders':
                result = _this2.buyersSortAsc ? parseInt(a.orders_report.self.paid_orders_count) > parseInt(b.orders_report.self.paid_orders_count) : parseInt(a.orders_report.self.paid_orders_count) < parseInt(b.orders_report.self.paid_orders_count);
                break;

              case 'refunded_orders':
                result = _this2.buyersSortAsc ? parseInt(a.orders_report.self.refunded_orders_count) > parseInt(b.orders_report.self.refunded_orders_count) : parseInt(a.orders_report.self.refunded_orders_count) < parseInt(b.orders_report.self.refunded_orders_count);
                break;

              case 'total_sum':
                result = _this2.buyersSortAsc ? parseInt(a.orders_report.self.total_sum) > parseInt(b.orders_report.self.total_sum) : parseInt(a.orders_report.self.total_sum) < parseInt(b.orders_report.self.total_sum);
                break;

              case 'current_period_sum':
                result = _this2.buyersSortAsc ? parseInt(a.orders_report.self.current_period_sum) > parseInt(b.orders_report.self.current_period_sum) : parseInt(a.orders_report.self.current_period_sum) < parseInt(b.orders_report.self.current_period_sum);
                break;

              case 'last_order_date':
                aPrepared = a.orders_report.self.last_order_date.split('.');
                bPrepared = b.orders_report.self.last_order_date.split('.');
                aDate = new Date("".concat(aPrepared[2], "-").concat(aPrepared[1], "-").concat(aPrepared[0]));
                bDate = new Date("".concat(bPrepared[2], "-").concat(bPrepared[1], "-").concat(bPrepared[0]));

                if (_this2.buyersSortAsc) {
                  if (isNaN(aDate.getTime())) {
                    result = false;
                  } else if (isNaN(bDate.getTime())) {
                    result = true;
                  }

                  result = aDate.getTime() > bDate.getTime();
                }

                if (isNaN(aDate.getTime())) {
                  result = true;
                } else if (isNaN(bDate.getTime())) {
                  result = false;
                }

                result = aDate.getTime() < bDate.getTime();
                break;
            }

            return result ? 1 : -1;
          });
        }
      },
      created: function created() {
        this.mutableConsultants = this.team.consultants;
        this.mutableBuyers = this.team.buyers;
      },
      mounted: function mounted() {
        var _this3 = this;

        $('select[name=consultant_loyalty_levels]').on('change', function () {
          _this3.consultantsLoyaltyLevelFilter = $('select[name=consultant_loyalty_levels]').val();
        });
        $('select[name=buyer_loyalty_levels]').on('change', function () {
          _this3.buyersLoyaltyLevelFilter = $('select[name=buyer_loyalty_levels]').val();
        });
        $('select[name=consultants_sort]').on('change', function () {
          _this3.consultantsSort = $('select[name=consultants_sort]').val();
        });
        $('select[name=buyers_sort]').on('change', function () {
          _this3.buyersSort = $('select[name=buyers_sort]').val();
        });
        $('select[name=consultant_accounting_periods]').on('change', function () {
          return _this3.changeConsultantAccountingPeriod();
        });
        $('select[name=buyer_accounting_periods]').on('change', function () {
          return _this3.changeBuyerAccountingPeriod();
        });
      },
      methods: {
        changeConsultantAccountingPeriod: function changeConsultantAccountingPeriod() {
          var _this4 = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$3().mark(function _callee() {
            var period, response, i;
            return _regeneratorRuntime$3().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    period = $('select[name=consultant_accounting_periods]').val().split('-');
                    _context.next = 3;
                    return _this4.loyaltySalesReportStore.getTeamMembersDataByPeriod(_this4.mutableConsultants.map(function (user) {
                      return user.user_info.id;
                    }), period[0], period[1]);

                  case 3:
                    response = _context.sent;
                    _this4.mutableConsultants = response.data;

                    for (i in response.data) {
                      _this4.$refs["consultant-".concat(response.data[i].user_info.id)][0].changeAccountingPeriod(response.data[i]);
                    }

                  case 6:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        changeBuyerAccountingPeriod: function changeBuyerAccountingPeriod() {
          var _this5 = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$3().mark(function _callee2() {
            var period, response, i;
            return _regeneratorRuntime$3().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    period = $('select[name=buyer_accounting_periods]').val().split('-');
                    _context2.next = 3;
                    return _this5.loyaltySalesReportStore.getTeamMembersDataByPeriod(_this5.mutableBuyers.map(function (user) {
                      return user.user_info.id;
                    }), period[0], period[1]);

                  case 3:
                    response = _context2.sent;
                    _this5.mutableBuyers = response.data;

                    for (i in response.data) {
                      _this5.$refs["buyer-".concat(response.data[i].user_info.id)][0].changeAccountingPeriod(response.data[i]);
                    }

                  case 6:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }))();
        }
      },
      template: "\n        <div class=\"private__col private__col--full\">\n            <div class=\"accounting\">\n                <section class=\"accounting__section section\">\n                    <div class=\"section__box box\">\n                        <LoyaltyReport\n                            :user=\"currentUser.user_info\"\n                            :orders-report=\"currentUser.orders_report\"\n                            :current-accounting-period=\"currentAccountingPeriod\"\n                            :accounting-periods=\"currentUser.accounting_periods\"\n                            :loyalty-status=\"currentUser.loyalty_status\"\n                            :bonuses-income=\"currentUser.bonuses_income\"\n                        />\n                    </div>\n                </section>\n                \n                <section v-if=\"team.consultants.length || team.buyers.length\" class=\"accounting__section section\">\n                    <div class=\"section__box box\">\n                        <div class=\"section__header\">\n                            <h4 class=\"section__title\">\n                                \u0423\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0438 \u0433\u0440\u0443\u043F\u043F\u044B\n                            </h4>\n                        </div>\n\n                        <div class=\"tabs tabs--gray tabs--covered tabs--small tabs--circle tabs--full-mob\" data-tabs>\n                            <nav class=\"accounting__tabs-items tabs__items\">\n                                <ul class=\"tabs__list\">\n                                    <li class=\"tabs__item tabs__item--active\" data-tab=\"block1\">\n                                        \u041A\u043E\u043D\u0441\u0443\u043B\u044C\u0442\u0430\u043D\u0442\u044B\n                                        <span>({{ mutableConsultants.length }})</span>\n                                    </li>\n\n                                    <li class=\"tabs__item\" data-tab=\"block2\">\n                                        \u041F\u043E\u043A\u0443\u043F\u0430\u0442\u0435\u043B\u0438\n                                        <span>({{ mutableBuyers.length }})</span>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                            <div class=\"tabs__body\">\n                                <!--\u041A\u043E\u043D\u0441\u0443\u043B\u044C\u0442\u0430\u043D\u0442\u044B-->\n                                <div class=\"tabs__block tabs__block--active\" data-tab-section=\"block1\">\n                                    <div class=\"accounting__block\">\n                                        <div class=\"accounting__filter content__filter filter filter--content\">\n                                            <form class=\"form form--wraped form--separated form--wraped-small\">\n                                                <div class=\"form__row form__row--merged\">\n                                                    <div class=\"form__col form__col--definite\">\n                                                        <div class=\"form__field\">\n                                                            <div class=\"form__field-block form__field-block--input\">\n                                                                <div class=\"form__control\">\n                                                                    <div class=\"filter__select select select--mitigate select--small select--squared select--multiple\" data-select>\n                                                                        <select class=\"select__control\" name=\"consultant_loyalty_levels\" data-select-control data-placeholder=\"\u0412\u044B\u0431\u0440\u0430\u0442\u044C \u0443\u0440\u043E\u0432\u0435\u043D\u044C\" multiple>\n                                                                            <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                                                                            <option\n                                                                                v-for=\"(level, levelName) in consultantLoyaltyLevels\"\n                                                                                :key=\"levelName\"\n                                                                                :value=\"levelName\"\n                                                                            >{{ levelName }}</option>\n                                                                        </select>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                    <div class=\"form__col form__col--definite\">\n                                                        <div class=\"form__field\">\n                                                            <div class=\"form__field-block form__field-block--input\">\n                                                                <div class=\"form__control\">\n                                                                    <div class=\"filter__select select select--mitigate select--small select--squared\" data-select>\n                                                                        <select class=\"select__control\" name=\"consultant_accounting_periods\" data-select-control data-placeholder=\"\u0412\u044B\u0431\u0440\u0430\u0442\u044C \u043F\u0435\u0440\u0438\u043E\u0434\">\n                                                                            <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                                                                            <option\n                                                                                v-for=\"accountingPeriod in consultantAccountingPeriods\"\n                                                                                :key=\"accountingPeriod.name\"\n                                                                                :value=\"accountingPeriod.from + '-' + accountingPeriod.to\"\n                                                                            >{{ accountingPeriod.name }}</option>\n                                                                        </select>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                    <div class=\"form__col form__col--right form__col--definite\">\n                                                        <div class=\"form__field\">\n                                                            <div class=\"form__field-block form__field-block--input\">\n                                                                <div class=\"form__control\">\n                                                                    <div class=\"filter__sort select select--small select--sorting select--borderless\" data-select>\n                                                                        <select class=\"select__control\" name=\"consultants_sort\" data-select-control data-placeholder=\"\u0421\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043F\u043E\">\n                                                                            <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                                                                            <option value=\"loyalty_level\">\u041F\u043E \u0443\u0440\u043E\u0432\u043D\u044E \u043A\u043E\u043D\u0441\u0443\u043B\u044C\u0442\u0430\u043D\u0442\u0430</option>\n                                                                            <option value=\"date_register\">\u041F\u043E \u0434\u0430\u0442\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438</option>\n                                                                            <option value=\"paid_orders\">\u041F\u043E \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043B\u0438\u0447\u043D\u044B\u0445 \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441\u043E \u0441\u0442\u0430\u0442\u0443\u0441\u043E\u043C \"\u041E\u043F\u043B\u0430\u0447\u0435\u043D\"</option>\n                                                                            <option value=\"refunded_orders\">\u041F\u043E \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043B\u0438\u0447\u043D\u044B\u0445 \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441\u043E \u0441\u0442\u0430\u0442\u0443\u0441\u043E\u043C \"\u0412\u043E\u0437\u0432\u0440\u0430\u0442\"</option>\n                                                                            <option value=\"total_sum\">\u041F\u043E \u0441\u0443\u043C\u043C\u0435 \u0432\u0441\u0435\u0445 \u043B\u0438\u0447\u043D\u044B\u0445 \u0437\u0430\u043A\u0430\u0437\u043E\u0432</option>\n                                                                            <option value=\"current_bonuses_count\">\u041F\u043E \u0441\u0443\u043C\u043C\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u0431\u0430\u043B\u043B\u043E\u0432 \u0437\u0430 \u0442\u0435\u043A\u0443\u0449\u0438\u0439 \u043E\u0442\u0447\u0435\u0442\u043D\u044B\u0439 \u043F\u0435\u0440\u0438\u043E\u0434</option>\n                                                                            <option value=\"current_period_sum\">\u041F\u043E \u0441\u0443\u043C\u043C\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0437\u0430 \u0442\u0435\u043A\u0443\u0449\u0438\u0439 \u043E\u0442\u0447\u0435\u0442\u043D\u044B\u0439 \u043F\u0435\u0440\u0438\u043E\u0434</option>\n                                                                            <option value=\"last_order_date\">\u041F\u043E \u0434\u0430\u0442\u0435 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043B\u0438\u0447\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430</option>\n                                                                            <option value=\"bonuses_count\">\u041F\u043E \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0432\u0441\u0435\u0445 \u0437\u0430\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u043D\u044B\u0445 \u0431\u0430\u043B\u043B\u043E\u0432</option>\n                                                                        </select>\n                            \n                                                                        <button type=\"button\" class=\"input__button input__button--select button button--iconed button--covered button--square button--dark\" @click=\"consultantsSortAsc = !consultantsSortAsc\">\n                                                                            <span class=\"button__icon button__icon--medium\">\n                                                                                <svg class=\"icon icon--sort\">\n                                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-sort\"></use>\n                                                                                </svg>\n                                                                            </span>\n                                                                        </button>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                        <div class=\"accordeon accordeon--separated\">\n                                            <div class=\"participant\">\n                                                <div class=\"participant__head\">\n                                                    <div class=\"participant__head-item participant__head-item--name\">\u0424\u0418\u041E</div>\n                                                    <div class=\"participant__head-item participant__head-item--id\">ID</div>\n                                                    <div class=\"participant__head-item participant__head-item--level\">\u0423\u0440\u043E\u0432\u0435\u043D\u044C</div>\n                                                    <div class=\"participant__head-item participant__head-item--date\">\u041D\u0430 \u0441\u0430\u0439\u0442\u0435 \u0441</div>\n                                                    <div class=\"participant__head-item participant__head-item--tel\">\u0422\u0435\u043B\u0435\u0444\u043E\u043D</div>\n                                                    <div class=\"participant__head-item participant__head-item--email\">Email</div>\n                                                </div>\n\n                                                <LoyaltyReport\n                                                    v-for=\"member in consultantsMembers\"\n                                                    :key=\"member.user_info.id\"\n                                                    :ref=\"'consultant-' + member.user_info.id\"\n                                                    :user=\"member.user_info\"\n                                                    :orders-report=\"member.orders_report\"\n                                                    :current-accounting-period=\"currentAccountingPeriod\"\n                                                    :accounting-periods=\"member.accounting_periods\"\n                                                    :loyalty-status=\"member.loyalty_status\"\n                                                    :bonuses-income=\"member.bonuses_income\"\n                                                    :accordion=\"true\"\n                                                    :title=\"'\u0417\u0430\u0440\u0430\u0431\u043E\u0442\u043E\u043A \u041A\u043E\u043D\u0441\u0443\u043B\u044C\u0442\u0430\u043D\u0442\u0430'\"\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!--/\u041A\u043E\u043D\u0441\u0443\u043B\u044C\u0442\u0430\u043D\u0442\u044B-->\n\n                                <!--\u041F\u043E\u043A\u0443\u043F\u0430\u0442\u0435\u043B\u0438-->\n                                <div class=\"tabs__block\" data-tab-section=\"block2\">\n                                    <div class=\"accounting__block\">\n                                        <div class=\"accounting__filter content__filter filter filter--content\">\n                                            <form class=\"form form--wraped form--separated form--wraped-small\">\n                                                <div class=\"form__row form__row--merged\">\n\n                                                    <div class=\"form__col form__col--definite\">\n                                                        <div class=\"form__field\">\n                                                            <div class=\"form__field-block form__field-block--input\">\n                                                                <div class=\"form__control\">\n                                                                    <div class=\"filter__select select select--mitigate select--small select--squared\" data-select>\n                                                                        <select class=\"select__control\" name=\"buyer_accounting_periods\" data-select-control data-placeholder=\"\u0412\u044B\u0431\u0440\u0430\u0442\u044C \u043F\u0435\u0440\u0438\u043E\u0434\">\n                                                                            <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                                                                            <option\n                                                                                v-for=\"accountingPeriod in buyerAccountingPeriods\"\n                                                                                :key=\"accountingPeriod.name\"   \n                                                                                :value=\"accountingPeriod.from + '-' + accountingPeriod.to\"\n                                                                            >{{ accountingPeriod.name }}</option>\n                                                                        </select>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n\n                                                    <div class=\"form__col form__col--right form__col--definite\">\n                                                        <div class=\"form__field\">\n                                                            <div class=\"form__field-block form__field-block--input\">\n                                                                <div class=\"form__control\">\n                                                                    <div class=\"filter__sort select select--small select--sorting select--borderless\" data-select>\n                                                                        <select class=\"select__control\" name=\"buyers_sort\" id=\"buyers_sort\" data-select-control data-placeholder=\"\u0421\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043F\u043E\">\n                                                                            <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                                                                            <option value=\"date_register\">\u041F\u043E \u0434\u0430\u0442\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438</option>\n                                                                            <option value=\"paid_orders\">\u041F\u043E \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043B\u0438\u0447\u043D\u044B\u0445 \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441\u043E \u0441\u0442\u0430\u0442\u0443\u0441\u043E\u043C \"\u041E\u043F\u043B\u0430\u0447\u0435\u043D\"</option>\n                                                                            <option value=\"refunded_orders\">\u041F\u043E \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u043B\u0438\u0447\u043D\u044B\u0445 \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441\u043E \u0441\u0442\u0430\u0442\u0443\u0441\u043E\u043C \"\u0412\u043E\u0437\u0432\u0440\u0430\u0442\"</option>\n                                                                            <option value=\"total_sum\">\u041F\u043E \u0441\u0443\u043C\u043C\u0435 \u0432\u0441\u0435\u0445 \u043B\u0438\u0447\u043D\u044B\u0445 \u0437\u0430\u043A\u0430\u0437\u043E\u0432</option>\n                                                                            <option value=\"current_period_sum\">\u041F\u043E \u0441\u0443\u043C\u043C\u0435 \u043B\u0438\u0447\u043D\u044B\u0445 \u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0437\u0430 \u0442\u0435\u043A\u0443\u0449\u0438\u0439 \u043E\u0442\u0447\u0435\u0442\u043D\u044B\u0439 \u043F\u0435\u0440\u0438\u043E\u0434</option>\n                                                                            <option value=\"last_order_date\">\u041F\u043E \u0434\u0430\u0442\u0435 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043B\u0438\u0447\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430</option>\n                                                                        </select>\n                            \n                                                                        <button type=\"button\" class=\"input__button input__button--select button button--iconed button--covered button--square button--dark\" @click=\"buyersSortAsc = !buyersSortAsc\">\n                                                                            <span class=\"button__icon button__icon--medium\">\n                                                                                <svg class=\"icon icon--sort\">\n                                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-sort\"></use>\n                                                                                </svg>\n                                                                            </span>\n                                                                        </button>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                        <div class=\"accordeon accordeon--separated\">\n                                            <div class=\"participant\">\n                                                <div class=\"participant__head\">\n                                                    <div class=\"participant__head-item participant__head-item--name\">\u0424\u0418\u041E</div>\n                                                    <div class=\"participant__head-item participant__head-item--id\">ID</div>\n                                                    <div class=\"participant__head-item participant__head-item--pet\">\u041F\u0438\u0442\u043E\u043C\u0435\u0446</div>\n                                                    <div class=\"participant__head-item participant__head-item--date\">\u041D\u0430 \u0441\u0430\u0439\u0442\u0435 \u0441</div>\n                                                    <div class=\"participant__head-item participant__head-item--tel\">\u0422\u0435\u043B\u0435\u0444\u043E\u043D</div>\n                                                    <div class=\"participant__head-item participant__head-item--email\">Email</div>\n                                                </div>\n\n                                                <LoyaltyReport\n                                                    v-for=\"member in buyersMembers\"\n                                                    :key=\"member.user_info.id\"\n                                                    :ref=\"'buyer-' + member.user_info.id\"\n                                                    :user=\"member.user_info\"\n                                                    :orders-report=\"member.orders_report\"\n                                                    :current-accounting-period=\"currentAccountingPeriod\"\n                                                    :accounting-periods=\"member.accounting_periods\"\n                                                    :loyalty-status=\"member.loyalty_status\"\n                                                    :accordion=\"true\"\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!--/\u041F\u043E\u043A\u0443\u043F\u0430\u0442\u0435\u043B\u0438-->\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    "
    };

    function _regeneratorRuntime$4() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$4 = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var usePetStore = ui_vue3_pinia.defineStore('pet', {
      actions: {
        deletePet: function deletePet(petId) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$4().mark(function _callee() {
            return _regeneratorRuntime$4().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return BX.ajax.runComponentAction('zolo:main.profile', 'deletePet', {
                      mode: 'class',
                      data: {
                        petId: petId
                      }
                    });

                  case 2:
                    return _context.abrupt("return", _context.sent);

                  case 3:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        addPet: function addPet(pet) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$4().mark(function _callee2() {
            return _regeneratorRuntime$4().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return BX.ajax.runComponentAction('zolo:main.profile', 'addPet', {
                      mode: 'class',
                      data: {
                        pet: pet
                      }
                    });

                  case 2:
                    return _context2.abrupt("return", _context2.sent);

                  case 3:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }))();
        },
        changePet: function changePet(pet) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$4().mark(function _callee3() {
            return _regeneratorRuntime$4().wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    _context3.next = 2;
                    return BX.ajax.runComponentAction('zolo:main.profile', 'changePet', {
                      mode: 'class',
                      data: {
                        pet: pet
                      }
                    });

                  case 2:
                    return _context3.abrupt("return", _context3.sent);

                  case 3:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }))();
        }
      }
    });

    function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

    function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
    var ELEMENTS_SELECTOR = {
      selectBox: '[data-select]',
      selectControl: '[data-select-control]',
      select2Container: '.select2-container'
    };
    function select () {
      /**
       * Инициализирует селекты с плагином select2
       * @param jqObj объект JQuery (контейнер, в котором нужно проинициализировать селекты). Если не задан - инициализирует все селекты в BODY
       */
      function initSelect() {
        var jqObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;
        var baseOptions = {
          templateResult: formatState,
          templateSelection: formatState
        };

        function formatState(state) {
          var before = $(state.element).data('option-before') ? $(state.element).data('option-before') : '';
          var after = $(state.element).data('option-after') ? $(state.element).data('option-after') : '';
          var classItem = before || after ? 'select__item--inlined' : '';
          var result = $("\n                <span class=\"select__item ".concat(classItem, "\">\n                    ").concat(before, "\n                    ").concat(state.text, "\n                    ").concat(after, "\n                </span>\n            "));
          return result;
        }

        function searchDisabled(element) {
          var searchfield = element.parent().find('.select2-search__field');
          searchfield.prop('disabled', true);
        }

        var scrollOptions = {
          autohidemode: "leave",
          railpadding: {
            top: 0,
            right: 0,
            left: 6,
            bottom: 0
          }
        };
        var selectsContainer = $(document.body);

        if (typeof jqObj != 'undefined') {
          selectsContainer = jqObj;
        }

        selectsContainer.find(ELEMENTS_SELECTOR.selectControl).each(function (index, select) {
          var $selectBox = $(select).closest(ELEMENTS_SELECTOR.selectBox);
          var petsBreed = $selectBox.data('pets-breed');

          if (petsBreed != undefined) {
            baseOptions.language = {
              "noResults": function noResults() {
                return "Выберите тип питомца";
              }
            };
          }

          var placeholder = $(select).attr('data-placeholder');

          var currentOptions = _objectSpread(_objectSpread({}, baseOptions), {}, {
            placeholder: placeholder,
            dropdownParent: $selectBox
          });

          $(select).select2(currentOptions).on('select2:open', function (e) {
            var $select = $(this);
            var $selectContainer = $select.siblings('.select2-container');
            var $selectList = $selectContainer.find('.select2-results__options');
            $selectList.niceScroll(scrollOptions);
          }).on('select2:close', function () {
            var select = $(this);
            var multiple = select.attr('multiple');

            if (typeof multiple !== 'undefined' && multiple !== false) {
              select.closest('[data-select]').find('.select2-selection__rendered').html(function () {
                var counter = select.select2('data').length;

                if (counter > 0) {
                  return "<li class=\"select2-selection__rendered-item\">\u0412\u044B\u0431\u0440\u0430\u043D\u043E: ".concat(counter, "<li>");
                }
              });
            }
          }).on('select2:opening select2:closing', function () {
            searchDisabled($(this));
          });
        });
      }

      initSelect();
      window.initSelect = initSelect;
    }

    var StringFormatMixin = {
      methods: {
        uppercaseFirst: function uppercaseFirst(string) {
          return string[0].toUpperCase() + string.substring(1);
        }
      }
    };

    var id$1 = 0;
    var Select = {
      mixins: [StringFormatMixin],
      data: function data() {
        return {
          componentId: 'select-' + ++id$1
        };
      },
      props: {
        name: {
          type: String,
          required: true
        },
        placeholder: {
          type: String,
          "default": null
        },
        options: {
          type: Object,
          required: true
        },
        selected: {
          type: Number,
          "default": null
        },
        iconed: {
          type: Boolean,
          "default": false
        }
      },
      mounted: function mounted() {
        var _this = this;

        select();
        $("#".concat(this.componentId)).on('change', function () {
          _this.$emit('custom-change', $("#".concat(_this.componentId)).val());
        });
      },
      methods: {
        getIconPath: function getIconPath(icon) {
          return "<svg class=\"select__item-icon icon icon--".concat(icon, "\"><use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-").concat(icon, "\"></use></svg>");
        }
      },
      template: "\n        <div class=\"select select--mitigate\" :class=\"{ 'select--iconed': iconed }\" data-select>\n            <select class=\"select__control\" :name=\"name\" :id=\"componentId\" data-select-control :data-placeholder=\"placeholder ?? '\u0412\u044B\u0431\u0440\u0430\u0442\u044C'\">\n                <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                <option\n                    v-for=\"(option, optionId) in options\"\n                    :key=\"optionId\"\n                    :value=\"optionId\"\n                    :data-option-before=\"iconed ? getIconPath(option.icon) : false\"\n                    :selected=\"optionId === selected\"\n                >\n                    {{ uppercaseFirst(option.name) }}\n                </option>\n            </select>\n        </div>\n    "
    };

    var id$2 = 0;
    var DateInput = {
      data: function data() {
        return {
          componentId: 'date-input-' + ++id$2,
          currentValue: null
        };
      },
      props: {
        name: {
          type: String,
          required: true
        },
        value: {
          type: String,
          "default": null
        }
      },
      watch: {
        currentValue: function currentValue(newValue) {
          this.$emit('custom-change', newValue);
        }
      },
      created: function created() {
        this.currentValue = this.value;
      },
      mounted: function mounted() {// inputMaskInit($(`[data-date-input-id=${this.componentId}]`), 'dateMask');
      },
      template: "\n        <div class=\"input input--iconed\" :data-date-input-id=\"componentId\">\n            <input\n                inputmode=\"numeric\"\n                class=\"input__control\"\n                :name=\"name\"\n                placeholder=\"\u0414\u0414.\u041C\u041C.\u0413\u0413\u0413\u0413\"\n                data-mask-date\n                :id=\"componentId\"\n                v-model=\"currentValue\"\n                data-pets-date-input\n                data-pets-change\n                autocomplete=\"off\"\n            >\n            <span class=\"input__control-error--mask\"></span>\n            <span class=\"input__icon\">\n                <svg class=\"icon icon--calendar\">\n                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-calendar\"></use>\n                </svg>\n            </span>\n        </div>\n    "
    };

    function _regeneratorRuntime$5() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$5 = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var Pets = {
      components: {
        Select: Select,
        DateInput: DateInput
      },
      data: function data() {
        return {
          originalPets: {},
          mutablePets: []
        };
      },
      props: {
        pets: {
          type: Object,
          "default": {}
        },
        genders: {
          type: Object,
          required: true
        },
        breeds: {
          type: Object,
          required: true
        },
        kinds: {
          type: Object,
          required: true
        }
      },
      setup: function setup() {
        return {
          petStore: usePetStore()
        };
      },
      created: function created() {
        this.originalPets = JSON.parse(JSON.stringify(this.pets));
        this.mutablePets = JSON.parse(JSON.stringify(Object.values(this.pets)));
      },
      methods: {
        addPet: function addPet() {
          this.mutablePets.push({
            id: "new-".concat(Date.now()),
            editing: true
          });
        },
        deletePet: function deletePet(pet) {
          if (pet.id.indexOf('new') === -1) {
            this.petStore.deletePet(pet.id);
          }

          this.mutablePets.splice(this.mutablePets.indexOf(pet), 1);
        },
        checkPetAvailable: function checkPetAvailable(pet) {
          var _pet$birthdate;

          var petReplaceValue = (_pet$birthdate = pet.birthdate) === null || _pet$birthdate === void 0 ? void 0 : _pet$birthdate.replace(/[^0-9]/g, '');
          var petBirthdateLenght = petReplaceValue === null || petReplaceValue === void 0 ? void 0 : petReplaceValue.length;

          if (petBirthdateLenght < 8) {
            return;
          }

          return pet.name && pet.kind && pet.breed && pet.birthdate && pet.gender;
        },
        cancelEditing: function cancelEditing(pet, petKey) {
          if (pet.id.indexOf('new') !== -1) {
            this.deletePet(pet);
          } else {
            this.mutablePets[petKey] = JSON.parse(JSON.stringify(this.originalPets[pet.id]));
          }
        },
        savePet: function savePet(pet) {
          var _this = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$5().mark(function _callee() {
            var response;
            return _regeneratorRuntime$5().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    if (!(pet.id.indexOf('new') === -1)) {
                      _context.next = 5;
                      break;
                    }

                    _context.next = 3;
                    return _this.petStore.changePet(pet);

                  case 3:
                    _context.next = 9;
                    break;

                  case 5:
                    _context.next = 7;
                    return _this.petStore.addPet(pet);

                  case 7:
                    response = _context.sent;
                    pet.id = "".concat(response.data.id);

                  case 9:
                    pet.editing = false;
                    _this.originalPets[pet.id] = JSON.parse(JSON.stringify(pet));
                    setTimeout(function () {
                      tippy('button[data-tippy-content]', {
                        theme: 'light',
                        arrow: false,
                        appendTo: 'parent'
                      });
                    }, 500);

                  case 12:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        }
      },
      template: "\n        <div class=\"profile__block accordeon__item\" data-accordeon>\n            <div class=\"section__box box box--gray box--rounded\">\n                <div class=\"profile__accordeon-header accordeon__header section__header\">\n                    <h4 class=\"section__title section__title--closer\">\u0414\u0430\u043D\u043D\u044B\u0435 \u043E \u043F\u0438\u0442\u043E\u043C\u0446\u0430\u0445</h4>\n\n                    <div class=\"profile__actions\">\n                        <button type=\"button\" class=\"profile__actions-button profile__actions-button--toggle accordeon__toggle button button--circular button--mini button--covered button--red-white\" data-accordeon-toggle>\n                            <span class=\"accordeon__toggle-icon button__icon\">\n                                <svg class=\"icon icon--arrow-down\">\n                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-down\"></use>\n                                </svg>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n\n                <div class=\"profile__accordeon-body accordeon__body accordeon__body--closer\" data-accordeon-content>\n                    <div class=\"pet-cards\">\n                        <ul class=\"pet-cards__list\" data-pets-list>\n                            <li v-for=\"(pet, petKey) in mutablePets\" :key=\"pet.id\" class=\"pet-cards__item\">\n                                <article class=\"pet-card\" :class=\"{ 'pet-card--editing': pet.editing }\" data-pets-card>\n                                    <div class=\"pet-card__main box box--circle\" data-pets-main>\n                                        <div class=\"pet-card__content\">\n                                            <div class=\"pet-card__avatar\" data-pets-type>\n                                                <svg class=\"icon\" :class=\"'icon--' + pet.kind?.code.toLowerCase().substring(5)\">\n                                                    <use :xlink:href=\"'/local/templates/.default/images/icons/sprite.svg#icon-' + pet.kind?.code.toLowerCase().substring(5)\"></use>\n                                                </svg>\n                                            </div>\n\n                                            <div class=\"pet-card__info\">\n                                                <div class=\"pet-card__name\" data-pets-name>\n                                                    {{ pet.name }}\n                                                </div>\n\n                                                <div class=\"pet-card__breed\" data-pets-breed>\n                                                    {{ pet.breed?.name }}\n                                                </div>\n\n                                                <div class=\"pet-card__info-record\">\n                                                    <div class=\"pet-card__gender\" data-pets-gender>\n                                                        <svg class=\"icon\" :class=\"'icon--' + (pet.gender?.code.indexOf('FEMALE') !== -1 ? 'woman' : 'man')\">\n                                                            <use :xlink:href=\"'/local/templates/.default/images/icons/sprite.svg#icon-' + (pet.gender?.code.indexOf('FEMALE') !== -1 ? 'woman' : 'man')\"></use>\n                                                        </svg>\n                                                    </div>\n\n                                                    <div class=\"pet-card__date\" data-pets-date>\n                                                        {{ pet.birthdate }}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"pet-card__actions\">\n                                            <div class=\"pet-card__modify\">\n                                                <button type=\"button\" class=\"pet-card__actions-button button button--iconed button--simple button--red\" data-tippy-content=\"\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C\" @click=\"pet.editing = true\">\n                                                    <span class=\"button__icon\">\n                                                        <svg class=\"icon icon--edit\">\n                                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-edit\"></use>\n                                                        </svg>\n                                                    </span>\n                                                </button>\n                                            </div>\n\n                                            <div class=\"pet-card__delete\">\n                                                <button type=\"button\" class=\"pet-card__actions-button button button--iconed button--simple button--red\" data-tippy-content=\"\u0423\u0434\u0430\u043B\u0438\u0442\u044C\" @click=\"deletePet(pet)\">\n                                                    <span class=\"button__icon\">\n                                                        <svg class=\"icon icon--trash\">\n                                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-trash\"></use>\n                                                        </svg>\n                                                    </span>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"pet-card__edit box box--rounded-sm\" data-pets-edit>\n                                        <form class=\"form\" action=\"\" method=\"post\" data-pets-form>\n                                            <div class=\"pet-card__row form__row\">\n                                                <div class=\"pet-card__col pet-card__col--1-3 pet-card__col--3 form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"UF_KIND\" class=\"form__label\">\n                                                                <span class=\"form__label-text\">\u0422\u0438\u043F \u043F\u0438\u0442\u043E\u043C\u0446\u0430</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"form__control\">\n                                                                <Select\n                                                                    :name=\"UF_KIND\"\n                                                                    :options=\"kinds\"\n                                                                    :selected=\"pet.kind?.id\"\n                                                                    :iconed=\"true\"\n                                                                    @custom-change=\"(value) => { pet.kind = kinds[value]; pet.breed = null }\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"pet-card__col pet-card__col--1-3 form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"UF_GENDER\" class=\"form__label\">\n                                                                <span class=\"form__label-text\">\u041F\u043E\u043B</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"form__control\">\n                                                                <Select\n                                                                    :name=\"UF_GENDER\"\n                                                                    :options=\"genders\"\n                                                                    :selected=\"pet.gender?.id\"\n                                                                    @custom-change=\"(value) => { pet.gender = genders[value] }\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"pet-card__col pet-card__col--1-3 form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"UF_BIRTHDATE\" class=\"form__label\">\n                                                                <span class=\"form__label-text\">\u0414\u0430\u0442\u0430 \u0440\u043E\u0436\u0434\u0435\u043D\u0438\u044F</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                           <DateInput\n                                                               :name=\"UF_BIRTHDATE\"\n                                                               :value=\"pet.birthdate\"\n                                                               @custom-change=\"(value) => { pet.birthdate = value }\"\n                                                           />\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"pet-card__col pet-card__col--1-2 pet-card__col--1 form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"UF_BREED\" class=\"form__label\">\n                                                                <span class=\"form__label-text\">\u041F\u043E\u0440\u043E\u0434\u0430</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"form__control\">\n                                                                <Select\n                                                                    :name=\"UF_BREED\"\n                                                                    :options=\"breeds[pet.kind?.code] ?? {}\"\n                                                                    :selected=\"pet.breed?.id\"\n                                                                    @custom-change=\"(value) => { pet.breed = breeds[pet.kind.code][value] }\"\n                                                                    data-pets-breed\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"pet-card__col pet-card__col--1-2 pet-card__col--2 form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"UF_NAME\" class=\"form__label\">\n                                                                <span class=\"form__label-text\">\u041A\u043B\u0438\u0447\u043A\u0430</span>\n                                                            </label>\n                                                        </div>\n                                                \n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"input\">\n                                                                <input\n                                                                    type=\"text\"\n                                                                    class=\"input__control\"\n                                                                    name=\"UF_NAME\"\n                                                                    id=\"text19\"\n                                                                    placeholder=\"\u0412\u044B\u0431\u0440\u0430\u0442\u044C\"\n                                                                    data-pets-name-input\n                                                                    v-model=\"pet.name\"\n                                                                >\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"pet-card__buttons\">\n                                                <button type=\"button\" class=\"pet-card__button pet-card__button-save button button--rounded button--covered button--green button--full\" :class=\"{ 'button--disabled': !checkPetAvailable(pet) }\" :disabled=\"!checkPetAvailable(pet)\" @click=\"savePet(pet)\">\n                                                    \u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F\n                                                </button>\n                                            \n                                                <button type=\"button\" class=\"pet-card__button button button--rounded button--mixed button--red button--full\" @click=\"() => cancelEditing(pet, petKey)\">\n                                                    \u041E\u0442\u043C\u0435\u043D\u0438\u0442\u044C \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F\n                                                </button>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </article>\n                            </li>\n                        </ul>\n\n                        <div class=\"pet-cards__adding\">\n                            <button type=\"button\" class=\"button button--rounded button--covered button--white-green button--full\" :class=\"{ 'button--disabled': mutablePets.length >= 10 }\" :disabled=\"mutablePets.length >= 10\" @click=\"addPet\">\n                                <span class=\"button__icon button__icon--medium\">\n                                    <svg class=\"icon icon--add-circle\">\n                                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-add-circle\"></use>\n                                    </svg>\n                                </span>\n                                <span class=\"button__text\">\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043F\u0438\u0442\u043E\u043C\u0446\u0430</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    "
    };

    function _regeneratorRuntime$6() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$6 = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var usePersonalDataStore = ui_vue3_pinia.defineStore('personalData', {
      actions: {
        savePersonalData: function savePersonalData(data) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$6().mark(function _callee() {
            return _regeneratorRuntime$6().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return BX.ajax.runComponentAction('zolo:main.profile', 'savePersonalData', {
                      mode: 'class',
                      data: {
                        userInfo: data
                      }
                    });

                  case 2:
                    return _context.abrupt("return", _context.sent);

                  case 3:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        sendCode: function sendCode(value, type) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$6().mark(function _callee2() {
            return _regeneratorRuntime$6().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return BX.ajax.runComponentAction('zolo:main.profile', 'sendCode', {
                      mode: 'class',
                      data: {
                        value: value,
                        type: type
                      }
                    });

                  case 2:
                    return _context2.abrupt("return", _context2.sent);

                  case 3:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }))();
        },
        verifyCode: function verifyCode(code, type) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$6().mark(function _callee3() {
            return _regeneratorRuntime$6().wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    _context3.next = 2;
                    return BX.ajax.runComponentAction('zolo:main.profile', 'verifyCode', {
                      mode: 'class',
                      data: {
                        code: code,
                        type: type
                      }
                    });

                  case 2:
                    return _context3.abrupt("return", _context3.sent);

                  case 3:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3);
          }))();
        }
      }
    });

    function _regeneratorRuntime$7() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$7 = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

    function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

    function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
    var PersonalData = {
      components: {
        Select: Select
      },
      data: function data() {
        return {
          mutableUserInfo: {},
          editing: false,
          phoneError: false,
          emailError: false,
          passwordError: false,
          phoneVerified: false,
          emailVerified: false,
          verifyError: false,
          confirmationType: false
        };
      },
      props: {
        userInfo: {
          type: Object,
          "default": {}
        },
        genders: {
          type: Object,
          required: true
        },
        cities: {
          type: Object,
          required: true
        },
        pickupPoints: {
          type: Object,
          required: true
        }
      },
      computed: {
        userCity: function userCity() {
          var _this = this;

          return Object.values(this.cities).find(function (city) {
            return city.name === _this.mutableUserInfo.city;
          });
        },
        validatePassword: function validatePassword() {
          switch (true) {
            case this.mutableUserInfo.password !== this.mutableUserInfo.confirm_password:
            case this.mutableUserInfo.password.length < 8:
            case this.mutableUserInfo.password.match(/[А-я]+/i):
            case this.mutableUserInfo.password.toUpperCase() === this.mutableUserInfo.password:
            case this.mutableUserInfo.password.toLowerCase() === this.mutableUserInfo.password:
              return false;
          }

          return true;
        }
      },
      setup: function setup() {
        return {
          personalDataStore: usePersonalDataStore()
        };
      },
      created: function created() {
        this.initUserInfo();
      },
      methods: {
        initUserInfo: function initUserInfo() {
          this.mutableUserInfo = JSON.parse(JSON.stringify(this.userInfo));
        },
        cancelEditing: function cancelEditing() {
          this.editing = false;
          this.initUserInfo();
        },
        saveUserInfo: function saveUserInfo() {
          this.passwordError = false;
          this.phoneError = false;
          this.emailError = false;
          var error = false;
          this.mutableUserInfo = _objectSpread$1(_objectSpread$1({}, this.mutableUserInfo), {}, {
            last_name: this.mutableUserInfo.last_name.replaceAll(/(?:(?![\x2DA-Za-z\u0401\u0410-\u044F\u0451])[\s\S])+/g, '').slice(0, 100),
            first_name: this.mutableUserInfo.first_name.replaceAll(/(?:(?![\x2DA-Za-z\u0401\u0410-\u044F\u0451])[\s\S])+/g, '').slice(0, 100),
            second_name: this.mutableUserInfo.second_name.replaceAll(/(?:(?![\x2DA-Za-z\u0401\u0410-\u044F\u0451])[\s\S])+/g, '').slice(0, 100)
          });

          if (this.userInfo.phone !== this.mutableUserInfo.phone.replaceAll(/\(|\)|\s|-+/g, '') && this.phoneVerified !== this.mutableUserInfo.phone) {
            error = true;
            this.phoneError = true;
          }

          if (this.userInfo.email !== this.mutableUserInfo.email && this.emailVerified !== this.mutableUserInfo.email) {
            error = true;
            this.emailError = true;
          }

          if ((this.mutableUserInfo.password || this.mutableUserInfo.confirm_password) && !this.validatePassword) {
            error = true;
            this.passwordError = true;
          }

          if (error) {
            return;
          }

          this.mutableUserInfo.photo_id = $('input[type=file][name=photo]').parent().find('input[type=hidden]').val();
          this.personalDataStore.savePersonalData(_objectSpread$1(_objectSpread$1({}, this.mutableUserInfo), {}, {
            phone: this.mutableUserInfo.phone.replaceAll(/\(|\)|\s|-+/g, '')
          }));
          this.editing = false;
          this.initUserInfo();
          $.fancybox.open({
            src: '#thanks'
          });
        },
        sendCode: function sendCode(value, type) {
          var _this2 = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$7().mark(function _callee() {
            var response;
            return _regeneratorRuntime$7().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.prev = 0;
                    _context.next = 3;
                    return _this2.personalDataStore.sendCode(value, type);

                  case 3:
                    response = _context.sent;

                    if (!(!response.data || response.data.status === 'error')) {
                      _context.next = 6;
                      break;
                    }

                    throw new Error(response.data.message);

                  case 6:
                    _this2.confirmationType = type;
                    _context.next = 13;
                    break;

                  case 9:
                    _context.prev = 9;
                    _context.t0 = _context["catch"](0);
                    _this2.phoneError = _context.t0.message ? _context.t0.message : true;
                    return _context.abrupt("return");

                  case 13:
                    $.fancybox.open({
                      src: '#approve-number'
                    });

                  case 14:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, null, [[0, 9]]);
          }))();
        },
        verifyCode: function verifyCode() {
          var _this3 = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$7().mark(function _callee2() {
            var codeInput, response;
            return _regeneratorRuntime$7().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.prev = 0;
                    codeInput = $('input[name=verify_code]');
                    _context2.next = 4;
                    return _this3.personalDataStore.verifyCode(codeInput.val(), _this3.confirmationType);

                  case 4:
                    response = _context2.sent;

                    if (!(!response.data || response.data.status === 'error')) {
                      _context2.next = 9;
                      break;
                    }

                    throw new Error();

                  case 9:
                    if (_this3.confirmationType === 'phone') {
                      _this3.phoneError = false;
                      _this3.phoneVerified = _this3.mutableUserInfo.phone;
                    } else if (_this3.confirmationType === 'email') {
                      _this3.emailError = false;
                      _this3.emailVerified = _this3.mutableUserInfo.email;
                    }

                  case 10:
                    codeInput.val('');
                    _context2.next = 17;
                    break;

                  case 13:
                    _context2.prev = 13;
                    _context2.t0 = _context2["catch"](0);
                    _this3.verifyError = true;
                    return _context2.abrupt("return");

                  case 17:
                    _this3.verifyError = false;
                    _this3.confirmationType = false;
                    $.fancybox.close({
                      src: '#approve-number'
                    });

                  case 20:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2, null, [[0, 13]]);
          }))();
        }
      },
      template: "\n        <div class=\"profile__block accordeon__item\" data-accordeon :class=\"{ 'profile__block--edit': editing }\">\n            <section class=\"section\">\n                <form class=\"form form--wraped form--separated\" action=\"\" method=\"post\" data-profile-form data-validation=\"profile\">\n                    <div class=\"section__box box box--gray box--rounded-sm\">\n                        <div class=\"profile__accordeon-header accordeon__header section__header\">\n                            <h4 class=\"section__title section__title--closer\">\u041F\u0435\u0440\u0441\u043E\u043D\u0430\u043B\u044C\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435</h4>\n                            <div class=\"profile__actions\">\n                                <button v-if=\"!editing\" type=\"button\" class=\"profile__actions-button profile__actions-button--edit profile__actions-button--edit-personal button button--simple button--red\" @click=\"editing = true\">\n                                    <span class=\"button__icon\">\n                                        <svg class=\"icon icon--edit\">\n                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-edit\"></use>\n                                        </svg>\n                                    </span>\n                                    <span class=\"button__text\">\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C</span>\n                                </button>\n\n                                <button type=\"button\" class=\"profile__actions-button profile__actions-button--toggle accordeon__toggle button button--circular button--mini button--covered button--red-white\" data-accordeon-toggle >\n                                    <span class=\"accordeon__toggle-icon button__icon\">\n                                        <svg class=\"icon icon--arrow-down\">\n                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-down\"></use>\n                                        </svg>\n                                    </span>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class=\"profile__accordeon-body accordeon__body accordeon__body--closer\" data-accordeon-content>\n                            <div class=\"profile__actions profile__actions--mobile\">\n                                <button v-if=\"!editing\" type=\"button\" class=\"profile__actions-button button button--simple button--red\" @click=\"editing = true\">\n                                    <span class=\"button__icon\">\n                                        <svg class=\"icon icon--edit\">\n                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-edit\"></use>\n                                        </svg>\n                                    </span>\n                                    <span class=\"button__text\">\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C</span>\n                                </button>\n                            </div>\n\n                            <div class=\"section__wrapper\">\n                                <div class=\"profile__avatar\">\n                                    <div class=\"profile__avatar-box\">\n                                        <div class=\"profile__avatar-image\">\n                                            <img v-if=\"mutableUserInfo.photo\" :src=\"mutableUserInfo.photo\" alt=\"\u041F\u0435\u0440\u0441\u043E\u043D\u0430\u043B\u044C\u043D\u043E\u0435 \u0444\u043E\u0442\u043E\" class=\"profile__avatar-image-pic\">\n                                            <svg v-else class=\"dropzone__message-button-icon icon icon--camera\">\n                                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-camera\"></use>\n                                            </svg>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"profile__dropzone dropzone dropzone--image dropzone--simple\" data-uploader>\n                                        <input type=\"file\" name=\"photo\" multiple class=\"dropzone__control js-required\">\n                                        <div class=\"dropzone__area\">\n                                            <div class=\"dropzone__message dropzone__message--simple dz-message needsclick\">\n                                                <div class=\"dropzone__message-button dz-button link needsclick\" data-uploader-previews>\n                                                    <img v-if=\"mutableUserInfo.photo\" :src=\"mutableUserInfo.photo\" alt=\"\u041F\u0435\u0440\u0441\u043E\u043D\u0430\u043B\u044C\u043D\u043E\u0435 \u0444\u043E\u0442\u043E\" class=\"profile__avatar-image-pic\">\n                                                    <svg v-else class=\"dropzone__message-button-icon icon icon--camera\">\n                                                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-camera\"></use>\n                                                    </svg>\n                                                </div>\n\n                                                <div class=\"profile__toggle\">\n                                                    <button type=\"button\" class=\"dropzone__button button button--medium button--rounded button--outlined button--green\" data-uploader-area='{\"paramName\": \"photo\", \"url\":\"/_markup/gui.php\", \"images\": true, \"single\": true, \"acceptedFiles\": \".jpg, .jpeg, .png, .heic\" ,\"maxFiles\": \"1\", \"maxFileSize\": \"3\" }'>\n                                                        <span class=\"button__icon\">\n                                                            <svg class=\"icon icon--import\">\n                                                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-import\"></use>\n                                                            </svg>\n                                                        </span>\n                                                        <span class=\"button__text\">\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044C \u0444\u043E\u0442\u043E</span>\n                                                    </button>\n                                                </div>\n\n                                                <div class=\"profile__toggle dropzone__message-caption needsclick\">\n                                                    <h6 class=\"dropzone__message-title\">\u0422\u0440\u0435\u0431\u043E\u0432\u0430\u043D\u0438\u044F \u043A \u0444\u043E\u0442\u043E:</h6>\n                                                    <ul class=\"dropzone__message-list\">\n                                                        <li class=\"dropzone__message-item\">\u0444\u043E\u0440\u043C\u0430\u0442 jpg, jpeg, png, heic</li>\n                                                        <li class=\"dropzone__message-item\">\u0440\u0430\u0437\u043C\u0435\u0440 720 \u0425 1280 px</li>\n                                                        <li class=\"dropzone__message-item\">\u0432\u0435\u0441 \u043D\u0435 \u0431\u043E\u043B\u0435\u0435 3\u041C\u0411</li>\n                                                    </ul>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"profile__info\">\n                                        <span v-if=\"mutableUserInfo.is_consultant\" class=\"profile__level\">\n                                            \u0423\u0440\u043E\u0432\u0435\u043D\u044C {{ mutableUserInfo.loyalty_level }}\n                                        </span>\n                                        <span class=\"profile__id\">ID {{ mutableUserInfo.id }}</span>\n                                    </div>\n                                </div>\n\n                                <div class=\"section__box-inner section__box-inner--full\">\n                                    <div class=\"section__box-content section__box-content--collapsed box box--white box--rounded-sm box--inner\" data-identic data-validate-dependent>\n                                    <div class=\"section__box-block\">\n                                        <div class=\"form__row form__row--special\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"last_name\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0424\u0430\u043C\u0438\u043B\u0438\u044F</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control js-required\"\n                                                                name=\"last_name\"\n                                                                id=\"last_name\"\n                                                                placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0444\u0430\u043C\u0438\u043B\u0438\u044E\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableUserInfo.last_name\"\n                                                                data-replace-input=\"fullName\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"first_name\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0418\u043C\u044F</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control js-required\" \n                                                                name=\"first_name\"\n                                                                id=\"first_name\"\n                                                                placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0438\u043C\u044F\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableUserInfo.first_name\" \n                                                                data-replace-input=\"fullName\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"second_name\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041E\u0442\u0447\u0435\u0441\u0442\u0432\u043E</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input \n                                                                type=\"text\" \n                                                                class=\"input__control js-required-dependent\" \n                                                                name=\"second_name\" \n                                                                id=\"second_name\" \n                                                                placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043E\u0442\u0447\u0435\u0441\u0442\u0432\u043E\" \n                                                                :readonly=\"!editing\" \n                                                                data-identic-input\n                                                                v-model=\"mutableUserInfo.second_name\"\n                                                                data-replace-input=\"fullName\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <!-- TODO: \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0438\u0442\u044C\u0441\u044F \u0441 \u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0435\u0439 -->\n                                        <div class=\"profile__toggle form__row form__row--centered\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"checkbox\">\n                                                        <input \n                                                            type=\"checkbox\" \n                                                            class=\"checkbox__input\" \n                                                            name=\"without_second_name\" \n                                                            id=\"without_second_name\" \n                                                            data-identic-change \n                                                            data-validate-dependent-change\n                                                            v-model=\"mutableUserInfo.without_second_name\"\n                                                            :checked=\"mutableUserInfo.without_second_name\" \n                                                        >\n    \n                                                        <label for=\"without_second_name\" class=\"checkbox__label\">\n                                                            <span class=\"checkbox__icon\">\n                                                                <svg class=\"checkbox__icon-pic icon icon--check\">\n                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-check\"></use>\n                                                                </svg>\n                                                            </span>\n    \n                                                            <span class=\"checkbox__text\">\u0423 \u043C\u0435\u043D\u044F \u043D\u0435\u0442 \u043E\u0442\u0447\u0435\u0441\u0442\u0432\u0430</span>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"gender\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041F\u043E\u043B</span>\n                                                        </label>\n                                                    </div>\n    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"form__control\">\n                                                            <div class=\"profile__toggle-select select select--mitigate\" data-select>\n                                                                <Select\n                                                                    name=\"gender\"\n                                                                    :options=\"genders\"\n                                                                    placeholder=\"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u043F\u043E\u043B\"\n                                                                    :selected=\"mutableUserInfo.gender\"\n                                                                    @custom-change=\"(value) => { mutableUserInfo.gender = value }\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"birthdate\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0414\u0430\u0442\u0430 \u0440\u043E\u0436\u0434\u0435\u043D\u0438\u044F</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input input--iconed\">\n                                                            <input \n                                                                inputmode=\"numeric\"\n                                                                class=\"input__control js-required js-date\"\n                                                                name=\"birthdate\"\n                                                                id=\"birthdate\"\n                                                                placeholder=\"\u0414\u0414.\u041C\u041C.\u0413\u0413\u0413\u0413\"\n                                                                data-mask-date-reg\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableUserInfo.birthdate\"\n                                                                autocomplete=\"off\"\n                                                            >\n                                                            <span class=\"input__control-error--mask\"></span>\n                                                            <span class=\"input__icon\">\n                                                                <svg class=\"icon icon--calendar\">\n                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-calendar\"></use>\n                                                                </svg>\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"email\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">E-mail</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input \n                                                                type=\"text\" \n                                                                class=\"input__control js-required js-email\" \n                                                                name=\"email\" \n                                                                id=\"email\" \n                                                                placeholder=\"example@email.com\" \n                                                                data-mail \n                                                                inputmode=\"email\"  \n                                                                :class=\"{ 'input__control--error': emailError }\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableUserInfo.email\" \n                                                            >\n                                                            \n                                                            <span v-if=\"typeof emailError === 'string'\" class=\"input__control-error\">\n                                                                {{ emailError }}\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    \n                                                    <button\n                                                        v-if=\"editing && mutableUserInfo.email.indexOf('_') === -1 && userInfo.email !== mutableUserInfo.email && emailVerified !== mutableUserInfo.email\"\n                                                        type=\"button\"\n                                                        class=\"form__field-button button button--simple button--red button--underlined button--tiny\"\n                                                        data-src=\"#approve-number\"\n                                                        @click=\"sendCode(mutableUserInfo.email, 'email')\"\n                                                        :style=\"{ color: emailError ? 'red' : 'black' }\"\n                                                    >\n                                                        \u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044C\n                                                    </button>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"phone\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0422\u0435\u043B\u0435\u0444\u043E\u043D</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input \n                                                                type=\"tel\" \n                                                                class=\"input__control js-required\" \n                                                                name=\"phone\" \n                                                                id=\"phone\" \n                                                                placeholder=\"+7 (___) ___-__-__\" \n                                                                data-phone \n                                                                inputmode=\"text\"  \n                                                                :class=\"{ 'input__control--error': phoneError }\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableUserInfo.phone\"\n                                                            >\n                                                            \n                                                            <span v-if=\"typeof phoneError === 'string'\" class=\"input__control-error\">\n                                                                {{ phoneError }}\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                    \n                                                    <button\n                                                        v-if=\"editing && mutableUserInfo.phone.indexOf('_') === -1 && userInfo.phone !== mutableUserInfo.phone.replaceAll(/\\(|\\)|\\s|-+/g, '') && phoneVerified !== mutableUserInfo.phone\"\n                                                        type=\"button\"\n                                                        class=\"form__field-button button button--simple button--red button--underlined button--tiny\"\n                                                        data-src=\"#approve-number\"\n                                                        @click=\"sendCode(mutableUserInfo.phone.replaceAll(/\\(|\\)|\\s|-+/g, ''), 'phone')\"\n                                                        :style=\"{ color: phoneError ? 'red' : 'black' }\"\n                                                    >\n                                                        \u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044C\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <!-- TODO: \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0438\u0442\u044C \u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044E -->\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"city\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0443\u043D\u043A\u0442</span>\n                                                        </label>\n                                                    </div>\n    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"form__control\">\n                                                            <div class=\"profile__toggle-select select select--mitigate\" data-select>\n                                                                <Select\n                                                                    name=\"city\"\n                                                                    :options=\"cities\"\n                                                                    placeholder=\"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0433\u043E\u0440\u043E\u0434\"\n                                                                    :selected=\"userCity.id\"\n                                                                    @custom-change=\"(value) => { mutableUserInfo.city = cities[value].name }\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"pickup_point_id\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041F\u0443\u043D\u043A\u0442 \u0432\u044B\u0434\u0430\u0447\u0438 \u0437\u0430\u043A\u0430\u0437\u043E\u0432</span>\n                                                        </label>\n                                                    </div>\n    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"form__control\">\n                                                            <div class=\"profile__toggle-select select select--mitigate\" data-select>\n                                                                <Select\n                                                                    name=\"pickup_point_id\"\n                                                                    :options=\"pickupPoints[userCity.id] ?? {}\"\n                                                                    placeholder=\"\u041F\u0443\u043D\u043A\u0442 \u0432\u044B\u0434\u0430\u0447\u0438 \u0437\u0430\u043A\u0430\u0437\u043E\u0432\"\n                                                                    :selected=\"mutableUserInfo.pickup_point_id\"\n                                                                    @custom-change=\"(value) => { mutableUserInfo.pickup_point_id = value }\"\n                                                                />\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"profile__toggle profile__toggle--row profile__toggle--inline form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"password\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041F\u0430\u0440\u043E\u043B\u044C</span>\n                                                        </label>\n                                                    </div>\n            \n                                                    <div class=\"form__field-block form__field-block--input\" data-password-block>\n                                                        <div class=\"input input--iconed\">\n                                                            <input \n                                                                type=\"password\" \n                                                                class=\"input__control js-required\" \n                                                                name=\"password\" \n                                                                id=\"password\" \n                                                                placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043F\u0430\u0440\u043E\u043B\u044C\" \n                                                                data-password-input\n                                                                :class=\"{ 'input__control--error': passwordError && !validatePassword }\"\n                                                                v-model=\"mutableUserInfo.password\"\n                                                            >\n                                                            <button class=\"input__icon input__icon-password\" data-password-toggle>\n                                                                <svg class=\"input__icon-password-icon input__icon-password-icon--show icon icon--eye\">\n                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-eye\"></use>\n                                                                </svg>\n                                                                <svg class=\"input__icon-password-icon input__icon-password-icon--hidden icon icon--eye-off\">\n                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-eye-off\"></use>\n                                                                </svg>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n            \n            \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"confirm_password\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044C \u043F\u0430\u0440\u043E\u043B\u044C</span>\n                                                        </label>\n                                                    </div>\n            \n                                                    <div class=\"form__field-block form__field-block--input\" data-password-block>\n                                                        <div class=\"input input--iconed\">\n                                                            <input \n                                                                type=\"password\" \n                                                                class=\"input__control js-required\" \n                                                                name=\"confirm_password\" \n                                                                id=\"confirm_password\" \n                                                                placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043F\u0430\u0440\u043E\u043B\u044C\" \n                                                                data-password-input\n                                                                :class=\"{ 'input__control--error': passwordError && !validatePassword }\"\n                                                                v-model=\"mutableUserInfo.confirm_password\"\n                                                            >\n                                                            <button class=\"input__icon input__icon-password\" data-password-toggle>\n                                                                <svg class=\"input__icon-password-icon input__icon-password-icon--show icon icon--eye\">\n                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-eye\"></use>\n                                                                </svg>\n                                                                <svg class=\"input__icon-password-icon input__icon-password-icon--hidden icon icon--eye-off\">\n                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-eye-off\"></use>\n                                                                </svg>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"profile__toggle profile__requirement requirement requirement--inlined box box--gray box--circle\">\n                                            <div class=\"requirement__col\">\n                                                <p class=\"requirement__text\">\u0422\u0440\u0435\u0431\u043E\u0432\u0430\u043D\u0438\u044F \u043A \u043F\u0430\u0440\u043E\u043B\u044E:</p>\n                                            </div>\n            \n                                            <div class=\"requirement__col requirement__col--right\">\n                                                <ul class=\"requirement__list\">\n                                                    <li class=\"requirement__item\">\n                                                        \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u0442\u043E\u043B\u044C\u043A\u043E \u043B\u0430\u0442\u0438\u043D\u0441\u043A\u0438\u0445 \u0431\u0443\u043A\u0432, \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432 \u0438 \u0446\u0438\u0444\u0440\n                                                    </li>\n                                                    <li class=\"requirement__item\">\n                                                        \u041D\u0435 \u043C\u0435\u043D\u0435\u0435 8 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432\n                                                    </li>\n                                                    <li class=\"requirement__item\">\n                                                        \u041D\u0435 \u043C\u0435\u043D\u0435\u0435 \u043E\u0434\u043D\u043E\u0439 \u0437\u0430\u0433\u043B\u0430\u0432\u043D\u043E\u0439 \u0431\u0443\u043A\u0432\u044B\n                                                    </li>\n                                                    <li class=\"requirement__item\">\n                                                        \u041D\u0435 \u043C\u0435\u043D\u0435\u0435 \u043E\u0434\u043D\u043E\u0439 \u0441\u0442\u0440\u043E\u0447\u043D\u043E\u0439 \u0431\u0443\u043A\u0432\u044B\n                                                    </li>\n                                                </ul>\n                                            </div>\n                                        </div>\n                                    </div>    \n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"profile__toggle profile__toggle--inline section__actions\">\n                                <div class=\"section__actions-col\">\n                                    <button type=\"button\" class=\"button button--rounded button--mixed button--red button--full\" @click=\"cancelEditing\">\n                                        <span class=\"button__text\">\u041E\u0442\u043C\u0435\u043D\u0438\u0442\u044C \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F</span>\n                                    </button>\n                                </div>\n\n                                <div class=\"section__actions-col\">\n                                    <button type=\"button\" class=\"profile__button-personal button button--rounded button--covered button--green button--full\" @click=\"saveUserInfo\">\n                                        <span class=\"button__text\">\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F</span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </section>\n\n            <article id=\"thanks\" class=\"modal modal--wide modal--centered box box--circle box--hanging\" style=\"display: none\">\n                <div class=\"modal__content\">\n                    <section class=\"modal__section modal__section--content\">\n                        <div class=\"notification notification--simple\">\n                            <div class=\"notification__icon\">\n                                <svg class=\"icon icon--cat-serious\">\n                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-serious\"></use>\n                                </svg>\n                            </div>\n\n                            <h4 class=\"notification__title\">\u0421\u043F\u0430\u0441\u0438\u0431\u043E \u0437\u0430 \u043E\u0431\u0440\u0430\u0449\u0435\u043D\u0438\u0435</h4>\n                            <p class=\"notification__text\">\u041C\u044B \u043F\u0440\u043E\u0432\u0435\u0440\u0438\u043C \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u0438 \u0443\u0432\u0435\u0434\u043E\u043C\u0438\u043C \u0412\u0430\u0441 \u043E \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0435 \u0432\u043D\u0435\u0441\u0435\u043D\u0438\u044F \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0439. </p>\n                        </div>\n                    </section>\n                </div>\n            </article>\n            \n            <article id=\"approve-number\" class=\"modal modal--small modal--centered box box--circle box--hanging\" style=\"display: none\">\n                <div class=\"modal__content\">\n                    <header class=\"modal__section modal__section--header\">\n                        <p v-if=\"this.confirmationType == 'phone'\" class=\"heading heading--small heading--centered\">\n                        \u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u0435 \u043D\u043E\u043C\u0435\u0440\u0430\n                        </p>\n                        <p v-else class=\"heading heading--small heading--centered\">\n                        \u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u0435 \u0430\u0434\u0440\u0435\u0441\u0430 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0439 \u043F\u043E\u0447\u0442\u044B\n                        </p>\n                    </header>\n            \n                    <section class=\"modal__section modal__section--content\">\n                        <div v-if=\"this.confirmationType == 'phone'\">\n                            <p class=\"modal__section-text\">\u041D\u0430 \u0443\u043A\u0430\u0437\u0430\u043D\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u0442\u0435\u043B\u0435\u0444\u043E\u043D\u0430 \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u0435\u043D \u043A\u043E\u0434 \u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u044F.</p>\n                            <p class=\"modal__section-text\">\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0435\u0433\u043E \u0432 \u043E\u043A\u043D\u043E \u043D\u0438\u0436\u0435</p>\n                        </div>\n                        <div v-else>\n                            <p class=\"modal__section-text\">\u041D\u0430 \u0443\u043A\u0430\u0437\u0430\u043D\u043D\u044B\u0439 \u0430\u0434\u0440\u0435\u0441 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0439 \u043F\u043E\u0447\u0442\u044B \u043E\u0442\u043F\u0440\u0430\u0432\u043B\u0435\u043D \u043A\u043E\u0434 \u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u044F.</p>\n                            <p class=\"modal__section-text\">\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0435\u0433\u043E \u0432 \u043E\u043A\u043D\u043E \u043D\u0438\u0436\u0435</p>\n                        </div>\n            \n                        <div class=\"form__row\">\n                            <div class=\"form__col\">\n                                <div class=\"form__field\">\n                                    <div class=\"form__field-block form__field-block--input\">\n                                        <div class=\"input input--tiny input--centered input--tel\">\n                                            <input\n                                                type=\"text\"\n                                                maxlength=\"6\"\n                                                class=\"input__control\"\n                                                name=\"verify_code\"\n                                                id=\"verify_code\"\n                                                :class=\"{ 'input__control--error': verifyError }\"\n                                            >\n                                        \n                                            <span v-if=\"verifyError\" class=\"input__control-error\">\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0438\u043B\u0438 \u043F\u0440\u043E\u0441\u0440\u043E\u0447\u0435\u043D\u043D\u044B\u0439 \u043A\u043E\u0434</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n            \n                        <button class=\"button button--rounded button--covered button--red button--full\" style=\"margin-top: 25px;\" @click=\"verifyCode\">\n                            <span class=\"button__text\">\u0414\u0430\u043B\u0435\u0435</span>\n                        </button>\n                    </section>\n                </div>\n            </article>\n        </div>\n    "
    };

    function _regeneratorRuntime$8() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$8 = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var useDropzoneStore = ui_vue3_pinia.defineStore('dropzone', {
      actions: {
        uploadFile: function uploadFile(files) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$8().mark(function _callee() {
            return _regeneratorRuntime$8().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return BX.ajax.runComponentAction('zolo:dropzone', 'upload', {
                      mode: 'class',
                      data: files
                    });

                  case 2:
                    return _context.abrupt("return", _context.sent);

                  case 3:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        deleteFile: function deleteFile(id) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$8().mark(function _callee2() {
            return _regeneratorRuntime$8().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return BX.ajax.runComponentAction('zolo:dropzone', 'delete', {
                      mode: 'class',
                      data: {
                        id: id
                      }
                    });

                  case 2:
                    return _context2.abrupt("return", _context2.sent);

                  case 3:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }))();
        }
      }
    });

    function _regeneratorRuntime$9() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$9 = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

    function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

    function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

    function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
    var id$3 = 0;
    var Dropzone = {
      props: {
        files: {
          type: Array,
          "default": []
        },
        editing: {
          type: Boolean,
          "default": false
        }
      },
      data: function data() {
        return {
          componentId: 'dropzone-' + ++id$3
        };
      },
      setup: function setup() {
        return {
          store: useDropzoneStore()
        };
      },
      methods: {
        uploadFile: function uploadFile(event) {
          var _this = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$9().mark(function _callee() {
            var data, i, response, _iterator, _step, fileInfo;

            return _regeneratorRuntime$9().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    data = new FormData();

                    for (i = 0; i < event.target.files.length; i++) {
                      data.append("file-".concat(i), event.target.files[i]);
                    }

                    _context.next = 4;
                    return _this.store.uploadFile(data);

                  case 4:
                    response = _context.sent;
                    _iterator = _createForOfIteratorHelper(response.data);

                    try {
                      for (_iterator.s(); !(_step = _iterator.n()).done;) {
                        fileInfo = _step.value;

                        _this.files.push(fileInfo);
                      }
                    } catch (err) {
                      _iterator.e(err);
                    } finally {
                      _iterator.f();
                    }

                    _this.$emit('upload', response.data);

                  case 8:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        deleteFile: function deleteFile(file) {
          // this.store.deleteFile(file.id); Файлы не удаляются т.к. они нужны для тикетов тех поддержки
          this.files.splice(this.files.indexOf(file), 1);
          this.$emit('delete', file.id);
        }
      },
      template: "\n      <div v-if=\"!editing && !files.length\" class=\"profile__notification\">\n        <span class=\"profile__notification-icon\">\n            <svg class=\"icon icon--danger\">\n                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-danger\"></use>\n            </svg>\n        </span>\n        <p class=\"profile__notification-text\">\u041D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u043F\u0440\u0438\u043B\u043E\u0436\u0438\u0442\u044C \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u044B. \u0412\u043E\u0439\u0434\u0438\u0442\u0435 \u0432 \u0440\u0435\u0436\u0438\u043C \u0440\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F.</p>\n      </div>\n      \n      <div class=\"dropzone\">\n          <input type=\"file\" ref=\"file\" :name=\"componentId\" :id=\"componentId\" multiple class=\"dropzone__control\" @change=\"uploadFile($event)\">\n          <div class=\"dropzone__area\">\n            <div class=\"profile__toggle dropzone__message dz-message needsclick\">\n              <label :for=\"componentId\" class=\"dropzone__button dropzone__button--profile button button--medium button--rounded button--covered button--red\">\n                    <span class=\"button__icon\">\n                        <svg class=\"icon icon--import\">\n                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-import\"></use>\n                        </svg>\n                    </span>\n                <span class=\"button__text\">\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044C \u0444\u0430\u0439\u043B</span>\n              </label>\n            </div>\n    \n            <div class=\"dropzone__previews dropzone__previews--profile dz-previews\">\n              <div v-for=\"file in files\" :key=\"file.id\" class=\"file dz-processing dz-image-preview dz-success dz-complete\">\n                <div class=\"file__wrapper\">\n                  <div class=\"file__prewiew\">\n                    <div class=\"file__icon\">\n                      <svg class=\"icon icon--gallery\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-gallery\"></use>\n                      </svg>\n                    </div>\n    \n                    <div class=\"file__name\">\n                      <h6 class=\"file__name-heading heading heading--tiny\">{{ file.name }}</h6>\n                    </div>\n                  </div>\n    \n                  <div class=\"file__info\">\n                    <div class=\"file__format\">{{ file.src.slice(-5) == '.heic' ? 'HEIC' : file.format }}</div>\n                    <div class=\"file__weight\">{{ file.size }}</div>\n    \n                    <div v-if=\"editing\" class=\"file__delete\">\n                      <button type=\"button\" class=\"file__delete-button button button--iconed button--simple button--gray\" @click=\"deleteFile(file)\">\n                        <span class=\"file__delete-button-icon button__icon\">\n                            <svg class=\"icon icon--delete\">\n                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-delete\"></use>\n                            </svg>\n                        </span>\n                      </button>\n                    </div>\n                    <div v-else class=\"file__upload\">\n                      <a class=\"button button--iconed button--simple button--gray\" :href=\"file.src\" download>\n                        <span class=\"button__icon\">\n                            <svg class=\"icon icon--import\">\n                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-import\"></use>\n                            </svg>\n                        </span>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"file__error\"></div>\n              </div>\n            </div>\n          </div>\n      </div>\n    "
    };

    function _regeneratorRuntime$a() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$a = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var useLegalEntityStore = ui_vue3_pinia.defineStore('legalEntity', {
      actions: {
        saveLegalEntityData: function saveLegalEntityData(data) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$a().mark(function _callee() {
            return _regeneratorRuntime$a().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return BX.ajax.runComponentAction('zolo:main.profile', 'saveLegalEntityData', {
                      mode: 'class',
                      data: {
                        data: data
                      }
                    });

                  case 2:
                    return _context.abrupt("return", _context.sent);

                  case 3:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        }
      }
    });

    var id$4 = 0;
    var LegalEntity = {
      components: {
        Dropzone: Dropzone
      },
      data: function data() {
        return {
          componentId: "legal-entity-".concat(++id$4),
          originalLegalEntity: {},
          mutableLegalEntity: {},
          editing: false,
          error: false
        };
      },
      props: {
        legalEntity: {
          type: Object,
          "default": {}
        },
        types: {
          type: Object,
          required: true
        }
      },
      setup: function setup() {
        return {
          legalEntityStore: useLegalEntityStore()
        };
      },
      created: function created() {
        this.originalLegalEntity = JSON.parse(JSON.stringify(this.legalEntity));
        this.initLegalEntity();
      },
      mounted: function mounted() {
        var _this = this;

        $('select[name=status]').on('change', function () {
          return _this.changeLegalEntityType();
        });
      },
      methods: {
        initLegalEntity: function initLegalEntity() {
          this.mutableLegalEntity = JSON.parse(JSON.stringify(this.originalLegalEntity));
        },
        changeLegalEntityType: function changeLegalEntityType() {
          this.mutableLegalEntity.type = this.types[$('select[name=status]').val()];
        },
        edit: function edit() {
          this.editing = true;

          if ($("#".concat(this.componentId, " .accordeon__body")).css('display') === 'none') {
            $("#".concat(this.componentId, " [data-accordeon-toggle]")).trigger('click');
          }
        },
        cancelEditing: function cancelEditing() {
          this.initLegalEntity();
          this.editing = false;
        },
        saveChanges: function saveChanges() {
          this.error = false;

          for (var document in this.mutableLegalEntity.documents) {
            if (!document || !document.length) {
              this.error = true;
              return;
            }
          }

          this.legalEntityStore.saveLegalEntityData(this.mutableLegalEntity);
          this.editing = false;
          this.originalLegalEntity = JSON.parse(JSON.stringify(this.mutableLegalEntity));
          $.fancybox.open({
            src: '#thanks'
          });
        }
      },
      template: "\n        <div :id=\"componentId\" class=\"profile__block legal_entity_block accordeon__item\" data-accordeon :class=\"{ 'profile__block--edit': editing }\">\n            <section class=\"section\">\n                <div class=\"form form--wraped form--separated\">\n                    <div class=\"section__box box box--gray box--rounded-sm\">\n                        <div class=\"profile__accordeon-header accordeon__header section__header\">\n                            <h4 class=\"section__title section__title--closer\">\u042E\u0440\u0438\u0434\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0434\u0430\u043D\u043D\u044B\u0435</h4>\n\n                            <div class=\"profile__actions\">\n                                <button v-if=\"!editing\" type=\"button\" class=\"profile__actions-button profile__actions-button--edit button button--simple button--red\" @click=\"edit\">\n                                    <span class=\"button__icon\">\n                                        <svg class=\"icon icon--edit\">\n                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-edit\"></use>\n                                        </svg>\n                                    </span>\n                                    <span class=\"button__text\">\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C</span>\n                                </button>\n\n                                <button type=\"button\" class=\"profile__actions-button accordeon__toggle button button--circular button--mini button--covered button--red-white\" data-accordeon-toggle >\n                                    <span class=\"accordeon__toggle-icon button__icon\">\n                                        <svg class=\"icon icon--arrow-down\">\n                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-down\"></use>\n                                        </svg>\n                                    </span>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class=\"accordeon__body accordeon__body--closer\" data-accordeon-content>\n                            <div class=\"profile__actions profile__actions--mobile\">\n                                <button v-if=\"!editing\" type=\"button\" class=\"profile__actions-button button button--simple button--red\" @click=\"edit\">\n                                    <span class=\"button__icon\">\n                                        <svg class=\"icon icon--edit\">\n                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-edit\"></use>\n                                        </svg>\n                                    </span>\n                                    <span class=\"button__text\">\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C</span>\n                                </button>\n                            </div>\n\n                            <div class=\"section__box-inner\">\n                                <h5 class=\"box__heading box__heading--middle\">\u041E\u0431\u0449\u0435\u0435</h5>\n\n                                <div class=\"section__box-content box box--white box--rounded-sm box--inner\">\n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u0421\u0442\u0430\u0442\u0443\u0441 \u0438 \u0433\u0440\u0430\u0436\u0434\u0430\u043D\u0441\u0442\u0432\u043E</h6>\n\n                                        <div class=\"form__row form__row--mixed\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"status\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0421\u0442\u0430\u0442\u0443\u0441</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"form__control\">\n                                                            <div class=\"profile__toggle-select select select--mitigate\" data-select>\n                                                                <select class=\"select__control js-required\" name=\"status\" id=\"status\" data-select-control data-placeholder=\"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\">\n                                                                    <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                                                                    <option\n                                                                        v-for=\"type in types\"\n                                                                        :key=\"type.id\"\n                                                                        :value=\"type.id\"\n                                                                        :selected=\"type.id === legalEntity.type.id\"\n                                                                    >\n                                                                        {{ type.name }}\n                                                                    </option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <!-- TODO: \u041E\u043F\u0440\u0435\u0434\u0435\u043B\u0438\u0442\u044C\u0441\u044F \u0441 \u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0435\u0439 -->\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"nationality\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0413\u0440\u0430\u0436\u0434\u0430\u043D\u0441\u0442\u0432\u043E</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"form__control\">\n                                                            <div class=\"profile__toggle-select select select--mitigate\" data-select>\n                                                                <select class=\"select__control js-required\" name=\"nationality\" id=\"nationality\" data-select-control data-placeholder=\"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0441\u0442\u0430\u0442\u0443\u0441 \u0433\u0440\u0430\u0436\u0434\u0430\u043D\u0441\u0442\u0432\u0430\">\n                                                                    <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                                                                    <option\n                                                                        value=\"russian\"\n                                                                        :selected=\"mutableLegalEntity.documents.nationality === 'russian'\"\n                                                                    >\u0420\u0435\u0437\u0438\u0434\u0435\u043D\u0442 \u0420\u0424</option>\n                                                                    <option\n                                                                        value=\"not_russian\"\n                                                                        :selected=\"mutableLegalEntity.documents.nationality === 'not_russian'\"\n                                                                    >\u041D\u0435\u0440\u0435\u0437\u0438\u0434\u0435\u043D\u0442 \u0420\u0424</option>\n                                                                </select>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041F\u0430\u0441\u043F\u043E\u0440\u0442\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435</h6>\n\n                                        <div class=\"form__row form__row--mixed\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"passport_series\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0421\u0435\u0440\u0438\u044F</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control js-required\"\n                                                                data-profile-readonly\n                                                                name=\"passport_series\"\n                                                                id=\"passport_series\"\n                                                                placeholder=\"12 34\"\n                                                                data-passport-seria\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.passport_series\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"passport_number\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041D\u043E\u043C\u0435\u0440</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input \n                                                                type=\"text\"\n                                                                class=\"input__control js-required\"\n                                                                data-profile-readonly\n                                                                name=\"passport_number\"\n                                                                id=\"passport_number\"\n                                                                placeholder=\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043D\u043E\u043C\u0435\u0440 \u043F\u0430\u0441\u043F\u043E\u0440\u0442\u0430\"\n                                                                data-passport-number\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.passport_number\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"form__row form__row--mixed\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"who_got\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041A\u0435\u043C \u0432\u044B\u0434\u0430\u043D</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control js-required\"\n                                                                data-profile-readonly\n                                                                name=\"who_got\"\n                                                                id=\"who_got\"\n                                                                placeholder=\"\u041A\u0435\u043C \u0432\u044B\u0434\u0430\u043D\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.who_got\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"getting_date\" class=\"form__label\">\n                                                            <span class=\"form__label-text\">\u0414\u0430\u0442\u0430 \u0432\u044B\u0434\u0430\u0447\u0438 \u043F\u0430\u0441\u043F\u043E\u0440\u0442\u0430</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input input--iconed\">\n                                                            <input\n                                                                inputmode=\"numeric\"\n                                                                class=\"input__control js-required js-date\"\n                                                                name=\"getting_date\"\n                                                                id=\"getting_date\"\n                                                                placeholder=\"\u0414\u0414.\u041C\u041C.\u0413\u0413\u0413\u0413\"\n                                                                data-mask-date\n                                                                data-pets-date-input\n                                                                data-pets-change\n                                                                data-profile-readonly\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.getting_date\"\n                                                                autocomplete=\"off\"\n                                                            >\n                                                            <span class=\"input__icon\">\n                                                                <svg class=\"icon icon--calendar\">\n                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-calendar\"></use>\n                                                                </svg>\n                                                            </span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u0410\u0434\u0440\u0435\u0441 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438</h6>\n\n                                        <div class=\"form__row form__row--mixed\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"register_locality\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0443\u043D\u043A\u0442</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control js-required\"\n                                                                data-profile-readonly\n                                                                name=\"register_locality\"\n                                                                id=\"register_locality\"\n                                                                placeholder=\"\u041D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0443\u043D\u043A\u0442\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.register_locality\"\n                                                                data-replace-input=\"adress\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"register_street\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0423\u043B\u0438\u0446\u0430</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control js-required\"\n                                                                data-profile-readonly\n                                                                name=\"register_street\"\n                                                                id=\"register_street\"\n                                                                placeholder=\"\u0423\u043B\u0438\u0446\u0430\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.register_street\"\n                                                                data-replace-input=\"adress\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"form__row form__row--mixed\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"register_house\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0414\u043E\u043C</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"number\"\n                                                                class=\"input__control js-required\"\n                                                                data-profile-readonly\n                                                                name=\"passport.addressRegistration.home\"\n                                                                id=\"register_house\"\n                                                                placeholder=\"\u0414\u043E\u043C\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.register_house\"\n                                                                data-replace-input=\"adress\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"register_apartment\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041A\u0432\u0430\u0440\u0442\u0438\u0440\u0430</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"number\"\n                                                                class=\"input__control js-required\"\n                                                                data-profile-readonly\n                                                                name=\"register_apartment\"\n                                                                id=\"register_apartment\"\n                                                                placeholder=\"\u041A\u0432\u0430\u0440\u0442\u0438\u0440\u0430\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.register_apartment\"\n                                                                data-replace-input=\"adress\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"register_postal_code\" class=\"profile__label form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0418\u043D\u0434\u0435\u043A\u0441</span>\n                                                        </label>\n                                                    </div>\n\n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control js-required\"\n                                                                data-profile-readonly\n                                                                name=\"register_postal_code\"\n                                                                id=\"register_postal_code\"\n                                                                placeholder=\"\u0418\u043D\u0434\u0435\u043A\u0441\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.register_postal_code\"\n                                                                data-mask-post-reg\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"section__box-block\" data-identic data-validate-dependent>\n                                        <h6 class=\"box__heading box__heading--small\">\u0410\u0434\u0440\u0435\u0441 \u043F\u0440\u043E\u0436\u0438\u0432\u0430\u043D\u0438\u044F</h6>\n                                            <div class=\"form__row form__row--mixed\">\n                                                <div class=\"form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"living_locality\" class=\"profile__label form__label form__label--required\">\n                                                                <span class=\"form__label-text\">\u041D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0443\u043D\u043A\u0442</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"input\">\n                                                                <input\n                                                                    type=\"text\"\n                                                                    class=\"input__control js-required-dependent\"\n                                                                    data-identic-input\n                                                                    data-profile-readonly\n                                                                    name=\"living_locality\"\n                                                                    id=\"living_locality\"\n                                                                    placeholder=\"\u041D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0443\u043D\u043A\u0442\"\n                                                                    :readonly=\"!editing\"\n                                                                    v-model=\"mutableLegalEntity.documents.living_locality\"\n                                                                    data-replace-input=\"adress\"\n                                                                >\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"living_street\" class=\"profile__label form__label form__label--required\">\n                                                                <span class=\"form__label-text\">\u0423\u043B\u0438\u0446\u0430</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"input\">\n                                                                <input\n                                                                    type=\"text\"\n                                                                    class=\"input__control js-required-dependent\"\n                                                                    data-identic-input\n                                                                    data-profile-readonly\n                                                                    name=\"living_street\"\n                                                                    id=\"living_street\"\n                                                                    placeholder=\"\u0423\u043B\u0438\u0446\u0430\"\n                                                                    :readonly=\"!editing\"\n                                                                    v-model=\"mutableLegalEntity.documents.living_street\"\n                                                                    data-replace-input=\"adress\"\n                                                                >\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"form__row form__row--mixed\">\n                                                <div class=\"form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"living_house\" class=\"profile__label form__label form__label--required\">\n                                                                <span class=\"form__label-text\">\u0414\u043E\u043C</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"input\">\n                                                                <input\n                                                                    type=\"number\"\n                                                                    class=\"input__control js-required-dependent\"\n                                                                    data-identic-input\n                                                                    data-profile-readonly\n                                                                    name=\"living_house\"\n                                                                    id=\"living_house\"\n                                                                    placeholder=\"\u0414\u043E\u043C\"\n                                                                    :readonly=\"!editing\"\n                                                                    v-model=\"mutableLegalEntity.documents.living_house\"\n                                                                    data-replace-input=\"adress\"\n                                                                >\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"living_apartment\" class=\"profile__label form__label form__label--required\">\n                                                                <span class=\"form__label-text\">\u041A\u0432\u0430\u0440\u0442\u0438\u0440\u0430</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"input\">\n                                                                <input\n                                                                    type=\"number\"\n                                                                    class=\"input__control js-required-dependent\"\n                                                                    data-identic-input\n                                                                    data-profile-readonly\n                                                                    name=\"living_apartment\"\n                                                                    id=\"living_apartment\"\n                                                                    placeholder=\"\u041A\u0432\u0430\u0440\u0442\u0438\u0440\u0430\"\n                                                                    :readonly=\"!editing\"\n                                                                    v-model=\"mutableLegalEntity.documents.living_apartment\"\n                                                                    data-replace-input=\"adress\"\n                                                                >\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                \n                                                <div class=\"form__col\">\n                                                    <div class=\"form__field\">\n                                                        <div class=\"form__field-block form__field-block--label\">\n                                                            <label for=\"living_postal_code\" class=\"profile__label form__label form__label--required\">\n                                                                <span class=\"form__label-text\">\u0418\u043D\u0434\u0435\u043A\u0441</span>\n                                                            </label>\n                                                        </div>\n\n                                                        <div class=\"form__field-block form__field-block--input\">\n                                                            <div class=\"input\">\n                                                                <input\n                                                                    type=\"text\"\n                                                                    class=\"input__control js-required-dependent\"\n                                                                    data-identic-input\n                                                                    data-profile-readonly\n                                                                    name=\"living_postal_code\"\n                                                                    id=\"living_postal_code\"\n                                                                    placeholder=\"\u0418\u043D\u0434\u0435\u043A\u0441\"\n                                                                    :readonly=\"!editing\"\n                                                                    v-model=\"mutableLegalEntity.documents.living_postal_code\"\n                                                                    data-mask-post-living\n                                                                >\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        \n                                        <!-- TODO: \u041E\u043F\u0440\u0435\u0434\u0435\u043B\u0438\u0442\u044C\u0441\u044F \u0441 \u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0435\u0439 -->\n                                        <div class=\"profile__toggle form__row form__row--mixed\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"checkbox\">\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            class=\"checkbox__input\"\n                                                            name=\"without_living\"\n                                                            id=\"without_living\"\n                                                            data-identic-change\n                                                            data-validate-dependent-change\n                                                            :readonly=\"!editing\"\n                                                            v-model=\"mutableLegalEntity.documents.without_living\"                                                            \n                                                        >\n\n                                                        <label for=\"without_living\" class=\"checkbox__label\">\n                                                            <span class=\"checkbox__icon\">\n                                                                <svg class=\"checkbox__icon-pic icon icon--check\">\n                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-check\">\n                                                                </svg>\n                                                            </span>\n\n                                                            <span class=\"checkbox__text\">\u0410\u0434\u0440\u0435\u0441 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0441\u043E\u0432\u043F\u0430\u0434\u0430\u0435\u0442 \u0441 \u0430\u0434\u0440\u0435\u0441\u043E\u043C \u0444\u0430\u043A\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0433\u043E \u043F\u0440\u043E\u0436\u0438\u0432\u0430\u043D\u0438\u044F</span>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u043F\u0430\u0441\u043F\u043E\u0440\u0442\u0430</h6>\n                                        <Dropzone\n                                            :files=\"mutableLegalEntity.documents.passport\"\n                                            :editing=\"editing\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div :hidden=\"mutableLegalEntity.type.code !== 'STATUS_SELF_EMPLOYED'\" class=\"section__box-inner legal_entity STATUS_SELF_EMPLOYED\">\n                                <h5 class=\"box__heading box__heading--middle\">\u0421\u0430\u043C\u043E\u0437\u0430\u043D\u044F\u0442\u044B\u0439</h5>\n                    \n                                <div class=\"section__box-content box box--white box--rounded-sm box--inner\">\n                                    <div class=\"section__box-block\">\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col form__col--50\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"tin\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0418\u041D\u041D</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"tin\"\n                                                                id=\"tin\"\n                                                                placeholder=\"\u0418\u041D\u041D\"\n                                                                data-inn\n                                                                v-model=\"mutableLegalEntity.documents.tin\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u0441\u0432\u0438\u0434\u0435\u0442\u0435\u043B\u044C\u0441\u0442\u0432\u0430 \u043E \u043F\u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0435 \u043D\u0430 \u0443\u0447\u0435\u0442 \u0432 \u043D\u0430\u043B\u043E\u0433\u043E\u0432\u043E\u043C \u043E\u0440\u0433\u0430\u043D\u0435</h6>\n\n                                          <Dropzone\n                                              :files=\"mutableLegalEntity.documents.tax_registration_certificate\"\n                                              :editing=\"editing\"\n                                          />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u0411\u0430\u043D\u043A\u043E\u0432\u0441\u043A\u0438\u0435 \u0440\u0435\u043A\u0432\u0438\u0437\u0438\u0442\u044B</h6>\n                    \n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"bank_name\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0431\u0430\u043D\u043A\u0430</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"bank_name\"\n                                                                id=\"bank_name\"\n                                                                placeholder=\"\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0431\u0430\u043D\u043A\u0430\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.bank_name\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                    \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"bic\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0411\u0418\u041A</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"bic\"\n                                                                id=\"bic\"\n                                                                placeholder=\"\u0411\u0418\u041A\"\n                                                                data-bik\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.bic\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                    \n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"checking_account\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0420\u0430\u0441\u0447\u0435\u0442\u043D\u044B\u0439 \u0441\u0447\u0435\u0442</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"number\"\n                                                                class=\"input__control\"\n                                                                name=\"checking_account\"\n                                                                id=\"checking_account\"\n                                                                placeholder=\"\u0420\u0430\u0441\u0447\u0435\u0442\u043D\u044B\u0439 \u0441\u0447\u0435\u0442\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.bic\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                    \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"correspondent_account\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041A\u043E\u0440\u0440\u0435\u0441\u043F\u043E\u043D\u0434\u0435\u043D\u0442\u0441\u043A\u0438\u0439 \u0441\u0447\u0435\u0442</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"number\"\n                                                                class=\"input__control\"\n                                                                name=\"correspondent_account\"\n                                                                id=\"correspondent_account\"\n                                                                placeholder=\"\u041A\u043E\u0440\u0440\u0435\u0441\u043F\u043E\u043D\u0434\u0435\u043D\u0442\u0441\u043A\u0438\u0439 \u0441\u0447\u0435\u0442\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.correspondent_account\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u0421\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u043E \u0431\u0430\u043D\u043A\u043E\u0432\u0441\u043A\u0438\u0445 \u0440\u0435\u043A\u0432\u0438\u0437\u0438\u0442\u0430\u0445</h6>\n                                          <Dropzone\n                                              :files=\"mutableLegalEntity.documents.bank_details\"\n                                              :editing=\"editing\"\n                                          />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u0441\u043F\u0440\u0430\u0432\u043A\u0438 \u043E \u043F\u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0435 \u043D\u0430 \u0443\u0447\u0435\u0442 \u0444\u0438\u0437\u0438\u0447\u0435\u0441\u043A\u043E\u0433\u043E \u043B\u0438\u0446\u0430 \u0432 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430 \u043D\u0430\u043B\u043E\u0433\u0430 \u043D\u0430 \u043F\u0440\u043E\u0444\u0435\u0441\u0441\u0438\u043E\u043D\u0430\u043B\u044C\u043D\u044B\u0439 \u0434\u043E\u0445\u043E\u0434</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.personal_tax_registration_certificate\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div :hidden=\"mutableLegalEntity.type.code !== 'STATUS_IP'\" class=\"section__box-inner legal_entity STATUS_IP\">\n                                <h5 class=\"box__heading box__heading--middle\">\u0418\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u044B\u0439 \u043F\u0440\u0435\u0434\u043F\u0440\u0438\u043D\u0438\u043C\u0430\u0442\u0435\u043B\u044C</h5>\n                    \n                                <div class=\"section__box-content box box--white box--rounded-sm box--inner\">\n                                    <div class=\"section__box-block\">\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col form__col--50\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"ip_name\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0418\u041F</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"ip_name\"\n                                                                id=\"ip_name\"\n                                                                placeholder=\"\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0418\u041F\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.ip_name\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col form__col--50\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"tin\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0418\u041D\u041D</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"tin\"\n                                                                id=\"tin\"\n                                                                placeholder=\"\u0418\u041D\u041D\"\n                                                                data-inn\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.tin\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        \n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"checkbox\">\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            class=\"checkbox__input\"\n                                                            name=\"nds_payer_ip\"\n                                                            id=\"nds_payer_ip\"\n                                                            :readonly=\"!editing\"\n                                                            v-model=\"mutableLegalEntity.documents.nds_payer_ip\"\n                                                            :checked=\"mutableLegalEntity.documents.nds_payer_ip\" \n                                                        >\n                        \n                                                        <label for=\"nds_payer_ip\" class=\"checkbox__label\">\n                                                            <span class=\"checkbox__icon\">\n                                                                <svg class=\"checkbox__icon-pic icon icon--check\">\n                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-check\">\n                                                                </svg>\n                                                            </span>\n                        \n                                                            <span class=\"checkbox__text\">\u041F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A \u041D\u0414\u0421</span>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u0441\u0432\u0438\u0434\u0435\u0442\u0435\u043B\u044C\u0441\u0442\u0432\u0430 \u043E \u043F\u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0435 \u043D\u0430 \u0443\u0447\u0435\u0442 \u0432 \u043D\u0430\u043B\u043E\u0433\u043E\u0432\u043E\u043C \u043E\u0440\u0433\u0430\u043D\u0435</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.tax_registration_certificate\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u0443\u0432\u0435\u0434\u043E\u043C\u043B\u0435\u043D\u0438\u044F \u043E \u043F\u0440\u0438\u043C\u0435\u043D\u0435\u043D\u0438\u0438 \u0423\u0421\u041D \u0443\u043F\u0440\u043E\u0449\u0435\u043D\u043D\u043E\u0439 \u0441\u0438\u0441\u0442\u0435\u043C\u044B \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430(\u0432 \u0441\u043B\u0443\u0447\u0430\u0435 \u043F\u0440\u0438\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0423\u0421\u041D)</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.usn_notification\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col form__col--50\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"ogrnip\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041E\u0413\u0420\u041D\u0418\u041F</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"ogrnip\"\n                                                                id=\"ogrnip\"\n                                                                placeholder=\"\u041E\u0413\u0420\u041D\u0418\u041F\"\n                                                                data-ogrnip\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.ogrnip\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u0441\u0432\u0438\u0434\u0435\u0442\u0435\u043B\u044C\u0441\u0442\u0432\u0430 \u043E \u0433\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0418\u041F/\u043B\u0438\u0441\u0442\u0430 \u0437\u0430\u043F\u0438\u0441\u0438 \u0415\u0413\u0420\u0418\u041F</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.ip_registration_certificate\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u0411\u0430\u043D\u043A\u043E\u0432\u0441\u043A\u0438\u0435 \u0440\u0435\u043A\u0432\u0438\u0437\u0438\u0442\u044B</h6>\n                    \n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"bank_name\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0431\u0430\u043D\u043A\u0430</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"bank_name\"\n                                                                id=\"bank_name\"\n                                                                placeholder=\"\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0431\u0430\u043D\u043A\u0430\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.bank_name\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                    \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"bic\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0411\u0418\u041A</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"bic\"\n                                                                id=\"bic\"\n                                                                placeholder=\"\u0411\u0418\u041A\"\n                                                                data-bik\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.bic\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                    \n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"checking_account\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0420\u0430\u0441\u0447\u0435\u0442\u043D\u044B\u0439 \u0441\u0447\u0435\u0442</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"number\"\n                                                                class=\"input__control\"\n                                                                name=\"checking_account\"\n                                                                id=\"checking_account\"\n                                                                placeholder=\"\u0420\u0430\u0441\u0447\u0435\u0442\u043D\u044B\u0439 \u0441\u0447\u0435\u0442\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.checking_account\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                    \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"correspondent_account\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041A\u043E\u0440\u0440\u0435\u0441\u043F\u043E\u043D\u0434\u0435\u043D\u0442\u0441\u043A\u0438\u0439 \u0441\u0447\u0435\u0442</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"number\"\n                                                                class=\"input__control\"\n                                                                name=\"correspondent_account\"\n                                                                id=\"correspondent_account\"\n                                                                placeholder=\"\u041A\u043E\u0440\u0440\u0435\u0441\u043F\u043E\u043D\u0434\u0435\u043D\u0442\u0441\u043A\u0438\u0439 \u0441\u0447\u0435\u0442\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.correspondent_account\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u0421\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u043E \u0431\u0430\u043D\u043A\u043E\u0432\u0441\u043A\u0438\u0445 \u0440\u0435\u043A\u0432\u0438\u0437\u0438\u0442\u0430\u0445</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.bank_details\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div :hidden=\"mutableLegalEntity.type.code !== 'STATUS_JURIDICAL'\" class=\"section__box-inner legal_entity STATUS_JURIDICAL\">\n                                <h5 class=\"box__heading box__heading--middle\">\u041E\u0431\u0449\u0435\u0441\u0442\u0432\u043E \u0441 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u043D\u043E\u0439 \u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0441\u0442\u044C\u044E</h5>\n                    \n                                <div class=\"section__box-content box box--white box--rounded-sm box--inner\">\n                                    <div class=\"section__box-block\">\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col form__col--50\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"ltc_full_name\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438 (\u043F\u043E\u043B\u043D\u043E\u0435)</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"ltc_full_name\"\n                                                                id=\"ltc_full_name\"\n                                                                placeholder=\"\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438 (\u043F\u043E\u043B\u043D\u043E\u0435)\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.ltc_full_name\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col form__col--50\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"ltc_short_name\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\n                                                                <span class=\"form__label-text form__label-text--desktop\">\n                                                                    \u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438 (\u0441\u043E\u043A\u0440\u0430\u0449\u0435\u043D\u043D\u043E\u0435)\n                                                                </span>\n                                                                <span class=\"form__label-text form__label-text--mobile\">\n                                                                    \u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438\n                                                                    <span class=\"form__label-minitext\" data-tippy-content=\"\u0441\u043E\u043A\u0440\u0430\u0449\u0435\u043D\u043D\u043E\u0435\">\n                                                                        (\u0441\u043E\u043A\u0440.)\n                                                                    </span>\n                                                                </span>\n                                                            </span\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"ltc_short_name\"\n                                                                id=\"ltc_short_name\"\n                                                                placeholder=\"\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438 (\u0441\u043E\u043A\u0440\u0430\u0449\u0435\u043D\u043D\u043E\u0435)\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.ltc_short_name\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col form__col--50\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"ogrn\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041E\u0413\u0420\u041D</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"ogrn\"\n                                                                id=\"ogrn\"\n                                                                placeholder=\"\u041E\u0413\u0420\u041D\"\n                                                                data-ogrn\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.ogrn\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col form__col--50\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"tin\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0418\u041D\u041D</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"tin\"\n                                                                id=\"tin\"\n                                                                placeholder=\"\u0418\u041D\u041D\"\n                                                                data-short-inn\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.tin\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"checkbox\">\n                                                        <input\n                                                            type=\"checkbox\"\n                                                            class=\"checkbox__input\"\n                                                            name=\"nds_payer_ltc\"\n                                                            id=\"nds_payer_ltc\"\n                                                            :readonly=\"!editing\"\n                                                            v-model=\"mutableLegalEntity.documents.nds_payer_ltc\"\n                                                            :checked=\"mutableLegalEntity.documents.nds_payer_ltc\" \n                                                        >\n                        \n                                                        <label for=\"nds_payer_ltc\" class=\"checkbox__label\">\n                                                            <span class=\"checkbox__icon\">\n                                                                <svg class=\"checkbox__icon-pic icon icon--check\">\n                                                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-check\">\n                                                                </svg>\n                                                            </span>\n                        \n                                                            <span class=\"checkbox__text\">\u041F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A \u041D\u0414\u0421</span>\n                                                        </label>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u0441\u0432\u0438\u0434\u0435\u0442\u0435\u043B\u044C\u0441\u0442\u0432\u0430 \u043E \u043F\u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0435 \u043D\u0430 \u0443\u0447\u0435\u0442 \u0440\u043E\u0441\u0441\u0438\u0439\u0441\u043A\u043E\u0439 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438 \u0432 \u043D\u0430\u043B\u043E\u0433\u043E\u0432\u043E\u043C \u043E\u0440\u0433\u0430\u043D\u0435</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.tax_registration_certificate\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u0443\u0432\u0435\u0434\u043E\u043C\u043B\u0435\u043D\u0438\u044F \u043E \u043F\u0440\u0438\u043C\u0435\u043D\u0435\u043D\u0438\u0438 \u0423\u0421\u041D \u0443\u043F\u0440\u043E\u0449\u0435\u043D\u043D\u043E\u0439 \u0441\u0438\u0441\u0442\u0435\u043C\u044B \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430(\u0432 \u0441\u043B\u0443\u0447\u0430\u0435 \u043F\u0440\u0438\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0423\u0421\u041D)</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.usn_notification\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <div class=\"form__row\">\n                                            <div class=\"form__col form__col--50\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"kpp\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041A\u041F\u041F</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"kpp\"\n                                                                id=\"kpp\"\n                                                                placeholder=\"\u041A\u041F\u041F\"\n                                                                data-kpp\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.kpp\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u0443\u0441\u0442\u0430\u0432\u0430 \u041E\u041E\u041E</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.llc_charter\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u043F\u0440\u043E\u0442\u043E\u043A\u043E\u043B\u0430 \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432 (\u0440\u0435\u0448\u0435\u043D\u0438\u044F \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0430) \u041E\u041E\u041E \u043E\u0431 \u0438\u0437\u0431\u0440\u0430\u043D\u0438\u0438 \u0440\u0443\u043A\u043E\u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044F \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.llc_members\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u043F\u0440\u0438\u043A\u0430\u0437\u0430 \u043E \u0432\u0441\u0442\u0443\u043F\u043B\u043D\u0435\u0438\u0438 \u0432 \u0434\u043E\u043B\u0436\u043D\u043E\u0441\u0442\u044C \u0433\u0435\u043D\u0435\u0440\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0434\u0438\u0440\u0435\u043A\u0442\u043E\u0440\u0430</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.ceo_appointment\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u0441\u0432\u0438\u0434\u0435\u0442\u0435\u043B\u044C\u0441\u0442\u0432\u0430 \u043E \u0433\u043E\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u041E\u041E\u041E/\u043B\u0438\u0441\u0442\u0430 \u0437\u0430\u043F\u0438\u0441\u0438 \u0415\u0413\u0420\u042E\u041B \u043E \u0432\u043D\u0435\u0441\u0435\u043D\u0438\u0438 \u0437\u0430\u043F\u0438\u0441\u0438 \u043E\u0431 \u041E\u041E\u041E \u0432 \u0415\u0413\u0420\u042E\u041B</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.llc_registration_certificate\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"form__row\">\n                                        <div class=\"form__col\">\n                                            <div class=\"form__field\">\n                                                <div class=\"checkbox\">\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        class=\"checkbox__input\"\n                                                        name=\"need_proxy\"\n                                                        id=\"need_proxy\"\n                                                        :readonly=\"!editing\"\n                                                        v-model=\"mutableLegalEntity.documents.need_proxy\"\n                                                        :checked=\"mutableLegalEntity.documents.need_proxy\" \n                                                    >\n                    \n                                                    <label for=\"need_proxy\" class=\"checkbox__label\">\n                                                        <span class=\"checkbox__icon\">\n                                                            <svg class=\"checkbox__icon-pic icon icon--check\">\n                                                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-check\">\n                                                            </svg>\n                                                        </span>\n                    \n                                                        <span class=\"checkbox__text\">\u0423 \u043C\u0435\u043D\u044F \u043D\u0435\u0442 \u043F\u0440\u0430\u0432\u0430 \u043F\u043E\u0434\u043F\u0438\u0441\u0438 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u043E\u0432 \u041E\u041E\u041E, \u044F \u0445\u043E\u0442\u0435\u043B \u0431\u044B \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0443\u043F\u043E\u043B\u043D\u043E\u043C\u043E\u0447\u0435\u043D\u043D\u043E\u0435 \u043B\u0438\u0446\u043E</span>\n                                                    </label>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u041A\u043E\u043F\u0438\u044F \u0434\u043E\u0432\u0435\u0440\u0435\u043D\u043D\u043E\u0441\u0442\u0438 \u043D\u0430 \u043F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u0435\u043B\u044F (\u0432 \u0441\u043B\u0443\u0447\u0430\u0435 \u043F\u043E\u0434\u043F\u0438\u0441\u0430\u043D\u0438\u044F \u043F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u0435\u043B\u0435\u043C-\u043D\u0435 \u0440\u0443\u043A\u043E\u0432\u043E\u0434\u0438\u0442\u0435\u043B\u0435\u043C \u041E\u041E\u041E)</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.procuration\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u0411\u0430\u043D\u043A\u043E\u0432\u0441\u043A\u0438\u0435 \u0440\u0435\u043A\u0432\u0438\u0437\u0438\u0442\u044B</h6>\n                    \n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"bank_name\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0431\u0430\u043D\u043A\u0430</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"bank_name\"\n                                                                id=\"bank_name\"\n                                                                placeholder=\"\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0431\u0430\u043D\u043A\u0430\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.bank_name\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                    \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"bic\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0411\u0418\u041A</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"bic\"\n                                                                id=\"bic\"\n                                                                placeholder=\"\u0411\u0418\u041A\"\n                                                                data-bik\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.bic\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                    \n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"checking_account\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0420\u0430\u0441\u0447\u0435\u0442\u043D\u044B\u0439 \u0441\u0447\u0435\u0442</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"number\"\n                                                                class=\"input__control\"\n                                                                name=\"checking_account\"\n                                                                id=\"checking_account\"\n                                                                placeholder=\"\u0420\u0430\u0441\u0447\u0435\u0442\u043D\u044B\u0439 \u0441\u0447\u0435\u0442\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.checking_account\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                    \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"correspondent_account\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041A\u043E\u0440\u0440\u0435\u0441\u043F\u043E\u043D\u0434\u0435\u043D\u0442\u0441\u043A\u0438\u0439 \u0441\u0447\u0435\u0442</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"number\"\n                                                                class=\"input__control\"\n                                                                name=\"correspondent_account\"\n                                                                id=\"correspondent_account\"\n                                                                placeholder=\"\u041A\u043E\u0440\u0440\u0435\u0441\u043F\u043E\u043D\u0434\u0435\u043D\u0442\u0441\u043A\u0438\u0439 \u0441\u0447\u0435\u0442\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.correspondent_account\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u0421\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u043E \u0431\u0430\u043D\u043A\u043E\u0432\u0441\u043A\u0438\u0445 \u0440\u0435\u043A\u0432\u0438\u0437\u0438\u0442\u0430\u0445</h6>\n\n                                      <Dropzone\n                                          :files=\"mutableLegalEntity.documents.bank_details\"\n                                          :editing=\"editing\"\n                                      />\n                                    </div>\n                    \n                                    <div class=\"section__box-block\">\n                                        <h6 class=\"box__heading box__heading--small\">\u0410\u0434\u0440\u0435\u0441 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438</h6>\n                    \n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"ltc_locality\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u041D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0443\u043D\u043A\u0442</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"ltc_locality\"\n                                                                id=\"ltc_locality\"\n                                                                placeholder=\"\u041D\u0430\u0441\u0435\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0443\u043D\u043A\u0442\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.ltc_locality\"\n                                                                data-replace-input=\"adress\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                    \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"ltc_street\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0423\u043B\u0438\u0446\u0430</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"ltc_street\"\n                                                                id=\"ltc_street\"\n                                                                placeholder=\"\u0423\u043B\u0438\u0446\u0430\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.ltc_street\"\n                                                                data-replace-input=\"adress\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                    \n                                        <div class=\"form__row\">\n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"ltc_address_1\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0414\u043E\u043C, \u043A\u043E\u0440\u043F\u0443\u0441, \u0441\u0442\u0440\u043E\u0435\u043D\u0438\u0435</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"ltc_address_1\"\n                                                                id=\"ltc_address_1\"\n                                                                placeholder=\"\u0414\u043E\u043C, \u043A\u043E\u0440\u043F\u0443\u0441, \u0441\u0442\u0440\u043E\u0435\u043D\u0438\u0435\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.ltc_address_1\"\n                                                                data-replace-input=\"adress\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                    \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"ltc_address_2\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u042D\u0442\u0430\u0436, \u043F\u043E\u043C\u0435\u0449\u0435\u043D\u0438\u0435, \u043A\u043E\u043C\u043D\u0430\u0442\u0430</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"ltc_address_2\"\n                                                                id=\"ltc_address_2\"\n                                                                placeholder=\"\u042D\u0442\u0430\u0436, \u043F\u043E\u043C\u0435\u0449\u0435\u043D\u0438\u0435, \u043A\u043E\u043C\u043D\u0430\u0442\u0430\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.ltc_address_2\"\n                                                                data-replace-input=\"adress\"\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                    \n                    \n                                            <div class=\"form__col\">\n                                                <div class=\"form__field\">\n                                                    <div class=\"form__field-block form__field-block--label\">\n                                                        <label for=\"ltc_postal_code\" class=\"form__label form__label--required\">\n                                                            <span class=\"form__label-text\">\u0418\u043D\u0434\u0435\u043A\u0441</span>\n                                                        </label>\n                                                    </div>\n                    \n                                                    <div class=\"form__field-block form__field-block--input\">\n                                                        <div class=\"input\">\n                                                            <input\n                                                                type=\"text\"\n                                                                class=\"input__control\"\n                                                                name=\"ltc_postal_code\"\n                                                                id=\"ltc_postal_code\"\n                                                                placeholder=\"\u0418\u043D\u0434\u0435\u043A\u0441\"\n                                                                :readonly=\"!editing\"\n                                                                v-model=\"mutableLegalEntity.documents.ltc_postal_code\"\n                                                                data-mask-post-ltc\n                                                            >\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"profile__toggle profile__toggle--inline section__actions\">\n                                <div class=\"section__actions-col\">\n\n                                  <button type=\"button\" class=\"button button--rounded button--mixed button--red button--full\" @click=\"() => cancelEditing(pet, petKey)\">\n                                    <span class=\"button__text\">\u041E\u0442\u043C\u0435\u043D\u0438\u0442\u044C \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F</span>\n                                  </button>\n                                </div>\n\n                                <div class=\"section__actions-col\">\n                                    <button type=\"button\" class=\"profile__button-save button button--rounded button--covered button--green button--full\" @click=\"saveChanges\">\n                                        <span class=\"button__text\">\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F</span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n\n        <article id=\"thanks\" class=\"modal modal--wide modal--centered box box--circle box--hanging\" style=\"display: none\">\n            <div class=\"modal__content\">\n                <section class=\"modal__section modal__section--content\">\n                    <div class=\"notification notification--simple\">\n                        <div class=\"notification__icon\">\n                            <svg class=\"icon icon--cat-serious\">\n                                <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-cat-serious\"></use>\n                            </svg>\n                        </div>\n                        \n                        <h4 class=\"notification__title\">\u0421\u043F\u0430\u0441\u0438\u0431\u043E \u0437\u0430 \u043E\u0431\u0440\u0430\u0449\u0435\u043D\u0438\u0435</h4>\n                        <p class=\"notification__text\">\u041C\u044B \u043F\u0440\u043E\u0432\u0435\u0440\u0438\u043C \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u0438 \u0443\u0432\u0435\u0434\u043E\u043C\u0438\u043C \u0412\u0430\u0441 \u043E \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0435 \u0432\u043D\u0435\u0441\u0435\u043D\u0438\u044F \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0439. </p>\n                    </div>\n                </section>\n            </div>\n        </article>\n    "
    };

    var detailOfferStore = ui_vue3_pinia.defineStore('detailOffer', {
      state: function state() {
        return {
          offers: [],
          currentOfferId: undefined
        };
      },
      getters: {
        article: function article() {
          return this.offers.ARTICLES[this.currentOfferId];
        },
        images: function images() {
          return this.offers.PHOTOS[this.currentOfferId];
        },
        packagings: function packagings() {
          return this.offers.PACKAGINGS;
        },
        colors: function colors() {
          return this.offers.COLORS;
        },
        currentColor: function currentColor() {
          return this.offers.COLORS[this.currentOfferId];
        },
        currentSize: function currentSize() {
          return this.offers.SIZES[this.currentOfferId];
        },
        color2Size: function color2Size() {
          return this.offers.COLOR2SIZE;
        },
        size2Color: function size2Color() {
          return this.offers.SIZE2COLOR;
        },
        allColors: function allColors() {
          return this.offers.ALL_COLORS;
        },
        price: function price() {
          return this.offers.PRICES[this.currentOfferId];
        },
        bonuses: function bonuses() {
          return this.offers.BONUSES_PRICES[this.currentOfferId];
        },
        catalogQuantity: function catalogQuantity() {
          return this.offers.OFFERS[this.currentOfferId].CATALOG_QUANTITY;
        },
        isNonreturnable: function isNonreturnable() {
          return this.offers.NONRETURNABLE;
        },
        inWishlist: function inWishlist() {
          return this.offers.OFFERS[this.currentOfferId].IN_WISHLIST;
        }
      },
      actions: {
        getIdByColor: function getIdByColor(color) {
          // size preselected
          var size = this.offers.SIZES[this.currentOfferId];
          return this.offers.SIZE2COLOR[size][color];
        },
        getIdBySize: function getIdBySize(size) {
          // color preselected
          var color = this.offers.COLORS[this.currentOfferId];
          return this.offers.COLOR2SIZE[color][size];
        },
        load: function load(name, data) {
          this[name] = data;
        },
        checkAvailable: function checkAvailable(id) {
          return !!this.offers.AVAILABLE[id];
        },
        setStore: function setStore(data) {
          this.offers = data;
        },
        setOffer: function setOffer(id) {
          this.currentOfferId = id;
        },
        toggleInWishlist: function toggleInWishlist() {
          this.offers.OFFERS[this.currentOfferId].IN_WISHLIST = !this.offers.OFFERS[this.currentOfferId].IN_WISHLIST;
        }
      }
    });

    function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

    function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
    var SelectOffer = {
      data: function data() {
        return {
          isSizeRestricted: false
        };
      },
      setup: function setup() {
        var store = detailOfferStore();
        return {
          store: store
        };
      },
      mounted: function mounted() {
        var _this = this;

        // window.initSelect(); // TODO ?
        $('select[name=select-size]').on('change', function () {
          return _this.setSelectOffer('select-size');
        });
      },
      updated: function updated() {
        window.initSelect();
      },
      computed: _objectSpread$2({}, ui_vue3_pinia.mapState(detailOfferStore, ['allColors', 'offers', 'currentOfferId', 'packagings', 'color2Size', 'size2Color', 'currentColor', 'currentSize'])),
      methods: {
        setOffer: function setOffer(event) {
          this.isSizeRestricted = false;

          if (this.store.checkAvailable(event.target.value)) {
            this.store.setOffer(event.target.value);
          }
        },
        setSelectOffer: function setSelectOffer(name) {
          this.isSizeRestricted = true;
          var value = $('select[name=' + name + ']').val();

          if (this.store.checkAvailable(value)) {
            this.store.setOffer(value);
          }
        },
        getColorOffer: function getColorOffer(color) {
          if (this.isSizeRestricted) {
            return this.store.getIdByColor(color);
          } else {
            if (color == this.currentColor) {
              return this.currentOfferId;
            }

            var keys = Object.keys(this.color2Size[color]);
            var first = keys.indexOf(this.currentSize) == -1 ? keys[0] : this.currentSize;
            return this.color2Size[color][first];
          }
        }
      },
      // language=Vue
      template: "\n        <template v-if=\"packagings.length > 0\">\n            <div class=\"specification__packs packs\">\n                <p class=\"specification__category\">\u0424\u0430\u0441\u043E\u0432\u043A\u0430</p>\n                <ul class=\"packs__list\">\n                    <li class=\"packs__item\" v-for=\"(item) in packagings\">\n                        <div class=\"pack pack--bordered\" v-bind:data-tippy-content=\"offers.AVAILABLE[item.offerId] === 'true' ? null : '\u041D\u0435\u0442 \u0432 \u043D\u0430\u043B\u0438\u0447\u0438\u0438'\">\n                            <div class=\"radio\">\n                                <input autocomplete=\"off\" type=\"radio\" class=\"pack__input radio__input\" name=\"radio_pack\"\n                                       @click=\"setOffer\"\n                                       v-bind:value=\"item.offerId\"\n                                       v-bind:id=\"'radio' + item.offerId\"\n                                       v-bind:disabled=\"offers.AVAILABLE[item.offerId] !== 'true'\"\n                                       v-bind:checked=\"currentOfferId == item.offerId\"\n                                >\n                                <label v-bind:for=\"'radio' + item.offerId\">\n                                    <div v-bind:class=\"'pack__item' + (offers.AVAILABLE[item.offerId] === 'true' ? '': ' pack__item--disabled')\">\n                                        {{item.package}}\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n        </template>\n        <template v-else-if=\"color2Size\">\n            <div class=\"specification__colors colors colors--big\">\n                <p class=\"specification__category\">\u0426\u0432\u0435\u0442</p>\n                <ul class=\"colors__list\">\n                    <li class=\"colors__item\" v-for=\"(item, color) in color2Size\" :class=\"'colors__item-' + color\" v-bind:data-tippy-content=\"offers.AVAILABLE[getColorOffer(color)] === 'true' ? null : '\u041D\u0435\u0442 \u0432 \u043D\u0430\u043B\u0438\u0447\u0438\u0438'\">\n                        <div v-bind:class=\"'color ' + ((offers.AVAILABLE[getColorOffer(color)] === 'true') ? '' : ' color--disabled')\">\n                            <div class=\"radio\">\n                                <input autocomplete=\"off\" type=\"radio\" class=\"color__input radio__input\" name=\"radio_color\"\n                                       @click=\"setOffer\"\n                                       v-bind:value=\"getColorOffer(color)\"\n                                       v-bind:id=\"'radio' + getColorOffer(color)\"\n                                       v-bind:disabled=\"offers.AVAILABLE[getColorOffer(color)] !== 'true'\"\n                                       v-bind:checked=\"currentOfferId == getColorOffer(color)\"\n                                >\n                                <label v-bind:for=\"'radio' + getColorOffer(color)\">\n                                  <div class=\"color__item\">\n                                    <div class=\"color__item-wrapper\">\n                                      <img :src=\"allColors[color].file_src\" class=\"color__item-pic\" alt=\"Color\">\n                                    </div>\n                                  </div>\n                                </label>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"specification__breed\">\n                <p class=\"specification__category\">\u0420\u0430\u0437\u043C\u0435\u0440</p>\n                <div class=\"specification__select select select--middle\" data-select>\n                    <select class=\"select__control\" name=\"select-size\" data-select-control\n                            data-placeholder=\"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0440\u0430\u0437\u043C\u0435\u0440\" data-option>\n                        <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                        <option v-for=\"(item, size) in size2Color\"\n                                v-bind:value=\"store.getIdBySize(size)\"\n                                v-bind:disabled=\"offers.AVAILABLE[store.getIdBySize(size)] !== 'true'\"\n                                v-bind:selected=\"currentOfferId == store.getIdBySize(size)\"\n                        >\n                            {{ offers.SIZE_NAMES[size] }} &lt;span class=&quot;stock\n                            {{ (offers.AVAILABLE[store.getIdBySize(size)] === 'true' ? 'stock--yes' : '') }}&quot;&gt;\n                            {{(!offers.AVAILABLE[store.getIdBySize(size)] === 'true' ? '\u043D\u0435\u0442 ' : '')}} \u0432 \u043D\u0430\u043B\u0438\u0447\u0438\u0438&lt;/span&gt;\n                        </option>\n                    </select>\n                </div>\n            </div>\n        </template>\n    "
    };

    function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

    function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
    var OfferArticle = {
      props: {
        isMobile: {
          type: Boolean,
          "default": false
        }
      },
      data: function data() {
        return {};
      },
      computed: _objectSpread$3({}, ui_vue3_pinia.mapState(detailOfferStore, ['offers', 'currentOfferId', 'article'])),
      setup: function setup() {
        return {
          store: detailOfferStore()
        };
      },
      template: "\n        <p class=\"specification__article\" :class=\"[isMobile ? 'specification__article--mobile': 'specification__article--hidden']\">\n            \u0410\u0440\u0442. {{ article }}\n        </p>\n    "
    };

    function _regeneratorRuntime$b() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$b = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

    function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

    function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
    var OfferPrice = {
      mixins: [NumberFormatMixin],
      props: {
        isAuthorized: {
          type: Boolean,
          required: true
        },
        isConsultant: {
          type: Boolean,
          required: true
        }
      },
      data: function data() {
        return {
          inCartState: false
        };
      },
      computed: _objectSpread$4(_objectSpread$4({}, ui_vue3_pinia.mapState(detailOfferStore, ['price', 'bonuses', 'currentOfferId', 'catalogQuantity', 'isNonreturnable'])), ui_vue3_pinia.mapState(useBasketStore, ['items', 'fetched'])),
      setup: function setup() {
        return {
          offerStore: detailOfferStore(),
          basketStore: useBasketStore()
        };
      },
      methods: {
        increaseItem: function increaseItem() {
          var _this = this;

          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$b().mark(function _callee() {
            return _regeneratorRuntime$b().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    if (_this.inCartState) {
                      _context.next = 7;
                      break;
                    }

                    _this.inCartState = true;
                    _context.next = 4;
                    return _this.basketStore.increaseItem(_this.currentOfferId, window.location.pathname, _this.isNonreturnable);

                  case 4:
                    _this.inCartState = false;
                    _context.next = 8;
                    break;

                  case 7:
                    return _context.abrupt("return");

                  case 8:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        decreaseItem: function decreaseItem() {
          this.basketStore.decreaseItem(this.currentOfferId);
        },
        showPriceWhole: function showPriceWhole(item) {
          var number = parseFloat(item);
          var numberFloor = Math.floor(number);
          return numberFloor.toLocaleString('ru-RU', {
            minimumFractionDigits: 0
          });
        },
        showPriceRemains: function showPriceRemains(item) {
          var number = parseFloat(item);
          var numberFixed = number.toFixed(2);
          var totalRemains = numberFixed.toString().split('.')[1];

          if (totalRemains === "00") {
            return;
          } else {
            return ',' + totalRemains;
          }
        }
      },
      template: "\n        <div class=\"cart__price price\" data-quantity>\n            <template v-if=\"this.isConsultant\">\n              <p v-if=\"price.BASE_PRICE\" class=\"price__main\">\n                    <span class=\"cart__price-whole\">\n                        {{ showPriceWhole(price.BASE_PRICE) }}\n                    </span>\n                    <span class=\"cart__price-remains\">\n                        {{ showPriceRemains(price.BASE_PRICE) }}&nbsp;\u20BD\n                    </span>\n              </p>\n              <div class=\"price__calculation\">\n                <p class=\"price__calculation-total\">\n                    <span class=\"cart__price-whole\">\n                        {{ showPriceWhole(price.PRICE) }}\n                    </span>\n                    <span class=\"cart__price-remains\">\n                        {{ showPriceRemains(price.PRICE) }}&nbsp;\u20BD\n                    </span>\n                </p>\n                <p class=\"price__calculation-accumulation\">{{ formatNumber(bonuses) }} \u0411\u0411</p>\n              </div>\n            </template>\n            <template v-else-if=\"isAuthorized && price.BASE_PRICE\">\n                <div class=\"price__calculation\" >\n                    <p class=\"price__calculation-total price__calculation-total--red\">\n                        <span class=\"cart__price-whole\">\n                            {{ showPriceWhole(price.PRICE) }}\n                        </span>\n                        <span class=\"cart__price-remains\">\n                            {{ showPriceRemains(price.PRICE) }}&nbsp;\u20BD\n                        </span>\n                    </p>\n                    <p class=\"price__main\">\n                        <span class=\"cart__price-whole\">\n                            {{ showPriceWhole(price.BASE_PRICE) }}\n                        </span>\n                        <span class=\"cart__price-remains\">\n                            {{ showPriceRemains(price.BASE_PRICE) }}&nbsp;\u20BD\n                        </span>\n                    </p>\n                </div>\n            </template>\n            <template v-else>\n              <div class=\"price__calculation\" >\n                <p class=\"price__calculation-total\">\n                    <span class=\"cart__price-whole\">\n                        {{ showPriceWhole(price.PRICE) }}\n                    </span>\n                    <span class=\"cart__price-remains\">\n                        {{ showPriceRemains(price.PRICE) }}&nbsp;\u20BD\n                    </span>\n                </p>\n              </div>\n            </template>\n        </div>\n        <div v-if=\"fetched\" class=\"cart__quantity quantity\" :class=\"{ 'quantity--active': items[currentOfferId]?.QUANTITY }\">\n            <div v-if=\"!items[currentOfferId]?.QUANTITY\" class=\"quantity__button\">\n              <button :disabled=\"inCartState\" type=\"button\" class=\"button button--full button--medium button--rounded button--covered button--white-green\" @click=\"increaseItem\">\n                <span class=\"button__icon\">\n                    <svg class=\"icon icon--basket\">\n                        <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-basket\"></use>\n                    </svg>\n                </span>\n                <span class=\"button__text\">\u0412 \u043A\u043E\u0440\u0437\u0438\u043D\u0443</span>\n              </button>\n            </div>\n    \n            <div v-else class=\"quantity__actions\">\n              <div class=\"quantity__decrease\">\n                <button type=\"button\" class=\"button button--iconed button--covered button--square button--small button--gray-red button--counter\" @click=\"decreaseItem\">\n                    <span class=\"button__icon button__icon--small\">\n                        <svg class=\"icon icon--minus\">\n                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-minus\"></use>\n                        </svg>\n                    </span>\n                </button>\n              </div>\n    \n              <div class=\"quantity__total\">\n                    <span class=\"quantity__total-icon\">\n                        <svg class=\"icon icon--basket\">\n                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-basket\"></use>\n                        </svg>\n                    </span>\n                <span class=\"quantity__total-sum\">{{ formatNumber(items[currentOfferId]?.QUANTITY) }}</span>\n              </div>\n    \n              <div class=\"quantity__increase\">\n                <button type=\"button\" class=\"button button--iconed button--covered button--square button--small button--gray-green button--counter\" @click=\"increaseItem\" :disabled=\"parseInt(items[currentOfferId]?.QUANTITY) >= Math.min(catalogQuantity, 99)\" :class=\"{ 'button--disabled': parseInt(items[currentOfferId]?.QUANTITY) >= Math.min(catalogQuantity, 99) }\">\n                    <span class=\"button__icon button__icon--small\">\n                        <svg class=\"icon icon--plus\">\n                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-plus\"></use>\n                        </svg>\n                    </span>\n                </button>\n              </div>\n            </div>\n        </div>\n    "
    };

    function ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

    function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$5(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
    var SelectOfferMobile = {
      data: function data() {
        return {
          isSizeRestricted: false
        };
      },
      setup: function setup() {
        var store = detailOfferStore();
        return {
          store: store
        };
      },
      mounted: function mounted() {
        var _this = this;

        // window.initSelect();
        $('select[name=select-package]').on('change', function () {
          return _this.setOffer('select-package', false);
        });
        $('select[name=select-color]').on('change', function () {
          return _this.setOffer('select-color', false);
        });
        $('select[name=select-size-mob]').on('change', function () {
          return _this.setOffer('select-size-mob', true);
        });
      },
      updated: function updated() {
        window.initSelect();
      },
      computed: _objectSpread$5({}, ui_vue3_pinia.mapState(detailOfferStore, ['allColors', 'offers', 'currentOfferId', 'packagings', 'color2Size', 'size2Color', 'currentColor', 'currentSize'])),
      methods: {
        setOffer: function setOffer(name, selectFlag) {
          this.isSizeRestricted = selectFlag;
          var value = $('select[name=' + name + ']').val();

          if (this.store.checkAvailable(value)) {
            this.store.setOffer(value);
          }
        },
        getColorOffer: function getColorOffer(color) {
          if (this.isSizeRestricted) {
            return this.store.getIdByColor(color);
          } else {
            if (color == this.currentColor) {
              return this.currentOfferId;
            }

            var keys = Object.keys(this.color2Size[color]);
            var first = keys.indexOf(this.currentSize) == -1 ? keys[0] : this.currentSize;
            return this.color2Size[color][first];
          }
        }
      },
      // language=Vue
      template: "\n        <!-- \u0411\u043B\u043E\u043A \u0441\u0435\u043B\u0435\u043A\u0442\u0430 \u0444\u0430\u0441\u0441\u043E\u0432\u043A\u0438 \u043C\u0430\u043B\u044B\u0439 \u0432\u0430\u0440\u0438\u0430\u043D\u0442-->\n        <template v-if=\"packagings.length > 0\">\n            <div class=\"cart__packs\">\n                <p class=\"specification__category\">\u0424\u0430\u0441\u043E\u0432\u043A\u0430</p>\n                <div class=\"select select--mini\" data-select  >\n                    <select class=\"select__control\"  name=\"select-package\" data-select-control data-placeholder=\"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0444\u0430\u0441\u043E\u0432\u043A\u0443\" data-option >\n                        <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                        <option v-for=\"(item) in packagings\"\n                                v-bind:value=\"item.offerId\"\n                                v-bind:selected=\"currentOfferId == item.offerId\"\n                                v-bind:disabled=\"!offers.AVAILABLE[item.offerId]\"\n                                v-bind:data-option-after=\"'<span class=&quot;stock ' + (offers.AVAILABLE[item.offerId] ? 'stock--yes' : '') + '&quot;>' +  (!offers.AVAILABLE[item.offerId] ? '\u043D\u0435\u0442 ' : '') + '\u0432 \u043D\u0430\u043B\u0438\u0447\u0438\u0438</span>'\"\n                                v-on:click=\"setOffer\"\n                        >\n                            <span >{{item.package}}</span>\n                        </option>\n                    </select>\n                </div>\n            </div>\n        </template>\n        <template v-else-if=\"color2Size\">\n            <div class=\"cart__colors\">\n                <p class=\"specification__category\">\u0426\u0432\u0435\u0442</p>\n                <div class=\"select select--middle select--simple\" data-select>\n                    <select class=\"select__control\" name=\"select-color\" data-select-control data-placeholder=\"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0446\u0432\u0435\u0442\" data-option>\n                        <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                        <option v-for=\"(item, color) in color2Size\"\n                                v-on:click=\"setOffer\"\n                                v-bind:value=\"getColorOffer(color)\"\n                                v-bind:selected=\"currentOfferId == getColorOffer(color)\"\n                                v-bind:disabled=\"!offers.AVAILABLE[getColorOffer(color)]\"\n                                v-bind:data-option-before=\"'<div class=&quot;color__item ' + color + '&quot;><div class=&quot;color__item-wrapper&quot;><img src=&quot;' + allColors[color].file_src + '&quot; class=&quot;color__item-pic&quot;></div></div>'\"\n                        >\n                            &lt;span class=&quot;color__name&quot;&gt; {{ offers.COLOR_NAMES[color] }} &lt;/span&gt;\n                            &lt;span class=&quot;stock {{ (offers.AVAILABLE[getColorOffer(color)] ? ' stock--yes' : '') }} &quot;&gt;\n                            {{ (!offers.AVAILABLE[getColorOffer(color)] ? '\u043D\u0435\u0442 ' : '') }}\u0432 \u043D\u0430\u043B\u0438\u0447\u0438\u0438 &lt;/span&gt;\n                        </option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"cart__breed\">\n                <p class=\"specification__category\">\u0420\u0430\u0437\u043C\u0435\u0440</p>\n                <div class=\"select select--middle select--simple\" data-select>\n                    <select class=\"select__control\" name=\"select-size-mob\" data-select-control data-placeholder=\"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u0440\u0430\u0437\u043C\u0435\u0440\" data-option>\n                        <option><!-- \u043F\u0443\u0441\u0442\u043E\u0439 option \u0434\u043B\u044F placeholder --></option>\n                        <option v-for=\"(item, size) in size2Color\"\n                                v-bind:value=\"store.getIdBySize(size)\"\n                                v-bind:disabled=\"!offers.AVAILABLE[store.getIdBySize(size)]\"\n                                v-bind:selected=\"currentOfferId == store.getIdBySize(size)\"\n                        >\n                            {{ offers.SIZE_NAMES[size] }} &lt;span class=&quot;stock\n                            {{ (offers.AVAILABLE[store.getIdBySize(size)] ? ' stock--yes' : '') }}&quot;&gt;\n                            {{(!offers.AVAILABLE[store.getIdBySize(size)] ? '\u043D\u0435\u0442' : '')}} \u0432 \u043D\u0430\u043B\u0438\u0447\u0438\u0438&lt;/span&gt;\n                        </option>\n                    </select>\n                </div>\n            </div>\n        </template>\n        <!-- \u0411\u043B\u043E\u043A \u0441\u0435\u043B\u0435\u043A\u0442\u0430 \u0444\u0430\u0441\u0441\u043E\u0432\u043A\u0438 \u043C\u0430\u043B\u044B\u0439 \u0432\u0430\u0440\u0438\u0430\u043D\u0442-->\n    "
    };

    // https://swiper5.flandre.tw/api/
    var ELEMENTS_SELECTOR$2 = {
      slider: '[data-carousel]',
      container: '[data-carousel-container]',
      pagination: '[data-carousel-pagination]',
      prev: '[data-carousel-prev]',
      next: '[data-carousel-next]',
      productImage: '.product-card__pic',
      slide: '.slider__slide'
    };
    function initSwiper (update) {
      $(ELEMENTS_SELECTOR$2.slider).each(function () {
        var wrap = $(this);
        var type = wrap.data('carousel');
        var container = $(ELEMENTS_SELECTOR$2.container, wrap);
        var prev = $(ELEMENTS_SELECTOR$2.prev, wrap);
        var next = $(ELEMENTS_SELECTOR$2.next, wrap);
        var pagination = $(ELEMENTS_SELECTOR$2.pagination, wrap);

        if (update) {
          document.querySelector(ELEMENTS_SELECTOR$2.container).swiper.loopDestroy();
          document.querySelector(ELEMENTS_SELECTOR$2.container).swiper.loopCreate();
          document.querySelector(ELEMENTS_SELECTOR$2.container).swiper.pagination.render();
          document.querySelector(ELEMENTS_SELECTOR$2.container).swiper.update();
          document.querySelector(ELEMENTS_SELECTOR$2.container).swiper.slideToLoop(0, 1000);
          var images = $(ELEMENTS_SELECTOR$2.productImage, wrap);
          var imagesPag = pagination.find('.swiper-pagination-bullet__image');
          images.each(function (index, item) {
            var _images$index, _images$index2, _images$index3;

            var currentImage = ((_images$index = images[index]) === null || _images$index === void 0 ? void 0 : _images$index.getAttribute('poster')) || ((_images$index2 = images[index]) === null || _images$index2 === void 0 ? void 0 : _images$index2.getAttribute('src'));
            var video = ((_images$index3 = images[index]) === null || _images$index3 === void 0 ? void 0 : _images$index3.getAttribute('poster')) !== undefined;
            imagesPag.each(function (indexItem, element) {
              var indexBullets = $(element).attr('data-index');

              if (indexItem === index) {
                $(element).attr('src', currentImage);
              }
            });
          });
          return;
        }

        var params = {
          speed: 700,
          navigation: {
            nextEl: next,
            prevEl: prev
          },
          loop: true
        };
        var paramsCustom = {};

        switch (type) {
          case 'main':
            paramsCustom = {
              slidesPerView: 1,
              centeredSlides: true,
              pagination: {
                el: pagination,
                type: 'bullets',
                clickable: true
              },
              breakpoints: {
                320: {
                  spaceBetween: 10
                },
                768: {
                  spaceBetween: 20
                }
              },
              on: {
                slideChange: function slideChange() {
                  document.querySelector(ELEMENTS_SELECTOR$2.container).swiper.loopDestroy();
                  document.querySelector(ELEMENTS_SELECTOR$2.container).swiper.loopCreate();
                  document.querySelector(ELEMENTS_SELECTOR$2.container).swiper.update();
                }
              }
            };
            break;

          case 'product':
            var _images = $(ELEMENTS_SELECTOR$2.productImage, wrap);

            paramsCustom = {
              slidesPerView: 'auto',
              observer: true,
              observeParents: true,
              observeSlideChildren: true,
              pagination: {
                el: pagination,
                type: 'bullets',
                clickable: true,
                renderBullet: function renderBullet(index, classname) {
                  var _images$index4, _images$index5, _images$index6;

                  var currentImage = ((_images$index4 = _images[index]) === null || _images$index4 === void 0 ? void 0 : _images$index4.getAttribute('poster')) || ((_images$index5 = _images[index]) === null || _images$index5 === void 0 ? void 0 : _images$index5.getAttribute('src'));
                  var video = (_images$index6 = _images[index]) === null || _images$index6 === void 0 ? void 0 : _images$index6.getAttribute('poster');
                  var vodeoIcon = '';

                  if (video) {
                    vodeoIcon = "\n                                    <span class=\"swiper-pagination-bullet__video\">\n                                        <svg class=\"icon icon--video\">\n                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-video\"></use>\n                                        </svg>\n                                    </span>\n                                ";
                  }

                  return "<div class=\"".concat(classname, "\">\n                                        ").concat(vodeoIcon, "\n                                        <img\n                                            src=\"").concat(currentImage, "\"\n                                            alt=\"\u0432\u0438\u0434 \u0442\u043E\u0432\u0430\u0440\u0430 ").concat(index, "\"\n                                            class=\"").concat(classname, "__image\"\n                                            data-index=\"").concat(index, "\"\n                                        />\n                                    </div>");
                }
              },
              breakpoints: {
                320: {
                  spaceBetween: 10
                },
                768: {
                  spaceBetween: 20
                },
                1440: {
                  spaceBetween: 5,
                  pagination: {
                    dynamicBullets: true,
                    dynamicMainBullets: 8
                  }
                }
              },
              on: {
                slideChange: function slideChange() {
                  var currentSlide = $(ELEMENTS_SELECTOR$2.slide, wrap)[this.realIndex];
                  var previousSlide = $(ELEMENTS_SELECTOR$2.slide, wrap)[this.previousIndex];
                  var videoSlide = currentSlide.querySelector('video') || previousSlide.querySelector('video');

                  if (videoSlide && !(videoSlide !== null && videoSlide !== void 0 && videoSlide.paused)) {
                    videoSlide.pause();
                  }
                }
              }
            };
            break;

          default:
            break;
        }

        params = $.extend(params, paramsCustom);
        new Swiper(container, params);
      });
    }

    function _regeneratorRuntime$c() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime$c = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == babelHelpers["typeof"](value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
    var useWishlistStore = ui_vue3_pinia.defineStore('wishlist', {
      actions: {
        add: function add(productId) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$c().mark(function _callee() {
            return _regeneratorRuntime$c().wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _context.next = 2;
                    return BX.ajax.runComponentAction('zolo:wishlist', 'add', {
                      mode: 'class',
                      data: {
                        productId: productId
                      }
                    });

                  case 2:
                    return _context.abrupt("return", _context.sent);

                  case 3:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }))();
        },
        remove: function remove(productId) {
          return babelHelpers.asyncToGenerator( /*#__PURE__*/_regeneratorRuntime$c().mark(function _callee2() {
            return _regeneratorRuntime$c().wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return BX.ajax.runComponentAction('zolo:wishlist', 'remove', {
                      mode: 'class',
                      data: {
                        productId: productId
                      }
                    });

                  case 2:
                    return _context2.abrupt("return", _context2.sent);

                  case 3:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }))();
        }
      }
    });

    function ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

    function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$6(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
    var OfferImage = {
      props: {
        isAuthorized: {
          type: Boolean,
          required: true
        },
        noImagePlaceholder: {
          type: String,
          required: true
        }
      },
      computed: _objectSpread$6(_objectSpread$6({}, ui_vue3_pinia.mapState(detailOfferStore, ['offers', 'currentOfferId', 'images', 'inWishlist', 'toggleInWishlist'])), ui_vue3_pinia.mapState(useWishlistStore, ['add', 'remove'])),
      setup: function setup() {
        return {
          store: detailOfferStore()
        };
      },
      updated: function updated() {
        initSwiper(true);
      },
      methods: {
        toggleWishlist: function toggleWishlist() {
          this.inWishlist ? this.remove(this.currentOfferId) : this.add(this.currentOfferId);
          this.toggleInWishlist();
        }
      },
      template: " \n            <div class=\"detail__card-slider slider slider--product\" data-carousel=\"product\" :class=\"'test-' + currentOfferId\">\n            <div class=\"swiper-container\" data-carousel-container :class=\"'test-' + currentOfferId\">\n                <div class=\"swiper-wrapper\" data-card-favourite-block :class=\"'test-' + currentOfferId\">\n                    <template v-if=\"images && images.length > 0\">\n                        <div v-for=\"(image) in images\" class=\"swiper-slide slider__slide\">\n                            <article v-bind:key=\"image.ID\" class=\"product-card product-card--detail product-card--slide box box--circle box--hovering box--border\">\n                                <div class=\"product-card__header\">\n                                    <div v-if=\"offers.DISCOUNT_LABELS[currentOfferId].NAME\"\n                                         v-bind:class=\"'product-card__label label label--' +  offers.DISCOUNT_LABELS[currentOfferId].COLOR\">\n                                      {{ offers.DISCOUNT_LABELS[currentOfferId].NAME }}\n                                      </div>\n                                    <div v-if=\"isAuthorized\" class=\"product-card__favourite\">\n                                        <button type=\"button\" class=\"product-card__favourite-button button button--ordinary button--iconed button--simple button--big button--red\" :data-card-favourite=\"inWishlist ? 'heart-fill' : 'heart'\" @click=\"toggleWishlist\">\n                                            <span class=\"button__icon button__icon--big\">\n                                                <svg class=\"icon icon--heart\">\n                                                    <use :xlink:href=\"'/local/templates/.default/images/icons/sprite.svg#icon-' + (inWishlist ? 'heart-fill' : 'heart')\"></use>\n                                                </svg>\n                                            </span>\n                                        </button>\n                                    </div>\n\n                                    <a v-bind:href=\"image.src\" data-fancybox=\"gallery\">\n                                        <div class=\"product-card__wrapper\">\n                                            <div class=\"product-card__image box box--circle\">\n                                                <div class=\"product-card__box\">\n                                                    <img v-bind:src=\"image.src\" v-bind:alt=\"offers.TITLE\" class=\"product-card__pic\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </a>\n                                </div>\n                            </article>\n                        </div>\n                    </template>\n                    <template v-else>\n                        <div class=\"swiper-slide slider__slide\">\n                            <article class=\"product-card product-card--slide box box--circle box--hovering box--border\">\n                                <div class=\"product-card__header\">\n                                  <div v-if=\"offers.DISCOUNT_LABELS[currentOfferId].NAME\"\n                                       v-bind:class=\"'product-card__label label label--' +  offers.DISCOUNT_LABELS[currentOfferId].COLOR\">\n                                    {{ offers.DISCOUNT_LABELS[currentOfferId].NAME}}\n                                  </div>\n    \n                                    <div v-if=\"isAuthorized\" class=\"product-card__favourite\">\n                                        <button type=\"button\" class=\"product-card__favourite-button button button--ordinary button--iconed button--simple button--big button--red\" :data-card-favourite=\"inWishlist ? 'heart-fill' : 'heart'\" @click=\"toggleWishlist\">\n                                            <span class=\"button__icon button__icon--big\">\n                                                <svg class=\"icon icon--heart\">\n                                                    <use :xlink:href=\"'/local/templates/.default/images/icons/sprite.svg#icon-' + (inWishlist ? 'heart-fill' : 'heart')\"></use>\n                                                </svg>\n                                            </span>\n                                        </button>\n                                    </div>\n    \n                                    <a :href=\"noImagePlaceholder\" data-fancybox=\"gallery\">\n                                        <div class=\"product-card__wrapper\">\n                                            <div class=\"product-card__image box box--circle\">\n                                                <div class=\"product-card__box\">\n                                                    <img :src=\"noImagePlaceholder\" v-bind:alt=\"offers.TITLE\" class=\"product-card__pic\">\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </a>\n                                </div>\n                            </article>\n                        </div>\n                    </template>\n                    \n                    <div v-if=\"offers.PRODUCT_VIDEO\" class=\"swiper-slide slider__slide\">\n                        <article class=\"product-card product-card--slide box box--circle box--hovering box--border\">\n                            <div class=\"product-card__header\">\n                                <div v-if=\"offers.DISCOUNT_LABELS[currentOfferId].NAME\"\n                                  v-bind:class=\"'product-card__label label label--' +  offers.DISCOUNT_LABELS[currentOfferId].COLOR\">\n                                  {{ offers.DISCOUNT_LABELS[currentOfferId].NAME}}\n                                </div>\n                                <div v-if=\"isAuthorized\" class=\"product-card__favourite\">\n                                    <button type=\"button\" class=\"product-card__favourite-button button button--ordinary button--iconed button--simple button--big button--red\" data-card-favourite=\"heart\" @click=\"toggleWishlist\">\n                                    <span class=\"button__icon button__icon--big\">\n                                        <svg class=\"icon icon--heart\">\n                                            <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-heart\" data-card-favourite-icon></use>\n                                        </svg>\n                                    </span>\n                                    </button>\n                                </div>\n\n                                <a v-bind:href=\"offers.PRODUCT_VIDEO.path\" data-fancybox=\"gallery\">\n                                    <div class=\"product-card__wrapper\">\n                                        <div class=\"product-card__image box box--circle\">\n                                            <div class=\"product-card__box\">\n                                                <video v-bind:src=\"offers.PRODUCT_VIDEO.path\" poster=\"/local/templates/.default/images/detail-slide.png\" controls class=\"product-card__pic\"></video>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </article>\n                    </div>\n                </div>\n\n                <div class=\"slider__buttons\">\n                    <div class=\"slider__buttons-item swiper-button-prev\" data-carousel-prev>\n                        <button type=\"button\" class=\"slider__button slider__button--prev button button--circular button--small button--mixed button--gray-red button--shadow\">\n                            <span class=\"button__icon\">\n                                <svg class=\"icon icon--arrow-slider\">\n                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-slider\"></use>\n                                </svg>\n                            </span>\n                        </button>\n                    </div>\n\n                    <div class=\"swiper-pagination pagination pagination--image\" data-carousel-pagination></div>\n\n                    <div class=\"slider__buttons-item swiper-button-next\" data-carousel-next>\n                        <button type=\"button\" class=\"slider__button slider__button--next button button--circular button--small button--mixed button--gray-red button--shadow\">\n                            <span class=\"button__icon\">\n                                <svg class=\"icon icon--arrow-slider\">\n                                    <use xlink:href=\"/local/templates/.default/images/icons/sprite.svg#icon-arrow-slider\"></use>\n                                </svg>\n                            </span>\n                        </button>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    "
    };

    var applicationsToRender = {
      // Обязательно сверху
      '#miniBasket': MiniBasket,
      '#pets': Pets,
      '#personalData': PersonalData,
      '#legalEntity': LegalEntity,
      '#salesReportPage': SalesReportPage,
      '#loyaltyStatusTale': LoyaltyStatusTale,
      // DetailOfferPage components
      '#offerSelect': SelectOffer,
      '#offerArticle': OfferArticle,
      '#offerSelectMobile': SelectOfferMobile,
      '#imageSlider': OfferImage,
      '#offerPrice': OfferPrice
    };

    var storesToLoad = {
      '#detailofferStore': {
        name: 'detailOfferStore',
        instance: detailOfferStore
      },
      '#basketStore': {
        name: 'basketStore',
        instance: useBasketStore
      },
      '#wishlistStore': {
        name: 'wishlistStore',
        instance: useWishlistStore
      }
    };

    function _createForOfIteratorHelper$1(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

    function _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }

    function _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
    var Loader = /*#__PURE__*/function () {
      function Loader() {
        babelHelpers.classCallCheck(this, Loader);
      }

      babelHelpers.createClass(Loader, [{
        key: "run",
        value: function run() {
          var pinia = ui_vue3_pinia.createPinia();
          window.stores = {};
          ui_vue3_pinia.setActivePinia(pinia);

          for (var dataRoot in storesToLoad) {
            this.loadStore(dataRoot, storesToLoad[dataRoot]);
          }

          for (var applicationRoot in applicationsToRender) {
            this.renderApplication(applicationRoot, applicationsToRender[applicationRoot], pinia);
          }
        }
      }, {
        key: "loadStore",
        value: function loadStore(root, store) {
          var storeInstance = store.instance();
          window.stores[store.name] = storeInstance;
          var rootElement = document.querySelector(root);

          if (rootElement) {
            var props = this.loadProperties(rootElement);

            for (var attributeName in props) {
              var data = props[attributeName];

              if (data) {
                // Для загрузки из атрибута store должен релизовывать метод load(имя_свойства, данные)
                // имя пропсы prop-some-name преобразуется в имя свойства someName
                storeInstance.load(attributeName, data);
              } else {
                console.log('Error getting data from root ' + root + ' ' + attributeName);
              }
            }
          }
        }
      }, {
        key: "loadProperties",
        value: function loadProperties(rootElement) {
          var props = {};

          var _iterator = _createForOfIteratorHelper$1(rootElement.attributes),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var attribute = _step.value;

              if (attribute.name.startsWith('prop-')) {
                var attributeName = attribute.name.substring(5).replace(/-./g, function (x) {
                  return x[1].toUpperCase();
                });

                try {
                  props[attributeName] = JSON.parse(attribute.value);
                } catch (error) {
                  props[attributeName] = attribute.value;
                }
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          return props;
        }
      }, {
        key: "renderApplication",
        value: function renderApplication(selector, component, pinia) {
          var elements = document.querySelectorAll(selector);

          if (elements && elements.length) {
            var _iterator2 = _createForOfIteratorHelper$1(elements),
                _step2;

            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                var element = _step2.value;
                var app = ui_vue3.BitrixVue.createApp(component, this.loadProperties(element));
                app.use(pinia);
                app.mount(element);
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
          }
        }
      }]);
      return Loader;
    }();

    exports.Loader = Loader;

}((this.Zolo = this.Zolo || {}),BX.Vue3,BX,BX,BX,BX,BX,BX.Vue3.Pinia));
//# sourceMappingURL=application.bundle.js.map
